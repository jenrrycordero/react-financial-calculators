{"version":3,"sources":["Utils.js","language.js","components/tooltip.jsx","components/inputGourp.jsx","components/tableHeader.jsx","components/tableBody.jsx","components/table.jsx","components/select.jsx","App.js","serviceWorker.js","index.js"],"names":["moneyFormatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","penniesFormatter","percentFormatter","Number","prototype","formatMoneyN","c","d","t","n","this","s","isNaN","Math","abs","undefined","i","parseInt","toFixed","j","length","substr","replace","slice","Util","percent","value","strNumber","toString","parseFloat","substring","money","amount","showPennies","arguments","withSymbol","format","test","digits","negative","multiplicator","pow","round","total","subtotal","floor","number","str","index","indexOf","time_n","is_month","time_result","roundTo","monthCount","lan","getPlural","word","one","other","m","y","result","push","en","es","ca","fr","join","num_years","currentYear","Date","getFullYear","years","cont","id","title","selected","months","current","monthName","setMonth","getMonth","auxMonths","map","item","setFullYear","translations","calculatorTitle","amountLabel","amountHelpText","monthlyDepositLabel","balance","interest","totalPrincipalPaid","totalInterestPaid","principalPaid","interestPaid","monthYearText","interestHelpText","payments","paymentSingular","paymentLower","monthlyPayments","interestLabel","monthly","yearText","yearPluralText","yearPluralTextCaipal","TimeToRepayText","totalBalanceText","totalInterestText","monthlyText","anuallyText","biweeklyText","biweeklyLowerText","loanAmount","termInYears","termInMonths","orText","dateHelpText","startDateText","startDateHelpText","moneyFieldError","percentageFieldError","yearsError","monthsError","timeError","estimatedPayoffDate","amortizationSchedule","startingDateEmptyText","selectDatePlaceholder","fullMonths","shortMonths","showAmortizationBtnText","hideAmortizationBtnText","withExtraPayments","withoutExtraPayments","showExtraPayments","hideExtraPayments","extraPaymentsText1","extraPaymentHelp1","extraPaymentHelp2","extraPaymentHelp3","extraPaymentLabel1","extraPaymentLabel2","extraPaymentLabel3","addExtraBtnTitle","extraLumpError","dateHelpMessage","amortizationTableHelp","Tooltip","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","hover","setState","react_default","a","createElement","className","onClick","handleTooltip","bind","onMouseOver","handleMouseInOut","onMouseOut","visibility","content","Component","InputGroup","_ref","label","name","placeholder","icon","iconPosition","isIntiger","tooltipContent","errorMsg","errorOccur","onChange","inputGroup","concat","react_number_format_es","thousandSeparator","allowNegative","onValueChange","values","singleField","Fragment","htmlFor","tooltip","TableHeader","columns","column","key","TableBody","data","row","bg_class","keys","columnKeyName","countDecimalPlaces","Table","tableHeader","tableBody","Dropdown","listOpen","close","assertThisInitialized","_this2","setTimeout","window","addEventListener","removeEventListener","timeOut","handleBPSelect","prevState","_this3","headerTitle","list","filter","toggleList","e","stopPropagation","selectItem","registerLocale","App","handleChange","properties","boxModel","objectSpread","showResults","_this$setState","tempPer","JSON","parse","stringify","forEach","currDate","currYear","currentMonth","extra_lump_month","extraLumpMonths","findIndex","obj","aux_showEPayError","extraLumpYears","defineProperty","handleTimeChange","_e$target","target","int_val","time_value","calculateMonthsYears","rest","str_number","split","keyUpHandlerTime","_e$target2","calculateAmortization","_this$state","startDate","extra_monthly_amount","extra_yearly_amount","extra_lump_amount","extraYearlyMonths","extra_yearly_month","extra_lump_year","monthly_interest","monthly_payment","monthly_payment_without_extra","total_interest","default_color","tr_bg_color","payment","temp_payment","term","term_date","aux_dates","next_month","next_year","interest_paid","principal_paid","amortizationTable","month_year","formatMoney","totalInterest","monthlyPayment","tableResults","dateToFinish","showEPayError","showAmortization","scrollTo","handleAmortizationAction","aux_showAmortization","handleExtraPaymentFields","auxTableResults","aux_showExtraPayments","renderResults","_this$state2","handleDateChange","date","console","log","possibleYears","getPossibleYears","languages","listOfMonths","getMonthds","tableColumns","preventDefault","selector","scroller","duration","delay","offset","smooth","_this$state3","_this$props","btnLabel","onSubmit","handleSubmit","inputGourp","type","disabled","components_select","display","react_datepicker_min_default","locale","minDate","maxDate","getEndLimitDate","isClearable","placeholderText","getDate","table","Boolean","location","hostname","match","Array","predicate","TypeError","o","len","thisArg","k","kValue","configurable","writable","VTLoanCalculator","init","_ref$selector","_ref$lan","_ref$btnLabel","_ref$title","calculator","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15aea052.chunk.js","sourcesContent":["var moneyFormatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n});\n\nvar penniesFormatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    /* minimumFractionDigits: 2,\n    maximumFractionDigits: 2,*/\n});\n\nvar percentFormatter = new Intl.NumberFormat('en-US', {\n    style: 'percent',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2,\n});\n\nNumber.prototype.formatMoneyN = function (c, d, t) { var n = this, c = isNaN(c = Math.abs(c)) ? 2 : c, d = d === undefined ? \".\" : d, t = t === undefined ? \",\" : t, s = n < 0 ? \"-\" : \"\", i = parseInt(n = Math.abs(+n || 0).toFixed(c)) + \"\", j = (j = i.length) > 3 ? j % 3 : 0; return s + (j ? i.substr(0, j) + t : \"\") + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : \"\") };\n\nexport default class Util {\n    static percentToValue(percent) {\n        var value = percent;\n        var strNumber = value.toString();\n\n        if (isNaN(value) || value < 0) {\n            return '';\n        }\n        if(value >= 101){\n            return parseFloat( strNumber.substring(0, strNumber.length - 1) );\n        }\n        if(value < 101){\n            return strNumber.substring(0, 4);\n        }\n        return value;\n    }\n\n    static moneyToValue(money) {\n        if (money === undefined) return '';\n        var value = parseInt(money.replace(/\\D/g, \"\"));\n        return !isNaN(value) ? value : '';\n    }\n\n    static moneyValue(amount, showPennies = false, withSymbol = true) {\n        if (amount === null || amount === '') return '';\n        var value = showPennies ? penniesFormatter.format(amount) : moneyFormatter.format(amount);\n        if (withSymbol === false) {\n            return value.substring(1);\n        }\n        return value;\n    }\n    static removeMoneyTrash(money){\n        return money.replace('$', '').replace(',', \"\");\n    }\n\n    static cleanNumberInput(value){\n        return /^-?\\d*[.,]?\\d*$/.test(value);\n    }\n\n    static valueIsInteger(value){\n        if(value === '-')\n            return true;\n        else\n            return /^\\d*$/.test(value) && !(/^0\\d+$/.test(value));\n    }\n\n    static formatMoney(value) {\n        return parseFloat(value.replace(/[^0-9.]/g, '')).formatMoneyN();\n    };\n\n    static roundTo(n, digits) {\n        var negative = false;\n        if (digits === undefined) {\n            digits = 0;\n        }\n            if( n < 0) {\n            negative = true;\n          n = n * -1;\n        }\n        var multiplicator = Math.pow(10, digits);\n        n = parseFloat((n * multiplicator).toFixed(11));\n        n = (Math.round(n) / multiplicator).toFixed(digits);\n        if( negative ) {\n            n = (n * -1).toFixed(2);\n        }\n        return n;\n    }\n\n    static percentValue(amount, withSymbol) {\n        if (amount === null || amount === '') return '';\n        var value = percentFormatter.format(amount);\n        if (withSymbol === false) {\n            return value.substring(0, value.length - 1);\n        }\n        return value;\n    }\n\n    static calculatePercent(total, subtotal){\n        let perc = '';\n        if(isNaN(total) || isNaN(subtotal)){\n            perc=' ';\n        }else{\n           perc = Math.floor( (subtotal/total) * 100 );\n        }\n\n        return perc;\n    }\n\n    static countDecimalPlaces(number) {\n        const str = \"\" + number;\n        const index = str.indexOf('.');\n        if (index >= 0) {\n            return str.length - index - 1;\n        } else {\n            return 0;\n        }\n    }\n\n    /*\n    * Converts months to years and years to months\n    * @param time_n (number): amount of time (number of months or years)\n    * @parram is_month (bool): use true to convert from months to years and false to get months from years\n    */\n    static calculateMonthsYears(time_n = 1, is_month = true) {\n        let time_result = Number(time_n) * 12;\n        if(is_month) {\n            time_result = this.roundTo( (Number(time_n) / 12), 1 );\n        }\n\n        return time_result;\n    }\n\n    static getDateFromNumberOfMonths(monthCount, lan) {\n        function getPlural(number, word) {\n            return number === 1 ? word.one : word.other;\n        }\n\n        const months = {\n            en:{\n                one: 'month',\n                other: 'months',\n            },\n            es:{\n                one: 'mes',\n                other: 'meses',\n            },\n            ca:{\n                one: 'month',\n                other: 'months',\n            },\n            fr:{\n                one: 'month',\n                other: 'months',\n            },\n        };\n        const years = {\n            en:{\n                one: 'year',\n                other: 'years',\n            },\n            es:{\n                one: 'año',\n                other: 'años',\n            },\n            ca:{\n                one: 'year',\n                other: 'years',\n            },\n            fr:{\n                one: 'year',\n                other: 'years',\n            },\n        };\n        const and = {\n            en: ' and ',\n            es: ' y ',\n        };\n\n        let m = monthCount % 12;\n        let y = Math.floor(monthCount / 12);\n        let result = [];\n\n        y && result.push(y + ' ' + getPlural(y, years[lan]));\n        m && result.push(m + ' ' + getPlural(m, months[lan]));\n\n        return result.join(and[lan]);\n    }\n\n    static getPossibleYears(num_years){\n        const current = new Date();\n        const currentYear = current.getFullYear();\n        let years = [];\n        let cont = 0;\n        for(let y = currentYear; y<currentYear+num_years; y++){\n            years.push({\n                id: cont,\n                title: y,\n                selected: cont === 0 ? 1 : 0\n            });\n\n            cont++;\n        }\n        return years;\n    }\n\n    static getMonthds( months ){\n        const current = new Date();\n        const nextDate = new Date( current.setMonth(current.getMonth() + 1) );\n        const nextMonth = nextDate.getMonth();\n        const monthName = months[nextMonth];\n\n        let auxMonths = [];\n        months.map( (item, index) => {\n            auxMonths.push({\n                id: index,\n                title: item,\n                selected: monthName === item ? 1 : 0\n            });\n        });\n        return auxMonths;\n    }\n\n    /* Function to get the start limit date */\n    static getStartLimitDate (n) {\n        return new Date(new Date().setMonth(new Date().getMonth() + n));\n    }\n\n    /* Function to get the next n years forward date */\n    static getEndLimitDate (n) {\n        return new Date(new Date().setFullYear(new Date().getFullYear() + n));\n    }\n}","const translations = {\n    en : {\n        calculatorTitle: 'Loan Calculator',\n        amountLabel: 'Amount',\n        amountHelpText: 'This is the total amount you wish to borrow.',\n        monthlyDepositLabel: 'Monthly Deposit',\n        balance: 'Balance',\n        interest: 'Interest',\n        totalPrincipalPaid: 'Total Principal Paid',\n        totalInterestPaid: 'Total Interest Paid',\n        principalPaid: 'Principal paid',\n        interestPaid: 'Interest paid',\n        monthYearText: 'Month/Year',\n        interestHelpText: 'This is the annual interest rate of your loan; it’s should be defined in your loan agreement.',\n        payments: 'Payments',\n        paymentSingular: 'Payment',\n        paymentLower: 'payments',\n        monthlyPayments: 'Monthly Payments',\n        interestLabel: 'Interest rate',\n        monthly: 'monthly',\n        yearText: 'year',\n        yearPluralText: 'years',\n        yearPluralTextCaipal: 'Years',\n        TimeToRepayText: 'Time to repay',\n        totalBalanceText: 'Total balance',\n        totalInterestText: 'Total interest',\n        monthlyText: 'Monthly',\n        anuallyText: 'Anually',\n        biweeklyText: \"Bi-weekly\",\n        biweeklyLowerText: \"bi-weekly\",\n        loanAmount: 'Loan Amount',\n        termInYears: 'Loan term in years',\n        termInMonths: 'or months',\n        orText: 'Or',\n        dateHelpText: 'The term of a loan is the amount of time you have to pay it off in full. Please choose a term in either years or months.',\n        startDateText: 'Start Date',\n        startDateHelpText: 'This is the date you will receive your funds. Payments usually begin the month after the start date.',\n        moneyFieldError: 'Use positive numbers less than 1 million.',\n        percentageFieldError: 'Use positive numbers less than 100.',\n        yearsError: 'Use real number of years (Less than 100).',\n        monthsError: 'Use real number of months (Less than 1200).',\n        timeError: 'Use real number of years and months (1 < years < 100 | 12 < months < 1200).',\n        estimatedPayoffDate: 'Estimated Payoff Date',\n        amortizationSchedule: 'Amortization Schedule',\n        startingDateEmptyText: 'There is no starting date selected.',\n        selectDatePlaceholder: 'Click to select a date',\n        fullMonths: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n        shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        showAmortizationBtnText: 'Show Amortization Schedule',\n        hideAmortizationBtnText: 'Hide Amortization Schedule',\n        withExtraPayments: 'With extra payments',\n        withoutExtraPayments: 'Without extra payments',\n        showExtraPayments: 'Add Extra Payments',\n        hideExtraPayments: 'Hide Extra Payments',\n        extraPaymentsText1: 'Enter an amount on one of the options below and click “Add Extra Payments” to see how it will change the monthly payment, interest paid and total cost of your loan.',\n        extraPaymentHelp1: 'Add a set amount of money that you will add to your monthly payment every month.',\n        extraPaymentHelp2: 'Make one extra payment every year on a set month.',\n        extraPaymentHelp3: 'Make a one-time extra payment on a designated month and year',\n        extraPaymentLabel1: 'add to your monthly payment',\n        extraPaymentLabel2: 'as an extra annual payment every:',\n        extraPaymentLabel3: 'as a one-time extra payment in:',\n        addExtraBtnTitle: 'Add Extra Payments',\n        extraLumpError: 'Extra payment cannot be made before the current date.',\n        dateHelpMessage: '*Please enter a date as: mm/dd/yyyy',\n        amortizationTableHelp: 'This table summarizes the repayment schedule of a loan, including dividing the monthly payment between principal and interest charges, total interest paid and the balance of the loan after each payment.',\n    },\n    es : {\n        calculatorTitle: 'Calculadora de Préstamos',\n        amountLabel: 'Monto',\n        amountHelpText: 'Es la cantidad total que desea tomar prestada.',\n        monthlyDepositLabel: 'Depósito Mensual',\n        balance: 'Balance',\n        interest: 'Interés',\n        totalPrincipalPaid: 'Total del monto principal pagado',\n        totalInterestPaid: 'Total del interés pagado',\n        principalPaid: 'Principal',\n        interestPaid: 'Interés pagado',\n        monthYearText: 'Mes/Año',\n        interestHelpText: 'Es la tasa de interés anual de su préstamo, que debe ser definida en el contrato del préstamo.',\n        payments: 'Pagos',\n        paymentSingular: 'Pago',\n        paymentLower: 'pagos',\n        monthlyPayments: 'Pagos mensuales',\n        interestLabel: 'Tasa de interés',\n        monthly: 'mensual',\n        yearText: 'año',\n        yearPluralText: 'años',\n        yearPluralTextCaipal: 'Años',\n        TimeToRepayText: 'Tiempo para pagar',\n        totalInterestText: 'Interés total',\n        monthlyText: 'Mensual',\n        anuallyText: 'Anual',\n        biweeklyText: \"Quincenal\",\n        loanAmount: 'Monto del préstamo',\n        termInYears: 'Término en años',\n        termInMonths: 'o meses',\n        orText: 'O',\n        dateHelpText: 'El término de un préstamo es la cantidad de tiempo que usted tendrá para pagar el total del monto. Por favor escoja un término en años o meses.',\n        startDateText: 'Fecha de Comienzo',\n        startDateHelpText: 'Es la fecha en que usted recibirá el dinero prestado. Usualmente los pagos comienzan el mes siguiente luego de la fecha de comienzo.',\n        moneyFieldError: 'Use números positivos menores que 1 millón.',\n        percentageFieldError: 'Use números positivos menores que 100',\n        yearsError: 'Use una cantidad real de años. No se permiten puntos.',\n        monthsError: 'Use una cantidad real de meses (menos de 1200).',\n        timeError: 'Use un número real de años o meses (años <100 | meses <1200).',\n        estimatedPayoffDate: 'Fecha Estimada de su Pago Final',\n        amortizationSchedule: 'Plan de amortización',\n        startingDateEmptyText: 'No hay una fecha de inicio seleccionada.',\n        selectDatePlaceholder: 'Seleccione una fecha',\n        fullMonths: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],\n        shortMonths: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],\n        showAmortizationBtnText: 'Ver tabla de amortización',\n        hideAmortizationBtnText: 'Ocultar tabla de amortización',\n        withExtraPayments: 'Con pagos extras',\n        withoutExtraPayments: 'Sin pagos extras',\n        showExtraPayments: 'Añadir Pagos Adicionales',\n        hideExtraPayments: 'Ocultar Pagos Extras',\n        extraPaymentsText1: 'Ingrese la cantidad en una de las alternativas abajo, luego haga click en “Añadir Pagos Adicionales” para ver cómo cambia su pago mensual, el interés pagado y el costo total de su préstamo.',\n        extraPaymentHelp1: 'Añadir una cantidad de dinero determinada a su pago mensual.',\n        extraPaymentHelp2: 'Hacer un pago adicional cada año, en un mes determinado.',\n        extraPaymentHelp3: 'Hacer un pago adicional por única vez en un mes y año determinados.',\n        extraPaymentLabel1: 'añadir a su pago mensual',\n        extraPaymentLabel2: 'como un pago anual extra cada:',\n        extraPaymentLabel3: 'como un pago único extra en:',\n        addExtraBtnTitle: 'Adicionar pagos extras',\n        extraLumpError: 'El pago adicional no puede hacerse antes de la fecha actual.',\n        dateHelpMessage: '*Por favor ingrese la fecha en formato mm/dd/año (el año debe tener cuatro dígitos)',\n        amortizationTableHelp: 'Esta tabla resume el plan de pagos de un préstamo, incluyendo el desglose del pago mensual entre el balance principal y los cargos por interés, el interés total pagado y el balance del préstamo luego de cada pago.',\n    },\n    ca : {\n        calculatorTitle: 'Loan Calculator',\n        amountLabel: 'Amount',\n        amountHelpText: 'This is the total amount you wish to borrow.',\n        monthlyDepositLabel: 'Monthly Deposit',\n        balance: 'Balance',\n        interest: 'Interest',\n        totalPrincipalPaid: 'Total Principal Paid',\n        totalInterestPaid: 'Total Interest Paid',\n        principalPaid: 'Principal paid',\n        interestPaid: 'Interest paid',\n        monthYearText: 'Month/Year',\n        interestHelpText: 'This is the annual interest rate of your loan; it’s should be defined in your loan agreement.',\n        payments: 'Payments',\n        paymentSingular: 'Payment',\n        paymentLower: 'payments',\n        monthlyPayments: 'Monthly Payments',\n        interestLabel: 'Interest rate',\n        monthly: 'monthly',\n        yearText: 'year',\n        yearPluralText: 'years',\n        yearPluralTextCaipal: 'Years',\n        TimeToRepayText: 'Time to repay',\n        totalBalanceText: 'Total balance',\n        totalInterestText: 'Total interest',\n        monthlyText: 'Monthly',\n        anuallyText: 'Anually',\n        biweeklyText: \"Bi-weekly\",\n        loanAmount: 'Loan Amount',\n        termInYears: 'Loan term in years',\n        termInMonths: 'or months',\n        orText: 'Or',\n        dateHelpText: 'The term of a loan is the amount of time you have to pay it off in full. Please choose a term in either years or months.',\n        startDateText: 'Start Date',\n        startDateHelpText: 'This is the date you will receive your funds. Payments usually begin the month after the start date.',\n        moneyFieldError: 'Use positive numbers less than 1 million.',\n        percentageFieldError: 'Use positive numbers less than 100.',\n        yearsError: 'Use real number of years (Less than 100).',\n        monthsError: 'Use real number of months (Less than 1200).',\n        timeError: 'Use real number of years and months (1 < years < 100 | 12 < months < 1200).',\n        estimatedPayoffDate: 'Estimated Payoff Date',\n        amortizationSchedule: 'Amortization Schedule',\n        startingDateEmptyText: 'There is no starting date selected.',\n        selectDatePlaceholder: 'Click to select a date',\n        fullMonths: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n        shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        showAmortizationBtnText: 'Show Amortization Schedule',\n        hideAmortizationBtnText: 'Hide Amortization Schedule',\n        withExtraPayments: 'With extra payments',\n        withoutExtraPayments: 'Without extra payments',\n        showExtraPayments: 'Add Extra Payments',\n        hideExtraPayments: 'Hide Extra Payments',\n        extraPaymentsText1: 'Enter an amount on one of the options below and click “Add Extra Payments” to see how it will change the monthly payment, interest paid and total cost of your loan.',\n        extraPaymentHelp1: 'Add a set amount of money that you will add to your monthly payment every month.',\n        extraPaymentHelp2: 'Make one extra payment every year on a set month.',\n        extraPaymentHelp3: 'Make a one-time extra payment on a designated month and year',\n        extraPaymentLabel1: 'add to your monthly payment',\n        extraPaymentLabel2: 'as an extra annual payment every:',\n        extraPaymentLabel3: 'as a one-time extra payment in:',\n        addExtraBtnTitle: 'Add Extra Payments',\n        extraLumpError: 'Extra payment cannot be made before the current date.',\n        dateHelpMessage: '*Please enter a Date as: mm/dd/yyyy',\n        amortizationTableHelp: 'This table summarizes the repayment schedule of a loan, including dividing the monthly payment between principal and interest charges, total interest paid and the balance of the loan after each payment.',\n    },\n    fr : {\n        calculatorTitle: 'Loan Calculator',\n        amountLabel: 'Amount',\n        amountHelpText: 'This is the total amount you wish to borrow.',\n        monthlyDepositLabel: 'Monthly Deposit',\n        balance: 'Balance',\n        interest: 'Interest',\n        totalPrincipalPaid: 'Total Principal Paid',\n        totalInterestPaid: 'Total Interest Paid',\n        principalPaid: 'Principal paid',\n        interestPaid: 'Interest paid',\n        monthYearText: 'Month/Year',\n        interestHelpText: 'This is the annual interest rate of your loan; it’s should be defined in your loan agreement.',\n        payments: 'Payments',\n        paymentSingular: 'Payment',\n        paymentLower: 'payments',\n        monthlyPayments: 'Monthly Payments',\n        interestLabel: 'Interest rate',\n        monthly: 'monthly',\n        yearText: 'year',\n        yearPluralText: 'years',\n        yearPluralTextCaipal: 'Years',\n        TimeToRepayText: 'Time to repay',\n        totalBalanceText: 'Total balance',\n        totalInterestText: 'Total interest',\n        monthlyText: 'Monthly',\n        anuallyText: 'Anually',\n        biweeklyText: \"Bi-weekly\",\n        loanAmount: 'Loan Amount',\n        termInYears: 'Term in years',\n        termInMonths: 'or months',\n        orText: 'Or',\n        dateHelpText: 'The term of a loan is the amount of time you have to pay it off in full. Please choose a term in either years or months.',\n        startDateText: 'Start Date',\n        startDateHelpText: 'This is the date you will receive your funds. Payments usually begin the month after the start date.',\n        moneyFieldError: 'Use positive numbers less than 1 million.',\n        percentageFieldError: 'Use positive numbers less than 100.',\n        yearsError: 'Use real number of years (Less than 100).',\n        monthsError: 'Use real number of months (Less than 1200).',\n        timeError: 'Use real number of years and months (1 < years < 100 | 12 < months < 1200).',\n        estimatedPayoffDate: 'Estimated Payoff Date',\n        amortizationSchedule: 'Amortization Schedule',\n        startingDateEmptyText: 'There is no starting date selected.',\n        selectDatePlaceholder: 'Click to select a date',\n        fullMonths: ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'],\n        shortMonths: ['Jan', 'Fév', 'Mar', 'Avr', 'Mai', 'Jui', 'Juil', 'Aoû', 'Sep', 'Oct', 'Nov', 'Déc'],\n        showAmortizationBtnText: 'Show Amortization Schedule',\n        hideAmortizationBtnText: 'Hide Amortization Schedule',\n        withExtraPayments: 'With extra payments',\n        withoutExtraPayments: 'Without extra payments',\n        showExtraPayments: 'Add Extra Payments',\n        hideExtraPayments: 'Hide Extra Payments',\n        extraPaymentsText1: 'Enter an amount on one of the options below and click “Add Extra Payments” to see how it will change the monthly payment, interest paid and total cost of your loan.',\n        extraPaymentHelp1: 'Add a set amount of money that you will add to your monthly payment every month.',\n        extraPaymentHelp2: 'Make one extra payment every year on a set month.',\n        extraPaymentHelp3: 'Make a one-time extra payment on a designated month and year',\n        extraPaymentLabel1: 'add to your monthly payment',\n        extraPaymentLabel2: 'as an extra annual payment every:',\n        extraPaymentLabel3: 'as a one-time extra payment in:',\n        addExtraBtnTitle: 'Add Extra Payments',\n        extraLumpError: 'Extra payment cannot be made before the current date.',\n        dateHelpMessage: '*Please enter a valid Date format (mm/dd/year)',\n        amortizationTableHelp: 'This table summarizes the repayment schedule of a loan, including dividing the monthly payment between principal and interest charges, total interest paid and the balance of the loan after each payment.',\n    },\n\n};\n\nexport default function getTranslations(lan) {\n    return translations[lan];\n}","import React, { Component } from 'react';\n\nclass Tooltip extends Component{\n\n    constructor(props) {\n        super(props)\n        this.state = { hover: false }\n    }\n\n    handleMouseInOut() {\n        this.setState({ hover: !this.state.hover })\n    }\n\n    handleTooltip() {\n        this.setState({ hover: !this.state.hover })\n    }\n\n    render() {\n        return(\n            <div className=\"tooltipContainer\">\n                <div\n                    className='helpMiniDisk'\n                    onClick={this.handleTooltip.bind(this)}\n                    onMouseOver={this.handleMouseInOut.bind(this)}\n                    onMouseOut={this.handleMouseInOut.bind(this)}\n                >?</div>\n                <div className=\"customTooltip\" style={{visibility: this.state.hover ? 'visible' : 'hidden' }}>{this.props.content}</div>\n            </div>\n        )\n    }\n}\nexport default Tooltip;","import React from 'react';\nimport Tooltip from './tooltip.jsx';\nimport NumberFormat from 'react-number-format';\nimport '../styles/inputGroup.css';\n\nconst InputGroup = ({id, label, name, value, placeholder, icon, isIntiger, iconPosition, tooltipContent, errorMsg, errorOccur, onChange}) => {\n\n    let inputGroup = (\n        <div className=\"input-group\">\n            <div className=\"input-group-prepend\">\n                <span className={`input-group-text ${errorOccur ? 'inputIconError' : '' }`}>{icon}</span>\n            </div>\n\n            <NumberFormat\n                id={id}\n                name={name}\n                value={value}\n                className={`form-control ${errorOccur ? 'inputError' : '' }`}\n                placeholder={placeholder}\n                thousandSeparator={true}\n                allowNegative={false}\n                onValueChange={ (values) => {\n                    //values is an object that contains:\n                    // formattedValue = $2,223\n                    // value ie, 2223\n                    const {value} = values;\n\n                    onChange({name: name, value: value});\n                }}\n            />\n        </div>\n    );\n\n    if(iconPosition === 'right'){\n        inputGroup = (\n            <div className=\"input-group\">\n                <NumberFormat\n                    id={id}\n                    name={name}\n                    value={value}\n                    className={`form-control ${errorOccur ? 'inputError' : '' }`}\n                    placeholder={placeholder}\n                    thousandSeparator={true}\n                    allowNegative={false}\n                    onValueChange={ (values) => {\n                        const {value} = values;\n                        onChange({name: name, value: value});\n                    }}\n                />\n                <div className=\"input-group-append\">\n                    <span className={`input-group-text ${errorOccur ? 'inputIconError' : '' }`}>{icon}</span>\n                </div>\n            </div>\n        );\n    }\n\n    let singleField = (\n        <NumberFormat\n            id={id}\n            name={name}\n            value={value}\n            className={`form-control ${errorOccur ? 'inputError' : '' }`}\n            placeholder={placeholder}\n            thousandSeparator={false}\n            allowNegative={false}\n            onValueChange={ (values) => {\n                const {value} = values;\n                onChange({name: name, value: value});\n            }}\n        />\n    );\n\n    return (\n        <React.Fragment>\n            { label &&\n                (<label htmlFor={id} className=\"col-12 loan-label\">\n                    <Tooltip content={tooltipContent} /> {label}\n                </label>)\n            }\n\n\n            <div className=\"col-12\">\n                { icon ? inputGroup : singleField}\n                <small className={`inputErrorText ${errorOccur ? 'show' : 'hide' }`}>{errorMsg}</small>\n            </div>\n        </React.Fragment>\n    )\n\n};\n\nexport default InputGroup;","import React from \"react\";\n\nconst TableHeader = ({columns}) => {\n  return (\n        <thead>\n            <tr>\n                { columns.map(column => <th key={column}>{column}</th>) }\n            </tr>\n        </thead>\n  );\n}\n\nexport default TableHeader;\n","import React from \"react\";\nimport Util from '../Utils'\n\nconst TableBody = ({data}) => {\n    /* let aux_data = data;\n    aux_data = aux_data.map(row => {\n        return row.splice(-1,1);\n    } );\n    arr.splice(-1,1) */\n\n    return (\n      <tbody>\n        {data.map((row, index)  => {\n                return (\n                    <tr key={index+'_row'} className={row.bg_class}>\n                    { Object.keys(row).map((columnKeyName, i) => ( columnKeyName !== 'bg_class' &&\n                        <td key={index+'_'+i+'cell'}>\n                        { row[columnKeyName] }\n                        { i > 0 && Util.countDecimalPlaces(row[columnKeyName]) === 1 && '0' }\n                        </td>\n                    )) }\n                    </tr>\n                );\n            }\n\n        )}\n      </tbody>\n    );\n}\n\nexport default TableBody;\n","import React from \"react\";\nimport TableHeader from \"./tableHeader.jsx\";\nimport TableBody from \"./tableBody.jsx\";\n\nconst Table = ({ columns, data }) => {\n  return (\n    <table className=\"table table-bordered table-hover\">\n      <TableHeader columns={columns}/>\n      <TableBody data={data} />\n    </table>\n  );\n};\n\nexport default Table;","import React, { Component } from \"react\";\nimport \"../styles/select.css\";\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listOpen: false\n    };\n    this.close = this.close.bind(this);\n  }\n\n  componentDidUpdate() {\n    setTimeout(() => {\n      this.state.listOpen\n        ? window.addEventListener(\"click\", this.close)\n        : window.removeEventListener(\"click\", this.close);\n    }, 0);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"click\", this.close);\n  }\n\n  close(timeOut) {\n    this.setState({ listOpen: false });\n  }\n\n  selectItem(id) {\n    this.setState( {listOpen: false}, this.props.handleBPSelect(id, this.props.name) );\n  }\n\n  toggleList() {\n    this.setState(prevState => ({\n      listOpen: !prevState.listOpen\n    }));\n  }\n\n  render() {\n    const { listOpen } = this.state;\n    const headerTitle = this.props.list.filter(item => item.selected)[0].title;\n    //const headerSubTitle = this.props.list.filter(item => item.selected)[0].subtitle;\n\n    return (\n      <div className=\"dd-wrapper\">\n        <div className=\"dd-header\" onClick={() => this.toggleList()}>\n          <div className=\"dd-header-title\">\n            <span>{headerTitle}</span>\n          </div>\n          {listOpen ? (\n            <i className=\"select-arrow up\" />\n          ) : (\n            <i className=\"select-arrow down\" />\n          )}\n        </div>\n        {listOpen && (\n          <ul className=\"dd-list\" onClick={e => e.stopPropagation()}>\n            {this.props.list.map(item => (\n              <li\n                className={\n                  item.selected ? \"dd-list-item selected\" : \"dd-list-item\"\n                }\n                key={item.id}\n                onClick={() => this.selectItem(item.id)}\n              >\n                <span>{item.title}</span>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;","import React, { Component } from 'react';\nimport DatePicker, {registerLocale} from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { scroller } from 'react-scroll';\n\n//Setting Up Location\nimport es from 'date-fns/locale/es';\n\nimport Util from \"./Utils\";\nimport getTranslations from './language';\nimport InputGroup from './components/inputGourp';\nimport Table from './components/table.jsx'\nimport Tooltip from './components/tooltip.jsx';\nimport Dropdown from \"./components/select\";\n\nimport './App.css';\n\nregisterLocale('es', es);\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n\n        /* const aux_dates = new Date();\n        const currentNextDate = new Date( aux_dates.setMonth(aux_dates.getMonth() + 1) ); */\n        const possibleYears = Util.getPossibleYears(50);\n        const languages = getTranslations(props.lan);\n        const listOfMonths = Util.getMonthds( languages.fullMonths );\n\n        this.state = {\n            lan : props.lan,\n            translations : languages,\n            startDate: new Date(),\n            amount: 5000,\n            years: 3,\n            months: 36,\n            interest: 3,\n            extra_monthly_amount: 0,\n            extra_yearly_amount: 0,\n            extra_lump_amount: 0,\n            extraYearlyMonths: listOfMonths,\n            extraLumpMonths: listOfMonths,\n            extraLumpYears: possibleYears,\n\n            monthlyPayment: 0,\n\n            tableColumns : [\n                languages.monthYearText,\n                languages.paymentSingular,\n                languages.principalPaid,\n                languages.interestPaid,\n                languages.totalInterestText,\n                languages.balance+' ',\n            ],\n            tableResults : [],\n            dateToFinish : new Date(),\n            showResults  : false,\n            showAmortization: false,\n            showExtraPayments: false,\n            showEPayError: false,\n        };\n\n    }//End of Constructor\n\n    handleChange = (properties) => {\n        let boxModel = {...this.state};\n        boxModel[properties.name] = properties.value;\n\n        if((properties.name === 'extra_monthly_amount' || properties.name === 'extra_yearly_amount' || properties.name === 'extra_lump_amount') && boxModel.showResults === true ){\n            boxModel.showResults = true;\n        }else{\n            boxModel.showResults = false;\n        }\n\n        this.setState(boxModel);\n    }\n\n    handleBPSelect = (id, name) => {\n        //Updating List of Monthds\n        let tempPer = JSON.parse(JSON.stringify(this.state[name]));\n        tempPer.forEach(item => (item.selected = false));\n        tempPer[id].selected = true;\n\n        const currDate = new Date();\n        const currYear = currDate.getFullYear();\n        const currentMonth = currDate.getMonth();\n        const extra_lump_month = this.state.extraLumpMonths.findIndex(obj => obj.selected);\n        let aux_showEPayError = false;\n        if(name === 'extraLumpYears' && tempPer[id].title === currYear && extra_lump_month < currentMonth){\n            aux_showEPayError = true;\n        }else{\n            if( name === 'extraLumpMonths' && this.state.extraLumpYears.filter(y => y.selected)[0].title === currYear && this.state.extraLumpMonths.findIndex(obj => obj.title === tempPer[id].title) < currentMonth ){\n                aux_showEPayError = true;\n            }\n        }\n\n        this.setState({ [name]: tempPer, showEPayError: aux_showEPayError });\n    };\n\n    handleTimeChange = (e) => {\n        const {name, value} = e.target;\n        let int_val = Math.floor(value);\n        let time_value = 0;\n        if(name === 'years') {\n            time_value = Util.calculateMonthsYears(int_val, false);\n            this.setState( {years: int_val, months: time_value, showResults: false } );\n        }else{\n            time_value = Util.calculateMonthsYears(int_val);\n            let rest = time_value - Math.floor(time_value);\n            let str_number = time_value.toString();\n            if(rest === 0){\n                str_number = str_number.split(\".\")[0];\n            }\n            this.setState( {months: int_val, years: str_number, showResults: false } );\n        }\n    }\n\n    keyUpHandlerTime = (e) => {\n        const {name, value} = e.target;\n        let int_val = Math.floor(value);\n        this.setState( {[name]: int_val} );\n    }\n\n    calculateAmortization = () => {\n        let { amount,\n            interest,\n            months,\n            startDate,\n            extra_monthly_amount,\n            extra_yearly_amount,\n            extra_lump_amount,\n            extraYearlyMonths,\n            extraLumpMonths,\n            extraLumpYears,\n            translations } = this.state;\n\n        let extra_yearly_month = extraYearlyMonths.findIndex(obj => obj.selected);\n        let extra_lump_month = extraLumpMonths.findIndex(obj => obj.selected);\n        let extra_lump_year = Number(extraLumpYears.filter(obj => obj.selected)[0].title);\n\n        let monthly_interest = Number(interest) / 100 / 12;\n        let monthly_payment = ( (monthly_interest * Number(amount) ) * Math.pow(1 + monthly_interest, Number(months)) ) / ( Math.pow((1+monthly_interest), Number(months) ) - 1 );\n        let monthly_payment_without_extra = monthly_payment;\n\n        let total_interest = 0;\n        let default_color = 'trbg-default';\n        let tr_bg_color = default_color;\n\n        if(extra_monthly_amount){\n            monthly_payment += Number(extra_monthly_amount);\n            default_color = 'trbg-lblue';\n        }\n\n        let payment = Number(monthly_payment);\n        let temp_payment = payment;\n\n        let term = months;\n        let term_date = '';\n        let aux_dates = '';\n        let next_month = '';\n        let next_year = '';\n        let interest_paid = '';\n        let principal_paid = 0;\n        let amortizationTable = [];\n\n\t    for(let n=0; n<term; n++) {\n            tr_bg_color = default_color;\n\n            aux_dates = new Date(startDate);\n            term_date = new Date( aux_dates.setMonth(aux_dates.getMonth() + n+1) );\n            next_month = term_date.getMonth();\n            next_year = term_date.getFullYear();\n\n\t\t    if( extra_yearly_amount && extra_yearly_month === next_month ){\n                payment += Number(extra_yearly_amount);\n\n                if( extra_lump_amount && extra_lump_amount !== \"0\" && extra_lump_month === next_month && extra_lump_year === next_year ){\n                    tr_bg_color = \"trbg-lgreen\";\n                }else{\n                    tr_bg_color = \"trbg-lsky\";\n                }\n            }else{\n                if( extra_lump_amount && extra_lump_month === next_month && extra_lump_year === next_year ){\n                    payment += Number(extra_lump_amount);\n                    tr_bg_color = \"trbg-lgreen\";\n                }else{\n                    payment = temp_payment;\n                }\n            }\n\n            interest_paid = amount * monthly_interest;\n            principal_paid = Number(payment) - Number(interest_paid);\n\n\t\t    if(amount < principal_paid){\n\t\t\t    principal_paid = amount;\n\t\t\t    payment = principal_paid + Number(interest_paid);\n\t\t    }\n\n\t\t    amount -= principal_paid;\n            total_interest += interest_paid;\n\n            amortizationTable.push({\n                month_year: translations.shortMonths[next_month]+' - '+next_year,\n                payment: '$' + Util.formatMoney( Util.roundTo(payment, 2) ),\n                principalPaid: '$' + Util.formatMoney( Util.roundTo(principal_paid, 2) ),\n                interestPaid: '$' + Util.formatMoney( Util.roundTo(interest_paid, 2) ),\n                totalInterest: '$' + Util.formatMoney( Util.roundTo(total_interest, 2) ),\n                balance: '$' + Util.formatMoney( Util.roundTo(amount, 2) ),\n                bg_class: tr_bg_color,\n            });\n\n\t\t    if(amount <= 0){\n\t\t\t    break;\n            }\n\n        }\n\n\n        const currDate = new Date();\n        const currYear = currDate.getFullYear();\n        const currentMonth = currDate.getMonth();\n\n        let aux_showEPayError = false;\n        if( extraLumpYears.filter(y => y.selected)[0].title === currYear && extra_lump_month < currentMonth){\n            aux_showEPayError = true;\n        }\n\n        this.setState({\n            monthlyPayment: monthly_payment_without_extra,\n            tableResults: amortizationTable,\n            dateToFinish: term_date,\n            showResults: true,\n            showEPayError: aux_showEPayError,\n        }, () => {\n            if(this.state.showAmortization){\n                this.scrollTo('loanPaymentResults');\n            }\n        });\n\n    }\n\n    handleSubmit(e){\n        e.preventDefault();\n        this.calculateAmortization();\n    }\n\n    handleAmortizationAction = () => {\n        let aux_showAmortization = this.state.showAmortization;\n        aux_showAmortization = !aux_showAmortization;\n\n        this.setState({showAmortization : aux_showAmortization}, () => this.scrollTo('loanPaymentResults') );\n    }\n\n    handleExtraPaymentFields = () => {\n        let auxTableResults = JSON.parse(JSON.stringify(this.state.tableResults));\n\n        let aux_showExtraPayments = this.state.showExtraPayments;\n        aux_showExtraPayments = !aux_showExtraPayments;\n        if(aux_showExtraPayments){\n            this.setState({showExtraPayments : aux_showExtraPayments});\n        }else{\n            auxTableResults.forEach(row => (row.bg_class = 'trbg-default'));\n\n            this.setState({showExtraPayments : aux_showExtraPayments, extra_monthly_amount: 0, extra_yearly_amount: 0, extra_lump_amount: 0, tableResults: auxTableResults }, () => {\n                this.scrollTo('renderResultTitle');\n                this.calculateAmortization();\n            });\n        }\n    }\n\n    renderResults = () => {\n        const {amount, monthlyPayment, tableResults, translations, showAmortization} = this.state;\n\n        return (\n            <div className=\"mt-3 col-sm-5 col-lg-7 col-xl-5 text-center\">\n                <h3 className=\"loan-titles\" id=\"renderResultTitle\">{translations.monthlyPayments}</h3>\n                <div className=\"mp-result mb-5\">\n                    <div className=\"mp-dolar-sign\">$</div>\n                    <div className=\"mp-dolar-numbers\">{Util.formatMoney( Util.roundTo(monthlyPayment, 2) )}</div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col-8\">{translations.totalPrincipalPaid}</div>\n                    <div className=\"col-4 text-black\">{ '$' + Util.formatMoney( Util.roundTo(amount, 2) ) }</div>\n                </div>\n\n                <hr className=\"mp-results-line\" />\n\n                <div className=\"row\">\n                    <div className=\"col-8\">{translations.totalInterestPaid}</div>\n                    <div className=\"col-4 text-black\">{ tableResults[tableResults.length-1].totalInterest }</div>\n                </div>\n                <button className=\"btn loan-btn-go-table\" onClick={this.handleAmortizationAction}>\n                    {showAmortization ? translations.hideAmortizationBtnText : translations.showAmortizationBtnText }\n                    <i className={showAmortization ? \"arrow up\" : \"arrow down\"}></i>\n                </button>\n            </div>\n        );\n    }\n\n    handleDateChange = date => {\n        console.log(date);\n\n        this.setState({ startDate: date }, () => { this.calculateAmortization() });\n    };\n\n    scrollTo(selector) {\n        scroller.scrollTo(selector, {\n            duration: 800,\n            delay: 0,\n            offset: -100,\n            smooth: 'easeInOutQuart',\n        })\n    }\n\n    render() {\n\n        const {amount, interest, years, months, translations, extra_monthly_amount, extra_yearly_amount, extra_lump_amount, extraYearlyMonths, extraLumpMonths, extraLumpYears} = this.state;\n        const {title, btnLabel} = this.props;\n        return (\n            <div className=\"container loan-calculator-wrapper\">\n\n                <div className=\"row justify-content-center loan-form-container\">\n                    <div className=\"col-xs-12 col-sm-7 col-lg-5\">\n                        <h3 className=\"loan-titles\">{title ? title : translations.calculatorTitle}</h3>\n\n                        <form id=\"mbp-calculator\" onSubmit={this.handleSubmit.bind(this)} >\n\n                            <div className=\"row form-group mt-3\">\n                                <InputGroup\n                                    id='biweekly_amount'\n                                    label={translations.loanAmount}\n                                    name='amount'\n                                    value={amount}\n                                    icon='$'\n                                    iconPosition='left'\n                                    tooltipContent={translations.amountHelpText}\n                                    errorOccur={(Number(amount) < 1 || Number(amount) > 1000000 || amount === '') ? 1 : 0}\n                                    errorMsg={translations.moneyFieldError}\n                                    onChange={this.handleChange}\n                                />\n                            </div>\n\n                            <div className=\"row no-gutters\">\n                                <div className=\"col-6 form-group mt-3\">\n                                    <Tooltip content={ translations.dateHelpText } />\n                                    <label htmlFor=\"biweekly_years\" className=\"year-label\">{translations.termInYears}</label>\n                                    <div className=\"pr-2\">\n                                        <input\n                                            id = \"biweekly_years\"\n                                            name = \"years\"\n                                            className = {`form-control ${ (years < 1 || years > 100 || years === '') ? 'inputError' : '' }`}\n                                            value = {years >= 1 ? years : ''}\n                                            onChange = {this.handleTimeChange}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className=\"col-6 form-group mt-3\">\n                                    <label htmlFor=\"biweekly_months\" className=\"month-label pl-1\">{translations.termInMonths}</label>\n                                    <div className=\"pl-1\">\n                                        <input\n                                            id = \"biweekly_months\"\n                                            name = \"months\"\n                                            className = {`form-control ${ (months < 1 || months > 1200 || months === '') ? 'inputError' : '' }`}\n                                            value = {months >= 1 ? months : ''}\n                                            onChange = {this.handleTimeChange}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className=\"col-12\">\n                                    <small className={`inputErrorText ${ (years < 1 || years > 100 || years === '' || months < 1 || months > 1200 || months === '') ? 'show' : 'hide' }`}>{translations.timeError}</small>\n                                </div>\n                            </div>\n\n                            <div className=\"row form-group mt-3\">\n                                <InputGroup\n                                    id='ssc_interest'\n                                    label={translations.interestLabel}\n                                    name='interest'\n                                    value={interest}\n                                    icon='%'\n                                    iconPosition='right'\n                                    tooltipContent={translations.interestHelpText}\n                                    errorOccur={(Number(interest) <= 0 || Number(interest) > 100 || interest === '') ? 1 : 0}\n                                    errorMsg={translations.percentageFieldError}\n                                    onChange={this.handleChange}\n                                />\n                            </div>\n\n                            <div className=\"mt-4 mb-3\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-secondary btn-block\"\n                                    disabled={ Number(amount)    < 1 || Number(amount)   > 1000000 || amount === ''   ||\n                                               Number(years)     < 1 || Number(years)    > 100     || years === ''    ||\n                                               Number(months)    < 1 || Number(months)   > 1200    || months === ''   ||\n                                               Number(interest) <= 0 || Number(interest) > 100     || interest === '' }\n                                >\n                                    { btnLabel }\n                                </button>\n                            </div>\n\n                        </form>\n                    </div>\n\n                    {/* Showing monthly payment results */}\n                    {this.state.showResults && this.state.monthlyPayment && this.renderResults()}\n\n                    <div className=\"col-xs-12 col-xl-10 mt-2\">\n                        <div className=\"Collapsible\">\n                            <div className=\"Collapsible__trigger\" onClick={this.handleExtraPaymentFields} >\n                                { this.state.showExtraPayments ?\n                                    (<span>{translations.hideExtraPayments} <i className=\"arrow up\"></i></span>) :\n                                    (<span>{translations.showExtraPayments} <i className=\"arrow down\"></i></span>)\n                                }\n                            </div>\n\n                            <div className={ `container pb-4 Collapsible__contentOuter ${this.state.showExtraPayments ? \"is-open\" : \"is-closed\"}` }>\n                                <div className=\"row\">\n                                    <div className=\"col-xs-12 mt-3 mb-3\">\n                                        <p className=\"extra-fields-label\">{translations.extraPaymentsText1}</p>\n                                        {/* <p>Note: <em>Choose one option below or any combination of options</em> to calculate the impact of extra mortgage loan payments. If you fill in all of the options, the amounts shown will be recalculated with the assumption you are choosing to use all three repayment options together.</p> */}\n                                    </div>\n                                </div>\n                                <div className=\"row form-group no-gutters extra-payments-row trbg-lblue\">\n                                    <Tooltip content={ translations.extraPaymentHelp1 } />\n                                    <div className=\"col-md-3\">\n                                        <InputGroup\n                                            id='extra_monthly_amount'\n                                            name='extra_monthly_amount'\n                                            value={extra_monthly_amount}\n                                            icon='$'\n                                            iconPosition='left'\n                                            onChange={this.handleChange}\n                                        />\n                                    </div>\n                                    <div className=\"col-sm-8 p-15\">\n                                        <label htmlFor=\"extra_monthly_amount\" className=\"extra-fields-label dark-label\">{translations.extraPaymentLabel1}</label>\n                                    </div>\n                                </div>\n                                <div className=\"row form-group no-gutters extra-payments-row mt-4 trbg-lsky\">\n                                    <Tooltip content={ translations.extraPaymentHelp2 } />\n                                    <div className=\"col-md-3\">\n                                        <InputGroup\n                                            id='extra_yearly_amount'\n                                            name='extra_yearly_amount'\n                                            value={extra_yearly_amount}\n                                            icon='$'\n                                            iconPosition='left'\n                                            onChange={this.handleChange}\n                                        />\n                                    </div>\n                                    <div className=\"col-md-6 p-15\">\n                                        <label htmlFor=\"extra_yearly_amount\" className=\"extra-fields-label dark-label\">{translations.extraPaymentLabel2}</label>\n                                    </div>\n                                    <div className=\"col-md-3\">\n                                        <Dropdown\n                                            name=\"extraYearlyMonths\"\n                                            list={extraYearlyMonths}\n                                            handleBPSelect={this.handleBPSelect}\n                                        />\n                                    </div>\n                                </div>\n                                <div className=\"row form-group no-gutters extra-payments-row mt-4 trbg-lgreen\">\n                                    <Tooltip content={ translations.extraPaymentHelp3 } />\n                                    <div className=\"col-md-3\">\n                                        <InputGroup\n                                            id='extra_lump_amount'\n                                            name='extra_lump_amount'\n                                            value={extra_lump_amount}\n                                            icon='$'\n                                            iconPosition='left'\n                                            onChange={this.handleChange}\n                                        />\n                                    </div>\n                                    <div className=\"col-md-4 p-15\">\n                                        <label htmlFor=\"extra_lump_amount\" className=\"extra-fields-label dark-label\">{translations.extraPaymentLabel3}</label>\n                                    </div>\n                                    <div className=\"col-md-3\">\n                                        <Dropdown\n                                            name=\"extraLumpMonths\"\n                                            list={extraLumpMonths}\n                                            handleBPSelect={this.handleBPSelect}\n                                        />\n                                    </div>\n                                    <div className=\"col-md-2\">\n                                        <Dropdown\n                                            name=\"extraLumpYears\"\n                                            list={extraLumpYears}\n                                            handleBPSelect={this.handleBPSelect}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className={ `row form-group no-gutters ${this.state.showEPayError ? 'show' : 'hide'}` }>\n                                    <div className=\"col-xs-12 text-right\">\n                                        <small className=\"inputErrorText\">{translations.extraLumpError}</small>\n                                    </div>\n                                </div>\n\n                                <div className=\"row form-group no-gutters extra-payments-row mt-3\">\n                                    <div className=\"col-xs-12 offset-lg-5 col-sm-7 offset-lg-7 col-lg-5\">\n                                        <button\n                                            type=\"button\"\n                                            className=\"btn btn-secondary btn-block btn-extra-fields\"\n                                            onClick={this.calculateAmortization}\n                                            disabled={ Number(amount)    < 1 || Number(amount)   > 1000000 || amount === ''   ||\n                                               Number(years)     < 1 || Number(years)    > 100     || years === ''    ||\n                                               Number(months)    < 1 || Number(months)   > 1200    || months === ''   ||\n                                               Number(interest) <= 0 || Number(interest) > 100     || interest === '' }\n                                        >\n                                            {translations.addExtraBtnTitle}\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>{/* End of row */}\n\n                <div id=\"loanPaymentResults\" style={{display: this.state.showResults && this.state.showAmortization ? 'block' : 'none' }} >\n\n                    <div className=\"row form-group mb-3\">\n                        <div className=\"col-xs-12 col-sm-6\">\n                            <label htmlFor=\"loan-start-date\" className=\"loan-label\">\n                                <Tooltip content={ translations.startDateHelpText } /> {translations.startDateText} *\n                            </label>\n\n                            <DatePicker\n                                id=\"loan-start-date\"\n                                className=\"form-control\"\n                                locale={this.state.lan} //could be \"es\"\n                                minDate={new Date()}\n                                maxDate={Util.getEndLimitDate(90)}\n                                selected={this.state.startDate}\n                                onChange={this.handleDateChange}\n                                isClearable\n                                placeholderText={translations.selectDatePlaceholder}\n                            />\n                            <small><i>{translations.dateHelpMessage}</i></small>\n                        </div>\n\n                        <div className={this.state.startDate ? 'col-xs-12 col-sm-6 text-right' : 'hide' }>\n                            <div className=\"pr-4\">\n                                <h3 className=\"loan-titles\">{translations.estimatedPayoffDate}</h3>\n                                <div className=\"end-date-result\">\n                                    { translations.fullMonths[this.state.dateToFinish.getMonth()]+' '+this.state.dateToFinish.getDate()+', '+this.state.dateToFinish.getFullYear() }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"col-sm-8 relative-loan-wrapper\"><Tooltip content={ translations.amortizationTableHelp } />\n                            <h3>{ translations.amortizationSchedule }</h3>\n                        </div>\n                        <div className=\"col-sm-4\">\n                            <div className=\"with-extrapayment-text\">\n                                { (this.state.extra_monthly_amount || this.state.extra_yearly_amount || this.state.extra_lump_amount) ? translations.withExtraPayments : translations.withoutExtraPayments }\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"table-responsive scrolling-table underlined-tbody\">\n                        { this.state.startDate && <Table columns={this.state.tableColumns} data={this.state.tableResults} /> }\n                    </div>\n                    <p className={this.state.startDate ? 'hide' : 'show' }>{ translations.startingDateEmptyText }</p>\n\n                </div>\n\n            </div>\n        );\n\n    }//End of render\n\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nif (!Array.prototype.findIndex) {\n    Object.defineProperty(Array.prototype, 'findIndex', {\n        value: function(predicate) {\n        // 1. Let O be ? ToObject(this value).\n            if (this == null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n\n            var o = Object(this);\n\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\n            var len = o.length >>> 0;\n\n            // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n            if (typeof predicate !== 'function') {\n                throw new TypeError('predicate must be a function');\n            }\n\n            // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n            var thisArg = arguments[1];\n\n            // 5. Let k be 0.\n            var k = 0;\n\n            // 6. Repeat, while k < len\n            while (k < len) {\n                // a. Let Pk be ! ToString(k).\n                // b. Let kValue be ? Get(O, Pk).\n                // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n                // d. If testResult is true, return k.\n                var kValue = o[k];\n                if (predicate.call(thisArg, kValue, k, o)) {\n                    return k;\n                }\n                // e. Increase k by 1.\n                k++;\n            }\n\n            // 7. Return -1.\n            return -1;\n        },\n        configurable: true,\n        writable: true\n    });\n}\n\n(function(window){\n    const _init = ({\n        selector     = 'vtLoanCalc',\n        lan          = 'en',\n        btnLabel     = 'Calculate',\n        title        = ''\n    })=>{\n        let calculator = (<App lan={lan} btnLabel={btnLabel} title={title}/>);\n        ReactDOM.render( calculator, document.getElementById(selector) );\n    }\n\n    window.VTLoanCalculator = { init: _init }\n})(window);\n/* ReactDOM.render(<App lan='en' btnLabel='Calcular' />, document.getElementById('root')); */\n\nserviceWorker.unregister();"],"sourceRoot":""}