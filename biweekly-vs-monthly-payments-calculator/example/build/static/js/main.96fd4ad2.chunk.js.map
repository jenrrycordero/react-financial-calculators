{"version":3,"sources":["Utils.js","language.js","components/inputGourp.jsx","components/tableHeader.jsx","components/tableBody.jsx","components/table.jsx","App.js","serviceWorker.js","index.js"],"names":["moneyFormatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","penniesFormatter","percentFormatter","Number","prototype","formatMoneyN","c","d","t","n","this","s","isNaN","Math","abs","undefined","i","parseInt","toFixed","j","length","substr","replace","slice","Util","percent","value","strNumber","toString","parseFloat","substring","money","amount","showPennies","arguments","withSymbol","format","test","digits","negative","multiplicator","pow","round","total","subtotal","floor","number","str","index","indexOf","time_n","is_month","time_result","roundTo","monthCount","lan","getPlural","word","one","other","m","y","result","push","en","es","ca","fr","join","translations","amountLabel","monthlyDepositLabel","balance","interest","payments","paymentSingular","paymentLower","interestLabel","monthly","yearText","yearPluralText","yearPluralTextCaipal","TimeToRepayText","totalBalanceText","totalInterestText","monthlyText","anuallyText","biweeklyText","biweeklyLowerText","loanAmount","termInYears","termInMonths","orText","moneyFieldError","percentageFieldError","yearsError","monthsError","timeError","tableResultsTitle","loadingText","InputGroup","_ref","id","label","name","placeholder","icon","iconPosition","isIntiger","errorMsg","errorOccur","onChange","inputGroup","react_default","a","createElement","className","concat","react_number_format_es","thousandSeparator","allowNegative","onValueChange","values","singleField","htmlFor","TableHeader","hparam1","hparam2","columns","colSpan","map","column","key","TableBody","data","row","Object","keys","columnKeyName","countDecimalPlaces","Table","tableHeader","tableBody","App","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","properties","boxModel","objectSpread","state","setState","handleTimeChange","e","_e$target","target","int_val","trunc","time_value","calculateMonthsYears","years","months","rest","str_number","split","keyUpHandlerTime","_e$target2","defineProperty","console","log","renderResults","colors","_this$state","mainResults","languages","tableColumns","showResults","tableResults","moneySaved","loading","preventDefault","monthly_interest","biweekly_interest","monthly_payment","biweekly_payment","monthly_payment_orig","formatMoney","biweekly_payment_orig","total_interest_monthly","total_interest_biweekly","total_monthly","total_biweekly","num_monthly_payments","num_biweekly_payments","total_monthly_payment","interest_paid","principal_paid","year","total_biweekly_payment","aux_tableResults","x","total_b_payment","total_biweekley","total_m_payment","biweekly_years","biweekly_months","biweekly_term","savings","auxMainResults","b_payment_orig","total_interest_b","m_payment_orig","total_interest_m","monthly_term","getDateFromNumberOfMonths","_this$state2","_this$props","title","btnLabel","onSubmit","handleSubmit","bind","inputGourp","tooltipContent","interestRateHelpText","type","disabled","display","table","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.96fd4ad2.chunk.js","sourcesContent":["var moneyFormatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n});\n\nvar penniesFormatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    /* minimumFractionDigits: 2,\n    maximumFractionDigits: 2,*/\n});\n\nvar percentFormatter = new Intl.NumberFormat('en-US', {\n    style: 'percent',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2,\n});\n\nNumber.prototype.formatMoneyN = function (c, d, t) { var n = this, c = isNaN(c = Math.abs(c)) ? 2 : c, d = d === undefined ? \".\" : d, t = t === undefined ? \",\" : t, s = n < 0 ? \"-\" : \"\", i = parseInt(n = Math.abs(+n || 0).toFixed(c)) + \"\", j = (j = i.length) > 3 ? j % 3 : 0; return s + (j ? i.substr(0, j) + t : \"\") + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : \"\") };\n\nexport default class Util {\n    static percentToValue(percent) {\n        var value = percent;\n        var strNumber = value.toString();\n\n        if (isNaN(value) || value < 0) {\n            return '';\n        }\n        if(value >= 101){\n            return parseFloat( strNumber.substring(0, strNumber.length - 1) );\n        }\n        if(value < 101){\n            return strNumber.substring(0, 4);\n        }\n        return value;\n    }\n\n    static moneyToValue(money) {\n        if (money === undefined) return '';\n        var value = parseInt(money.replace(/\\D/g, \"\"));\n        return !isNaN(value) ? value : '';\n    }\n\n    static moneyValue(amount, showPennies = false, withSymbol = true) {\n        if (amount === null || amount === '') return '';\n        var value = showPennies ? penniesFormatter.format(amount) : moneyFormatter.format(amount);\n        if (withSymbol === false) {\n            return value.substring(1);\n        }\n        return value;\n    }\n    static removeMoneyTrash(money){\n        return money.replace('$', '').replace(',', \"\");\n    }\n\n    static cleanNumberInput(value){\n        return /^-?\\d*[.,]?\\d*$/.test(value);\n    }\n\n    static valueIsInteger(value){\n        if(value === '-')\n            return true;\n        else\n            return /^\\d*$/.test(value) && !(/^0\\d+$/.test(value));\n    }\n\n    static formatMoney(value) {\n        return parseFloat(value.replace(/[^0-9.]/g, '')).formatMoneyN();\n    };\n\n    static roundTo(n, digits) {\n        var negative = false;\n        if (digits === undefined) {\n            digits = 0;\n        }\n            if( n < 0) {\n            negative = true;\n          n = n * -1;\n        }\n        var multiplicator = Math.pow(10, digits);\n        n = parseFloat((n * multiplicator).toFixed(11));\n        n = (Math.round(n) / multiplicator).toFixed(digits);\n        if( negative ) {\n            n = (n * -1).toFixed(2);\n        }\n        return n;\n    }\n\n    static percentValue(amount, withSymbol) {\n        if (amount === null || amount === '') return '';\n        var value = percentFormatter.format(amount);\n        if (withSymbol === false) {\n            return value.substring(0, value.length - 1);\n        }\n        return value;\n    }\n\n    static calculatePercent(total, subtotal){\n        let perc = '';\n        if(isNaN(total) || isNaN(subtotal)){\n            perc=' ';\n        }else{\n           perc = Math.floor( (subtotal/total) * 100 );\n        }\n\n        return perc;\n    }\n\n    static countDecimalPlaces(number) {\n        const str = \"\" + number;\n        const index = str.indexOf('.');\n        if (index >= 0) {\n            return str.length - index - 1;\n        } else {\n            return 0;\n        }\n    }\n\n    /*\n    * Converts months to years and years to months\n    * @param time_n (number): amount of time (number of months or years)\n    * @parram is_month (bool): use true to convert from months to years and false to get months from years\n    */\n    static calculateMonthsYears(time_n = 1, is_month = true) {\n        let time_result = Number(time_n) * 12;\n        if(is_month) {\n            time_result = this.roundTo( (Number(time_n) / 12), 1 );\n        }\n\n        return time_result;\n    }\n\n    static getDateFromNumberOfMonths(monthCount, lan) {\n        function getPlural(number, word) {\n            return number === 1 ? word.one : word.other;\n        }\n\n        const months = {\n            en:{\n                one: 'month',\n                other: 'months',\n            },\n            es:{\n                one: 'mes',\n                other: 'meses',\n            },\n            ca:{\n                one: 'month',\n                other: 'months',\n            },\n            fr:{\n                one: 'month',\n                other: 'months',\n            },\n        };\n        const years = {\n            en:{\n                one: 'year',\n                other: 'years',\n            },\n            es:{\n                one: 'año',\n                other: 'años',\n            },\n            ca:{\n                one: 'year',\n                other: 'years',\n            },\n            fr:{\n                one: 'year',\n                other: 'years',\n            },\n        };\n        const and = {\n            en: ' and ',\n            es: ' y ',\n        };\n\n        let m = monthCount % 12;\n        let y = Math.floor(monthCount / 12);\n        let result = [];\n\n        y && result.push(y + ' ' + getPlural(y, years[lan]));\n        m && result.push(m + ' ' + getPlural(m, months[lan]));\n\n        return result.join(and[lan]);\n    }\n\n}","const translations = {\n    en : {\n        amountLabel: 'Amount',\n        monthlyDepositLabel: 'Monthly Deposit',\n        balance: 'Balance',\n        interest: 'Interest',\n        payments: 'Payments',\n        paymentSingular: 'Payment',\n        paymentLower: 'payments',\n        interestLabel: 'Interest rate',\n        monthly: 'monthly',\n        yearText: 'year',\n        yearPluralText: 'years',\n        yearPluralTextCaipal: 'Years',\n        TimeToRepayText: 'Time to repay',\n        totalBalanceText: 'Total balance',\n        totalInterestText: 'Total interest',\n        monthlyText: 'Monthly',\n        anuallyText: 'Anually',\n        biweeklyText: \"Bi-weekly\",\n        biweeklyLowerText: \"bi-weekly\",\n        loanAmount: 'Loan Amount',\n        termInYears: 'Term in years',\n        termInMonths: 'or months',\n        orText: 'Or',\n        moneyFieldError: 'Use positive numbers less than 1 million.',\n        percentageFieldError: 'Use positive numbers less than 100.',\n        yearsError: 'Use real number of years (Less than 100).',\n        monthsError: 'Use real number of months (Less than 1200).',\n        timeError: 'Use real number of years and months (1 < years < 100 | 12 < months < 1200).',\n        tableResultsTitle: 'Annual breakdown of payments',\n        loadingText: 'Loading...',\n    },\n    es : {\n        amountLabel: 'Monto',\n        monthlyDepositLabel: 'Depósito Mensual',\n        balance: 'Balance',\n        interest: 'Interés',\n        payments: 'Pagos',\n        paymentSingular: 'Pago',\n        paymentLower: 'pagos',\n        interestLabel: 'Tasa de interés',\n        monthly: 'mensual',\n        yearText: 'año',\n        yearPluralText: 'años',\n        yearPluralTextCaipal: 'Años',\n        TimeToRepayText: 'Tiempo para pagar',\n        totalInterestText: 'Interés total',\n        monthlyText: 'Mensual',\n        anuallyText: 'Anual',\n        biweeklyText: \"Quincenal\",\n        loanAmount: 'Monto del préstamo',\n        termInYears: 'Término en años',\n        termInMonths: 'o meses',\n        orText: 'O',\n        moneyFieldError: 'Use positive numbers less than 1 million.',\n        percentageFieldError: 'Use positive numbers less than 100.',\n        yearsError: 'Use real number of years. No dots allowed.',\n        monthsError: 'Use real number of months (Less than 1200).',\n        timeError: 'Use real number of years and months (years < 100 | months < 1200).',\n        tableResultsTitle: 'Desglose anual de pagos',\n        loadingText: 'Loading...',\n    },\n    ca : {\n        amountLabel: 'Amount',\n        monthlyDepositLabel: 'Monthly Deposit',\n        balance: 'Balance',\n        interest: 'Interest',\n        payments: 'Payments',\n        paymentSingular: 'Payment',\n        paymentLower: 'payments',\n        interestLabel: 'Interest rate',\n        monthly: 'monthly',\n        yearText: 'year',\n        yearPluralText: 'years',\n        yearPluralTextCaipal: 'Years',\n        TimeToRepayText: 'Time to repay',\n        totalBalanceText: 'Total balance',\n        totalInterestText: 'Total interest',\n        monthlyText: 'Monthly',\n        anuallyText: 'Anually',\n        biweeklyText: \"Bi-weekly\",\n        loanAmount: 'Loan Amount',\n        termInYears: 'Term in years',\n        termInMonths: 'or months',\n        orText: 'Or',\n        moneyFieldError: 'Use positive numbers less than 1 million.',\n        percentageFieldError: 'Use positive numbers less than 100.',\n        yearsError: 'Use real number of years (Less than 100).',\n        monthsError: 'Use real number of months (Less than 1200).',\n        timeError: 'Use real number of years and months (1 < years < 100 | 12 < months < 1200).',\n        tableResultsTitle: 'Annual breakdown of payments',\n        loadingText: 'Loading...',\n    },\n    fr : {\n        amountLabel: 'Amount',\n        monthlyDepositLabel: 'Monthly Deposit',\n        balance: 'Balance',\n        interest: 'Interest',\n        payments: 'Payments',\n        paymentSingular: 'Payment',\n        paymentLower: 'payments',\n        interestLabel: 'Interest rate',\n        monthly: 'monthly',\n        yearText: 'year',\n        yearPluralText: 'years',\n        yearPluralTextCaipal: 'Years',\n        TimeToRepayText: 'Time to repay',\n        totalBalanceText: 'Total balance',\n        totalInterestText: 'Total interest',\n        monthlyText: 'Monthly',\n        anuallyText: 'Anually',\n        biweeklyText: \"Bi-weekly\",\n        loanAmount: 'Loan Amount',\n        termInYears: 'Term in years',\n        termInMonths: 'or months',\n        orText: 'Or',\n        moneyFieldError: 'Use positive numbers less than 1 million.',\n        percentageFieldError: 'Use positive numbers less than 100.',\n        yearsError: 'Use real number of years (Less than 100).',\n        monthsError: 'Use real number of months (Less than 1200).',\n        timeError: 'Use real number of years and months (1 < years < 100 | 12 < months < 1200).',\n        tableResultsTitle: 'Annual breakdown of payments',\n        loadingText: 'Loading...',\n    },\n\n};\n\nexport default function getTranslations(lan) {\n    return translations[lan];\n}","import React from 'react';\n//import Util from \"../Utils\";\nimport NumberFormat from 'react-number-format';\nimport '../styles/inputGroup.css';\n\nconst InputGroup = ({id, label, name, value, placeholder, icon, isIntiger, iconPosition, errorMsg, errorOccur, onChange}) => {\n\n    let inputGroup = (\n        <div className=\"input-group\">\n            <div className=\"input-group-prepend\">\n                <span className={`input-group-text ${errorOccur ? 'inputIconError' : '' }`}>{icon}</span>\n            </div>\n\n            <NumberFormat\n                id={id}\n                name={name}\n                value={value}\n                className={`form-control ${errorOccur ? 'inputError' : '' }`}\n                placeholder={placeholder}\n                thousandSeparator={true}\n                allowNegative={false}\n                onValueChange={ (values) => {\n                    //values is an object that contains:\n                    // formattedValue = $2,223\n                    // value ie, 2223\n                    const {value} = values;\n\n                    onChange({name: name, value: value});\n                }}\n            />\n        </div>\n    );\n\n    if(iconPosition === 'right'){\n        inputGroup = (\n            <div className=\"input-group\">\n                <NumberFormat\n                    id={id}\n                    name={name}\n                    value={value}\n                    className={`form-control ${errorOccur ? 'inputError' : '' }`}\n                    placeholder={placeholder}\n                    thousandSeparator={true}\n                    allowNegative={false}\n                    onValueChange={ (values) => {\n                        const {value} = values;\n                        onChange({name: name, value: value});\n                    }}\n                />\n                <div className=\"input-group-append\">\n                    <span className={`input-group-text ${errorOccur ? 'inputIconError' : '' }`}>{icon}</span>\n                </div>\n            </div>\n        );\n    }\n\n    let singleField = (\n        <NumberFormat\n            id={id}\n            name={name}\n            value={value}\n            className={`form-control ${errorOccur ? 'inputError' : '' }`}\n            placeholder={placeholder}\n            thousandSeparator={false}\n            allowNegative={false}\n            onValueChange={ (values) => {\n                const {value} = values;\n                onChange({name: name, value: value});\n            }}\n        />\n    );\n\n    return (\n        <div className=\"row form-group mt-3\">\n            <label htmlFor={id} className=\"col-12 biweekly-label\">\n                {label}\n            </label>\n\n            <div className=\"col-12\">\n                { icon ? inputGroup : singleField}\n                <small className={`inputErrorText ${errorOccur ? 'show' : 'hide' }`}>{errorMsg}</small>\n            </div>\n        </div>\n    )\n\n};\n\nexport default InputGroup;","import React from \"react\";\n\nconst TableHeader = ({ hparam1, hparam2, columns}) => {\n  return (\n        <thead>\n            <tr>\n                <th><span className=\"sr-only\">Properties</span></th>\n                <th colSpan=\"2\" className=\"text-center\">{hparam1}</th>\n                <th colSpan=\"2\" className=\"text-center\">{hparam2}</th>\n            </tr>\n            <tr>\n                { columns.map(column => <th key={column}>{column}</th>) }\n            </tr>\n        </thead>\n  );\n}\n\nexport default TableHeader;\n","import React from \"react\";\nimport Util from '../Utils'\n\nconst TableBody = ({data}) => {\n    return (\n      <tbody>\n        {data.map((row, index)  => (\n          <tr key={index+'_row'}>\n            { Object.keys(row).map((columnKeyName, i) => (\n              <td key={index+'_'+i+'cell'}>\n                { row[columnKeyName] }\n                { i > 0 && Util.countDecimalPlaces(row[columnKeyName]) === 1 && '0' }\n              </td>\n            )) }\n          </tr>\n        ))}\n      </tbody>\n    );\n}\n\nexport default TableBody;\n","import React from \"react\";\nimport TableHeader from \"./tableHeader.jsx\";\nimport TableBody from \"./tableBody.jsx\";\n\nconst Table = ({ hparam1, hparam2, columns, data }) => {\n  return (\n    <table className=\"table table-bordered table-hover\">\n      <TableHeader hparam1={hparam1} hparam2={hparam2} columns={columns}/>\n      <TableBody data={data} />\n    </table>\n  );\n};\n\nexport default Table;","import React, { Component } from 'react';\nimport Util from \"./Utils\";\nimport getTranslations from './language';\nimport InputGroup from './components/inputGourp';\nimport Table from './components/table.jsx'\n\nimport './App.css';\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n\n        const languages = getTranslations(props.lan);\n        this.state = {\n            lan : props.lan,\n            translations : languages,\n\n            amount: 5000,\n            years: 3,\n            months: 36,\n            interest: 3,\n            tableColumns : [\n                languages.yearPluralTextCaipal,\n                languages.payments,\n                languages.balance,\n                languages.payments+' ',\n                languages.balance+' ',\n            ],\n            showResults  : false,\n            mainResults  : {},\n            tableResults : [],\n            moneySaved: 0,\n            loading: false,\n        };\n\n    }//End of Constructor\n\n\n    handleChange = (properties) => {\n        let boxModel = {...this.state};\n        boxModel[properties.name] = properties.value;\n\n        this.setState(boxModel);\n    }\n\n    handleTimeChange = (e) => {\n        const {name, value} = e.target;\n        let int_val = Math.trunc(value);\n        let time_value = 0;\n        if(name === 'years') {\n            time_value = Util.calculateMonthsYears(int_val, false);\n            this.setState( {years: int_val, months: time_value} );\n        }else{\n            time_value = Util.calculateMonthsYears(int_val);\n            let rest = time_value - Math.floor(time_value);\n            let str_number = time_value.toString();\n            if(rest === 0){\n                str_number = str_number.split(\".\")[0];\n            }\n            this.setState( {months: int_val, years: str_number} );\n        }\n    }\n\n    keyUpHandlerTime = (e) => {\n        const {name, value} = e.target;\n        let int_val = Math.trunc(value);\n        this.setState( {[name]: int_val} );\n        console.log('Name: '+name+', Value: '+int_val);\n    }\n\n    handleSubmit(e){\n        e.preventDefault();\n\n        const lan      = this.state.lan;\n        const amount   = Number(this.state.amount);\n        const interest = Number(this.state.interest);\n        const months   = Number(this.state.months);\n\n        let monthly_interest = interest / 100 / 12;\n        let biweekly_interest = interest / 100 / 26;\n\n        let monthly_payment = ( (monthly_interest * amount ) * Math.pow(1 + monthly_interest, months) ) / ( Math.pow((1+monthly_interest), months ) - 1 );\n\n        monthly_payment = Util.roundTo(monthly_payment, 2);\n        let biweekly_payment = Util.roundTo(monthly_payment / 2, 2);\n\n        let monthly_payment_orig = '$' + Util.formatMoney(monthly_payment);\n        let biweekly_payment_orig = '$' + Util.formatMoney(biweekly_payment);\n\n        let total_interest_monthly = 0;\n        let total_interest_biweekly = 0;\n        let total_monthly = amount;\n        let total_biweekly = amount;\n\n        let num_monthly_payments = 0;\n        let num_biweekly_payments = 0;\n        let total_monthly_payment = 0;\n        let interest_paid = 0;\n        let principal_paid = 0;\n        let year = 0;\n        let total_biweekly_payment = 0;\n        let aux_tableResults = [];\n        for(let x = 0; x < months/12; x++) {\n            year = x+1;\n\n            total_monthly_payment = 0;\n            for(let y = 1; y <= 12; y++){\n                if(total_monthly <= 0){\n                    break;\n                }\n                interest_paid = Number(total_monthly) * Number(monthly_interest);\n                total_interest_monthly += Number(interest_paid);\n                principal_paid = Number(monthly_payment) - Number(interest_paid);\n\n                if(total_monthly < principal_paid){\n                    principal_paid = total_monthly;\n                    monthly_payment = Number(principal_paid) + Number(interest_paid);\n                }\n\n                total_monthly -= Number(principal_paid);\n                total_monthly_payment += Number(monthly_payment);\n                num_monthly_payments++;\n            }\n\n            total_biweekly_payment = 0;\n            for(let y = 1; y <= 26; y++){\n                if(total_biweekly <= 0){\n                    break;\n                }\n                interest_paid = Number(total_biweekly) * Number(biweekly_interest);\n                total_interest_biweekly += Number(interest_paid);\n                principal_paid = Number(biweekly_payment) - Number(interest_paid);\n\n                if(total_biweekly < principal_paid){\n                    principal_paid = total_biweekly;\n                    biweekly_payment = Number(principal_paid) + Number(interest_paid);\n                }\n\n                total_biweekly -= Number(principal_paid);\n                total_biweekly_payment += Number(biweekly_payment);\n                num_biweekly_payments++;\n            }\n\n            aux_tableResults.push({\n                years: year,\n                total_b_payment: '$' + Util.formatMoney( Util.roundTo(total_biweekly_payment, 2) ),\n                total_biweekley: '$' + Util.formatMoney( Util.roundTo(total_biweekly, 2) ),\n                total_m_payment: '$' + Util.formatMoney( Util.roundTo(total_monthly_payment, 2) ),\n                total_monthly:   '$' + Util.formatMoney( Util.roundTo(total_monthly, 2) ),\n            });\n        }\n\n        let biweekly_years = Math.floor(num_biweekly_payments / 26);\n        let biweekly_months = num_biweekly_payments % 26;\n\n        if(biweekly_months === 0){\n            biweekly_months = '';\n        }else if(biweekly_months === 13){\n            biweekly_months = 6;\n        }else if(biweekly_months < 13 && biweekly_months > 7){\n            biweekly_months = Math.floor(biweekly_months -1 );\n        }else{\n            biweekly_months = Math.floor((biweekly_months - 1) / 2);\n        }\n\n        let biweekly_term = '';\n        if(lan === 'es'){\n            biweekly_term = (biweekly_years ? (biweekly_years+' año'+(biweekly_years > 1 ? 's' : '')) : '')+(biweekly_months && biweekly_years ? ' ' : '')+(biweekly_months ? biweekly_months+' mes'+(biweekly_months > 1 ? 'es' : '') : '');\n        }else if(lan === 'fr'){\n            biweekly_term = (biweekly_years ? (biweekly_years+' année'+(biweekly_years > 1 ? 's' : '')) : '')+(biweekly_months && biweekly_years ? ' ' : '')+(biweekly_months ? biweekly_months+' mois' : '');\n        }else{\n            biweekly_term = (biweekly_years ? (biweekly_years+' year'+(biweekly_years > 1 ? 's' : '')) : '')+(biweekly_months && biweekly_years ? ' ' : '')+(biweekly_months ? biweekly_months+' month'+(biweekly_months > 1 ? 's' : '') : '');\n        }\n\n        const savings = total_interest_monthly - total_interest_biweekly;\n        const auxMainResults = {\n            b_payment_orig   : biweekly_payment_orig,\n            total_interest_b : '$' + Util.formatMoney( Util.roundTo(total_interest_biweekly, 2) ),\n            biweekly_term    : biweekly_term, //Util.getDateFromNumberOfMonths( biweekly_months, lan),\n\n            m_payment_orig   : monthly_payment_orig,\n            total_interest_m : '$' + Util.formatMoney( Util.roundTo(total_interest_monthly, 2) ),\n            monthly_term     : Util.getDateFromNumberOfMonths( num_monthly_payments, lan)\n        };\n\n        this.setState({\n            loading : false,\n            showResults: true,\n            moneySaved: '$' + Util.formatMoney( Util.roundTo(savings, 2)),\n            mainResults : auxMainResults,\n            tableResults: aux_tableResults\n        });\n    }\n\n    renderResults = (colors) => {\n        const {mainResults, translations} = this.state;\n\n        return (\n            <div className=\"row justify-content-center no-gutters mbp-results text-center\">\n                <div className=\"col-xs-12 col-sm-6 p-1\" id=\"dmp_block\">\n                    <div className=\"card mb-4 shadow\">\n                        <div className=\"card-header bg-color-blue\"><h4>{translations.biweeklyText} {translations.paymentLower}</h4></div>\n                        <div className=\"card-subheader bg-color-lightblue\"><h5><span>{mainResults['b_payment_orig']}</span> / {translations.biweeklyLowerText}</h5></div>\n                        <div className=\"card-intro\">\n                            <small>{translations.TimeToRepayText}:</small>\n                            <div className=\"card-results\">{mainResults['biweekly_term']}</div>\n                        </div>\n                        <div className=\"card-body\">\n                            <small>{translations.totalInterestText}:</small>\n                            <div className=\"card-results\">{mainResults['total_interest_b']}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"col-xs-12 col-sm-6 p-1\" id=\"not_dmp_block\">\n                    <div className=\"card mb-4\">\n                        <div className=\"card-header bg-color-gray narrow-padding\"><h4>{translations.monthlyText} {translations.paymentLower}</h4></div>\n                        <div className=\"card-subheader bg-color-lightgray pb-1\"><span>{mainResults['m_payment_orig']}</span> / {translations.monthly}</div>\n                        <div className=\"card-intro\" id=\"savings_Time_block\">\n                            <small>{translations.TimeToRepayText}:</small>\n                            <div id=\"savings_Time\" className=\"card-results\">{mainResults['monthly_term']}</div>\n                        </div>\n                        <div className=\"card-body\">\n                            <small>{translations.totalInterestText}:</small>\n                            <div id=\"savings_fees\" className=\"card-results\">{mainResults['total_interest_m']}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        const {amount, interest, years, months, translations} = this.state;\n        const {title, btnLabel, colors} = this.props;\n        return (\n            <div className=\"container mbp-calculator-wrapper\">\n\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-xs-12 col-sm-7 col-md-5 col-lg-4\">\n                        <h2 className=\"mb-0\">{title}</h2>\n\n                        <form id=\"mbp-calculator\" onSubmit={this.handleSubmit.bind(this)} >\n\n                            <InputGroup\n                                id='biweekly_amount'\n                                label={translations.loanAmount}\n                                name='amount'\n                                value={amount}\n                                icon='$'\n                                iconPosition='left'\n                                errorOccur={(Number(amount) < 1 || Number(amount) > 1000000 || amount === '') ? 1 : 0}\n                                errorMsg={translations.moneyFieldError}\n                                onChange={this.handleChange}\n                            />\n\n                            <div className=\"row no-gutters\">\n                                <div className=\"col-6 form-group mt-3\">\n                                    <label htmlFor=\"biweekly_years\" className=\"biweekly-label\">{translations.termInYears}</label>\n                                    <div className=\"pr-2\">\n                                        <input\n                                            id = \"biweekly_years\"\n                                            name = \"years\"\n                                            className = {`form-control ${ (years < 1 || years > 100 || years === '') ? 'inputError' : '' }`}\n                                            value = {years >= 1 ? years : ''}\n                                            onChange = {this.handleTimeChange}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className=\"col-6 form-group mt-3\">\n                                    <label htmlFor=\"biweekly_months\" className=\"biweekly-label pl-1\">{translations.termInMonths}</label>\n                                    <div className=\"pl-1\">\n                                        <input\n                                            id = \"biweekly_months\"\n                                            name = \"months\"\n                                            className = {`form-control ${ (months < 1 || months > 1200 || months === '') ? 'inputError' : '' }`}\n                                            value = {months >= 1 ? months : ''}\n                                            onChange = {this.handleTimeChange}\n                                        />\n                                    </div>\n                                </div>\n\n                                <div className=\"col-12\">\n                                    <small className={`inputErrorText ${ (years < 1 || years > 100 || years === '' || months < 1 || months > 1200 || months === '') ? 'show' : 'hide' }`}>{translations.timeError}</small>\n                                </div>\n                            </div>\n\n                            <InputGroup\n                                id='ssc_interest'\n                                label={translations.interestLabel}\n                                name='interest'\n                                value={interest}\n                                icon='%'\n                                iconPosition='right'\n                                tooltipContent={translations.interestRateHelpText}\n                                errorOccur={(Number(interest) <= 0 || Number(interest) > 100 || interest === '') ? 1 : 0}\n                                errorMsg={translations.percentageFieldError}\n                                onChange={this.handleChange}\n                            />\n\n                            <div className=\"mt-4 mb-3\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-secondary btn-block\"\n                                    disabled={ Number(amount)    < 1 || Number(amount)   > 1000000 || amount === ''   ||\n                                               Number(years)     < 1 || Number(years)    > 100     || years === ''    ||\n                                               Number(months)    < 1 || Number(months)   > 1200    || months === ''   ||\n                                               Number(interest) <= 0 || Number(interest) > 100     || interest === '' }\n                                >\n                                    { btnLabel }\n                                </button>\n                            </div>\n                        </form>\n                    </div>\n\n                    <div className=\"mt-4 col-sm-12 col-md-7 col-lg-8 text-center\" style={{display: this.state.loading || this.state.showResults ? 'block' : 'none' }} >\n                        {this.state.showResults && this.renderResults(colors)}\n                    </div>\n                </div>{/* End of row */}\n\n                <div id=\"paymentResults\" style={{display: this.state.showResults ? 'block' : 'none' }} >\n                    <p className=\"inWordsResults\">\n                        <strong>Summary:</strong> When picking the Bi-weekly option you are splitting your anual 12 payments to 26 bi-weekly payments. Which means in your case you will pay off your loan in <i>{this.state.mainResults.biweekly_term}</i> instead of the current <i>{this.state.mainResults.monthly_term}</i>. In essence, you are saving yourself <i>{this.state.moneySaved}</i> in loan interest.\n                    </p>\n\n                    <h3>{this.state.translations.tableResultsTitle}</h3>\n                    <div className=\"table-responsive scrolling-table underlined-tbody\">\n                        <Table\n                            hparam1={translations.biweeklyText+' '+translations.paymentLower}\n                            hparam2={translations.monthlyText+' '+translations.paymentLower}\n                            columns={this.state.tableColumns}\n                            data={this.state.tableResults}\n                        />\n                    </div>\n                </div>\n\n            </div>\n        );\n\n    }//End of render\n\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n/* (function(window){\n    const _init = ({\n        selector     = 'vtMvsBCalc',\n        lan          = 'en',\n        btnLabel     ='Calculate'\n    })=>{\n        let calculator = (<App lan={lan} btnLabel={btnLabel} />);\n        ReactDOM.render( calculator, document.getElementById(selector) );\n    }\n\n    window.VTMonthlyVsBiweeklyCalculator = { init: _init }\n})(window); */\nReactDOM.render(<App lan='en' btnLabel='Calculate' />, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}