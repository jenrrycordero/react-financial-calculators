{"version":3,"sources":["Utils.js","language.js","components/tooltip.jsx","components/inputGroup.jsx","components/tableHeader.jsx","components/tableBody.jsx","components/tableResults.jsx","components/calculatorResults.jsx","components/select.jsx","App.js","serviceWorker.js","index.js"],"names":["moneyFormatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","penniesFormatter","percentFormatter","Number","prototype","formatMoneyN","c","d","t","j_inc","n","this","value","isNaN","Math","abs","dot","undefined","comma","s","i","parseInt","toFixed","j","length","substr","replace","slice","Util","percent","strNumber","toString","parseFloat","substring","money","amount","showPennies","arguments","withSymbol","format","test","digits","negative","multiplier","pow","round","total","subtotal","floor","number","str","index","indexOf","time_n","is_month","time_result","roundTo","monthCount","lan","getPlural","word","one","other","m","y","result","push","en","es","ca","fr","join","num_years","currentYear","Date","getFullYear","years","cont","id","title","selected","rate","nper","pv","fv","type","PV","pvif","pmt","m_pmt","keys","translation","newTranslation","Object","forEach","key","concat","months","current","monthName","setMonth","getMonth","auxMonths","_","each","item","setFullYear","translations","loanAmount","amountHelpText","downPaymentText","downPaymentHelp","downPaymentError","loanFormText","qualifyFormText","interestLabel","interestHelpText","monthlyPayment","monthlyPaymentHelpText","monthlyPaymentsTitle","totalPrincipalPaid","totalInterestPaid","estimateMaximumLoan","showAmortizationBtnText","hideAmortizationBtnText","amortizationTableHelp","termInMonths","termInMonthsHelp","monthText","monthPluralText","startDateText","estimatedPayoffDate","amortizationSchedule","startingDateEmptyText","selectDatePlaceholder","startDateHelpText","fullMonths","shortMonths","monthYearText","paymentSingular","principalPaid","interestPaid","totalInterestText","balance","totalAsOf","Tooltip","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","hover","setState","react_default","a","createElement","className","onClick","handleTooltip","bind","onMouseOver","handleMouseInOut","onMouseOut","visibility","content","Component","InputGroup","_ref","label","name","placeholder","icon","fixedDecimalScale","decimalScale","iconPosition","isIntiger","tooltipContent","errorMsg","errorOccur","onChange","inputGroup","react_number_format_es","thousandSeparator","allowNegative","onValueChange","values","singleField","Fragment","htmlFor","tooltip","TableHeader","columns","map","column","TableBody","data","row","bg_class","columnKeyName","countDecimalPlaces","Table","tableHeader","tableBody","TableResults","_ref2","onHandleDateChange","startDate","dateToFinish","tableColumns","tableResults","react_datepicker_min_default","locale","minDate","maxDate","getEndLimitDate","isClearable","placeholderText","dateHelpMessage","getDate","tableResults_Table","CalculatorResults","onChangeAmortization","downPayment","mortgageTotals","showAmortization","formType","resultTitle","estimate","formatMoney","Dropdown","listOpen","close","assertThisInitialized","_this2","setTimeout","window","addEventListener","removeEventListener","timeOut","handleBPSelect","prevState","_this3","headerTitle","list","filter","toggleList","e","stopPropagation","selectItem","registerLocale","frCa","App","handleChange","properties","_this$setState","defineProperty","handleFormTypeChange","target","estimateLoanAmount","calculateAmortization","_this$setState2","handleDateChange","date","_this$state","term","monthly_payment","monthly_payment_without_extra","total_interest","tr_bg_color","payment","amortizationTerm","term_date","aux_dates","next_month","next_year","interest_paid","principal_paid","amortizationTable","yearTotals","totalInterest","earlyPayments","currDate","month","max","month_year","translationsStringReplace","yyyy","showResults","showEPayError","termTotals","handleAmortizationAction","aux_showAmortization","region","languages","getTranslations","interest","selector","scroller","scrollTo","duration","delay","offset","smooth","currentTerm","total_amount","estimateLoan","preventDefault","_this$state2","btnLabel","termMonths","getTermMonths","onSubmit","handleSubmit","components_inputGroup","min","moneyFieldError","percentageFieldError","components_select","timeError","wrapperClass","disabled","calculatorResults","components_tableResults","Boolean","location","hostname","match","VTAutoLoanCalculator","init","_ref$selector","_ref$region","_ref$lan","_ref$btnLabel","calculator","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9384304d.chunk.js","sourcesContent":["import _ from 'underscore';\r\n\r\nconst moneyFormatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 0,\r\n});\r\n\r\nconst penniesFormatter = new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n});\r\n\r\nconst percentFormatter = new Intl.NumberFormat('en-US', {\r\n    style: 'percent',\r\n    minimumFractionDigits: 0,\r\n    maximumFractionDigits: 2,\r\n});\r\n\r\n\r\n// eslint-disable-next-line no-extend-native\r\nNumber.prototype.formatMoneyN = function (c, d, t) {let n = this, value = isNaN(c = Math.abs(c)) ? 2 : c, dot = d === undefined ? \".\" : d, comma = t === undefined ? \",\" : t, s = n < 0 ? \"-\" : \"\", i = parseInt(n = Math.abs(+n || 0).toFixed(value)) + \"\", j_inc, j = (j_inc = i.length) > 3 ? j_inc % 3 : 0;return s + (j ? i.substr(0, j) + comma : \"\") + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + comma) + (value ? dot + Math.abs(n - i).toFixed(value).slice(2) : \"\");};\r\n\r\nexport default class Util {\r\n    static percentToValue(percent) {\r\n        let value = percent;\r\n        let strNumber = value.toString();\r\n\r\n        if (isNaN(value) || value < 0) {\r\n            return '';\r\n        }\r\n        if(value >= 101){\r\n            return parseFloat( strNumber.substring(0, strNumber.length - 1) );\r\n        }\r\n        if(value < 101){\r\n            return strNumber.substring(0, 4);\r\n        }\r\n        return value;\r\n    }\r\n\r\n    static moneyToValue(money) {\r\n        if (money === undefined) return '';\r\n        let value = parseInt(money.replace(/\\D/g, \"\"));\r\n        return !isNaN(value) ? value : '';\r\n    }\r\n\r\n    static moneyValue(amount, showPennies = false, withSymbol = true) {\r\n        if (amount === null || amount === '') return '';\r\n        let value = showPennies ? penniesFormatter.format(amount) : moneyFormatter.format(amount);\r\n        if (withSymbol === false) {\r\n            return value.substring(1);\r\n        }\r\n        return value;\r\n    }\r\n    static removeMoneyTrash(money){\r\n        return money.replace('$', '').replace(',', \"\");\r\n    }\r\n\r\n    static cleanNumberInput(value){\r\n        return /^-?\\d*[.,]?\\d*$/.test(value);\r\n    }\r\n\r\n    static valueIsInteger(value){\r\n        if(value === '-')\r\n            return true;\r\n        else\r\n            return /^\\d*$/.test(value) && !(/^0\\d+$/.test(value));\r\n    }\r\n\r\n    static formatMoney(value) {\r\n        return parseFloat(value.replace(/[^0-9.]/g, '')).formatMoneyN();\r\n    };\r\n\r\n    static roundTo(n, digits) {\r\n        let negative = false;\r\n        if (digits === undefined) {\r\n            digits = 0;\r\n        }\r\n            if( n < 0) {\r\n            negative = true;\r\n          n = n * -1;\r\n        }\r\n        let multiplier = Math.pow(10, digits);\r\n        n = parseFloat((n * multiplier).toFixed(11));\r\n        n = (Math.round(n) / multiplier).toFixed(digits);\r\n        if( negative ) {\r\n            n = (n * -1).toFixed(2);\r\n        }\r\n        return n;\r\n    }\r\n\r\n    static percentValue(amount, withSymbol) {\r\n        if (amount === null || amount === '') return '';\r\n        let value = percentFormatter.format(amount);\r\n        if (withSymbol === false) {\r\n            return value.substring(0, value.length - 1);\r\n        }\r\n        return value;\r\n    }\r\n\r\n    static calculatePercent(total, subtotal) {\r\n        return (isNaN(total) || isNaN(subtotal)) ? ' ' : Math.floor( (subtotal/total) * 100 );\r\n    }\r\n\r\n    static countDecimalPlaces(number) {\r\n        const str = \"\" + number;\r\n        const index = str.indexOf('.');\r\n        if (index >= 0) {\r\n            return str.length - index - 1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    /*\r\n    * Converts months to years and years to months\r\n    * @param time_n (number): amount of time (number of months or years)\r\n    * @parram is_month (bool): use true to convert from months to years and false to get months from years\r\n    */\r\n    static calculateMonthsYears(time_n = 1, is_month = true) {\r\n        let time_result = Number(time_n) * 12;\r\n        if(is_month) {\r\n            time_result = this.roundTo( (Number(time_n) / 12), 1 );\r\n        }\r\n\r\n        return time_result;\r\n    }\r\n\r\n    static getDateFromNumberOfMonths(monthCount, lan) {\r\n        function getPlural(number, word) {\r\n            return number === 1 ? word.one : word.other;\r\n        }\r\n\r\n        const months = {\r\n            en:{\r\n                one: 'month',\r\n                other: 'months',\r\n            },\r\n            es:{\r\n                one: 'mes',\r\n                other: 'meses',\r\n            },\r\n            ca:{\r\n                one: 'month',\r\n                other: 'months',\r\n            },\r\n            fr:{\r\n                one: 'month',\r\n                other: 'months',\r\n            },\r\n        };\r\n        const years = {\r\n            en:{\r\n                one: 'year',\r\n                other: 'years',\r\n            },\r\n            es:{\r\n                one: 'año',\r\n                other: 'años',\r\n            },\r\n            ca:{\r\n                one: 'year',\r\n                other: 'years',\r\n            },\r\n            fr:{\r\n                one: 'year',\r\n                other: 'years',\r\n            },\r\n        };\r\n        const and = {\r\n            en: ' and ',\r\n            es: ' y ',\r\n        };\r\n\r\n        let m = monthCount % 12;\r\n        let y = Math.floor(monthCount / 12);\r\n        let result = [];\r\n\r\n        y && result.push(y + ' ' + getPlural(y, years[lan]));\r\n        m && result.push(m + ' ' + getPlural(m, months[lan]));\r\n\r\n        return result.join(and[lan]);\r\n    }\r\n\r\n    static getPossibleYears(num_years){\r\n        const current = new Date();\r\n        const currentYear = current.getFullYear();\r\n        let years = [];\r\n        let cont = 0;\r\n        for(let y = currentYear; y<currentYear+num_years; y++){\r\n            years.push({\r\n                id: cont,\r\n                title: y,\r\n                selected: cont === 0 ? 1 : 0\r\n            });\r\n\r\n            cont++;\r\n        }\r\n        return years;\r\n    }\r\n\r\n    static pmt(rate, nper, pv, fv, type){\r\n        if (!fv) fv = 0;\r\n        if (!type) type = 0;\r\n\r\n        if (rate === 0) return -(pv + fv)/nper;\r\n\r\n        const PV = -pv;\r\n        const pvif = Math.pow(1 + rate, nper);\r\n        const pvif_minus_one = pvif - 1;\r\n\r\n        let pmt = (rate / pvif_minus_one) * PV * pvif;\r\n\r\n        if (type === 1) {\r\n            pmt /= (1 + rate);\r\n        }\r\n\r\n        return pmt;\r\n    }\r\n\r\n\r\n    static estimateLoan(rate, nper, m_pmt) {\r\n\r\n        if (rate === 0) return nper*m_pmt;\r\n\r\n        const pvif = Math.pow(1 + rate, nper);\r\n        const pvif_minus_one = pvif - 1;\r\n\r\n        return (m_pmt/((rate/pvif_minus_one) * pvif)) * -1;\r\n    }\r\n\r\n    static translationsStringReplace(keys, translation) {\r\n\r\n        let newTranslation = translation;\r\n\r\n        if (!newTranslation)\r\n            return '';\r\n\r\n        Object.keys(keys).forEach((key) =>  {\r\n            newTranslation = newTranslation.replace(`##${key}##`, keys[key])\r\n        });\r\n        return newTranslation;\r\n    }\r\n\r\n    static getMonths( months ){\r\n        const current = new Date();\r\n        const nextDate = new Date( current.setMonth(current.getMonth() + 1) );\r\n        const nextMonth = nextDate.getMonth();\r\n        const monthName = months[nextMonth];\r\n\r\n        let auxMonths = [];\r\n        _.each(months, (item, index) => {\r\n            auxMonths.push({\r\n                id: index,\r\n                title: item,\r\n                selected: monthName === item ? 1 : 0\r\n            });\r\n        });\r\n        return auxMonths;\r\n    }\r\n\r\n    /* Function to get the start limit date */\r\n    static getStartLimitDate (n) {\r\n        return new Date(new Date().setMonth(new Date().getMonth() + n));\r\n    }\r\n\r\n    /* Function to get the next n years forward date */\r\n    static getEndLimitDate (n) {\r\n        return new Date(new Date().setFullYear(new Date().getFullYear() + n));\r\n    }\r\n}\r\n","const translations = {\r\n    en : {\r\n        loanAmount: 'Vehicle purchase price',\r\n        amountHelpText: 'This is the total purchase price of the vehicle (sticker price, plus taxes and fees).',\r\n        downPaymentText: 'Down payment',\r\n        downPaymentHelp: 'This is the amount of money you will pay upfront for your vehicle. The loan amount is the purchase price minus the down payment.',\r\n        downPaymentError: 'Must be lower than loan amount',\r\n\r\n        loanFormText: 'Purchase Price',\r\n        qualifyFormText: 'Target Payments',\r\n        interestLabel: 'Interest rate',\r\n        interestHelpText: 'This is the annual percentage rate (APR) applied to the loan amount.',\r\n        monthlyPayment: 'Monthly payment',\r\n        monthlyPaymentHelpText: 'This is the maximum monthly payment you can afford to pay for a vehicle.',\r\n\r\n        monthlyPaymentsTitle: 'Your estimated monthly payment',\r\n        totalPrincipalPaid: 'Total Amount Financed',\r\n        totalInterestPaid: 'Total Interest Paid',\r\n\r\n        estimateMaximumLoan: 'Maximum purchase price',\r\n\r\n        showAmortizationBtnText: 'Show Amortization Schedule',\r\n        hideAmortizationBtnText: 'Hide Amortization Schedule',\r\n        amortizationTableHelp: 'This summarizes the repayment schedule of the loan. It shows how each payment is divided between principal and interest charges, as well as the total interest charges and loan balance after each payment.',\r\n\r\n        termInMonths: 'Term',\r\n        termInMonthsHelp: 'This is the amount of time you have to repay the loan, based on the number of monthly payments.',\r\n        monthText: 'month',\r\n        monthPluralText: 'months',\r\n\r\n        startDateText: 'Start date',\r\n        estimatedPayoffDate: 'Estimated Payoff Date',\r\n        amortizationSchedule: 'Amortization Schedule',\r\n        startingDateEmptyText: 'There is no starting date selected.',\r\n        selectDatePlaceholder: 'Click to select a date',\r\n        startDateHelpText: 'This is the date the funds are disbursed to finance the vehicle. Loan payments generally begin the month after the start date.',\r\n\r\n        fullMonths: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n        shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n\r\n        monthYearText: 'Month/Year',\r\n        paymentSingular: 'Payment',\r\n        principalPaid: 'Principal paid',\r\n        interestPaid: 'Interest paid',\r\n        totalInterestText: 'Total interest',\r\n        balance: 'Balance',\r\n        totalAsOf: 'Total (as of ##yyyy##)',\r\n    },\r\n    es : {\r\n        loanAmount: 'Precio de compra del vehículo',\r\n        amountHelpText: 'Es el precio de compra total del vehículo (precio anunciado, mas impuestos y otros cargos).',\r\n        downPaymentText: 'Pago inicial',\r\n        downPaymentHelp: 'Es la cantidad de dinero que usted pagará por adelantado para su vehículo. La cantidad del préstamo será el precio de compra menos el pago inicial.',\r\n        downPaymentError: 'Debe ser inferior al monto del préstamo',\r\n\r\n        loanFormText: 'Precio de Compra',\r\n        qualifyFormText: 'Pagos Deseados',\r\n        interestLabel: 'Tasa de interés',\r\n        interestHelpText: 'Es la tasa de interés anual (APR) aplicada a su préstamo.',\r\n        monthlyPayment: 'Pago mensual',\r\n        monthlyPaymentHelpText: 'Es la cantidad máxima que usted puede permitirse pagar cada mes por su vehículo.',\r\n\r\n        monthlyPaymentsTitle: 'Su pago mensual estimado',\r\n        totalPrincipalPaid: 'Cantidad Total Financiada',\r\n        totalInterestPaid: 'Total del Interés Pagado',\r\n\r\n        estimateMaximumLoan: 'Precio de compra máximo',\r\n\r\n        showAmortizationBtnText: 'Ver tabla de amortización',\r\n        hideAmortizationBtnText: 'Ocultar tabla de amortización',\r\n        amortizationTableHelp: 'Esta tabla resume el plan de pagos de un préstamo, incluyendo el desglose del pago mensual entre el balance principal y los cargos por interés, el interés total pagado y el balance del préstamo luego de cada pago.',\r\n\r\n        termInMonths: 'Término',\r\n        termInMonthsHelp: 'Es la cantidad de tiempo que usted tendrá para pagar el monto, con base en el número de pagos mensuales.',\r\n        monthText: 'mes',\r\n        monthPluralText: 'meses',\r\n\r\n        startDateText: 'Fecha de comienzo',\r\n        estimatedPayoffDate: 'Fecha Estimada de su Pago Final',\r\n        amortizationSchedule: 'Plan de amortización',\r\n        startingDateEmptyText: 'No hay una fecha de inicio seleccionada.',\r\n        selectDatePlaceholder: 'Seleccione una fecha',\r\n        startDateHelpText: 'Es la fecha en que usted recibirá el dinero prestado para pagar el vehículo. Usualmente los pagos comienzan el mes siguiente luego de la fecha de comienzo.',\r\n\r\n        fullMonths: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],\r\n        shortMonths: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],\r\n\r\n        monthYearText: 'Mes/Año',\r\n        paymentSingular: 'Pago',\r\n        principalPaid: 'Principal',\r\n        interestPaid: 'Interés pagado',\r\n        totalInterestText: 'Interés total',\r\n        balance: 'Balance',\r\n        totalAsOf: 'Total (a partir de ##yyyy##)',\r\n    },\r\n    ca : {\r\n        loanAmount: 'Vehicle purchase price',\r\n        amountHelpText: 'This is the total purchase price of the vehicle (sticker price, plus taxes and fees).',\r\n        downPaymentText: 'Down payment',\r\n        downPaymentHelp: 'This is the amount of money you will pay upfront for your vehicle. The loan amount is the purchase price minus the down payment.',\r\n        downPaymentError: 'Must be lower than loan amount',\r\n\r\n        loanFormText: 'Purchase Price',\r\n        qualifyFormText: 'Target Payments',\r\n        interestLabel: 'Interest rate',\r\n        interestHelpText: 'This is the annual percentage rate (APR) applied to the loan amount.',\r\n        monthlyPayment: 'Monthly payment',\r\n        monthlyPaymentHelpText: 'This is the maximum monthly payment you can afford to pay for a vehicle.',\r\n\r\n        monthlyPaymentsTitle: 'Your estimated monthly payment',\r\n        totalPrincipalPaid: 'Total Amount Financed',\r\n        totalInterestPaid: 'Total Interest Paid',\r\n\r\n        estimateMaximumLoan: 'Maximum purchase price',\r\n\r\n        showAmortizationBtnText: 'Show Amortization Schedule',\r\n        hideAmortizationBtnText: 'Hide Amortization Schedule',\r\n        amortizationTableHelp: 'This summarizes the repayment schedule of the loan. It shows how each payment is divided between principal and interest charges, as well as the total interest charges and loan balance after each payment.',\r\n\r\n        termInMonths: 'Term',\r\n        termInMonthsHelp: 'This is the amount of time you have to repay the loan, based on the number of monthly payments.',\r\n        monthText: 'month',\r\n        monthPluralText: 'months',\r\n\r\n        startDateText: 'Start date',\r\n        estimatedPayoffDate: 'Estimated Payoff Date',\r\n        amortizationSchedule: 'Amortization Schedule',\r\n        startingDateEmptyText: 'There is no starting date selected.',\r\n        selectDatePlaceholder: 'Click to select a date',\r\n        startDateHelpText: 'This is the date the funds are disbursed to finance the vehicle. Loan payments generally begin the month after the start date.',\r\n\r\n        fullMonths: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n        shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n\r\n        monthYearText: 'Month/Year',\r\n        paymentSingular: 'Payment',\r\n        principalPaid: 'Principal paid',\r\n        interestPaid: 'Interest paid',\r\n        totalInterestText: 'Total interest',\r\n        balance: 'Balance',\r\n        totalAsOf: 'Total (as of ##yyyy##)',\r\n    },\r\n    fr : {\r\n        loanAmount: 'Vehicle purchase price',\r\n        amountHelpText: 'This is the total purchase price of the vehicle (sticker price, plus taxes and fees).',\r\n        downPaymentText: 'Down payment',\r\n        downPaymentHelp: 'This is the amount of money you will pay upfront for your vehicle. The loan amount is the purchase price minus the down payment.',\r\n        downPaymentError: 'Must be lower than loan amount',\r\n\r\n        loanFormText: 'Purchase Price',\r\n        qualifyFormText: 'Target Payments',\r\n        interestLabel: 'Interest rate',\r\n        interestHelpText: 'This is the annual percentage rate (APR) applied to the loan amount.',\r\n        monthlyPayment: 'Monthly payment',\r\n        monthlyPaymentHelpText: 'This is the maximum monthly payment you can afford to pay for a vehicle.',\r\n\r\n        monthlyPaymentsTitle: 'Your estimated monthly payment',\r\n        totalPrincipalPaid: 'Total Amount Financed',\r\n        totalInterestPaid: 'Total Interest Paid',\r\n\r\n        estimateMaximumLoan: 'Maximum purchase price',\r\n\r\n        showAmortizationBtnText: 'Show Amortization Schedule',\r\n        hideAmortizationBtnText: 'Hide Amortization Schedule',\r\n        amortizationTableHelp: 'Ce tableau résume le calendrier de remboursement d\\'un prêt, y compris la répartition du paiement mensuel entre le principal et les intérêts débiteurs, le total des intérêts payés et le solde du prêt après chaque paiement.',\r\n\r\n        termInMonths: 'Term',\r\n        termInMonthsHelp: 'This is the amount of time you have to repay the loan, based on the number of monthly payments.',\r\n        monthText: 'month',\r\n        monthPluralText: 'months',\r\n\r\n        startDateText: 'Start date',\r\n        estimatedPayoffDate: 'Estimated Payoff Date',\r\n        amortizationSchedule: 'Amortization Schedule',\r\n        startingDateEmptyText: 'There is no starting date selected.',\r\n        selectDatePlaceholder: 'Click to select a date',\r\n        startDateHelpText: 'This is the date the funds are disbursed to finance the vehicle. Loan payments generally begin the month after the start date.',\r\n\r\n        fullMonths: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\r\n        shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n\r\n        monthYearText: 'Month/Year',\r\n        paymentSingular: 'Payment',\r\n        principalPaid: 'Principal paid',\r\n        interestPaid: 'Interest paid',\r\n        totalInterestText: 'Total interest',\r\n        balance: 'Balance',\r\n        totalAsOf: 'Total (as of ##yyyy##)',\r\n    },\r\n\r\n};\r\n\r\nexport default function getTranslations(lan) {\r\n    return translations[lan];\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass Tooltip extends Component{\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { hover: false }\r\n    }\r\n\r\n    handleMouseInOut() {\r\n        this.setState({ hover: !this.state.hover })\r\n    }\r\n\r\n    handleTooltip() {\r\n        this.setState({ hover: !this.state.hover })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"tooltipContainer\">\r\n                <div\r\n                    className='helpMiniDisk'\r\n                    onClick={this.handleTooltip.bind(this)}\r\n                    onMouseOver={this.handleMouseInOut.bind(this)}\r\n                    onMouseOut={this.handleMouseInOut.bind(this)}\r\n                >?</div>\r\n                <div className=\"customTooltip\" style={{visibility: this.state.hover ? 'visible' : 'hidden' }}>{this.props.content}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Tooltip;","import React from 'react';\r\nimport Tooltip from './tooltip.jsx';\r\nimport NumberFormat from 'react-number-format';\r\nimport '../styles/inputGroup.css';\r\n\r\nconst InputGroup = ({id, label, name, value, placeholder, icon, fixedDecimalScale, decimalScale, isIntiger, iconPosition, tooltipContent, errorMsg, errorOccur, onChange}) => {\r\n\r\n    let inputGroup = (\r\n        <div className=\"input-group\">\r\n            <div className=\"input-group-prepend\">\r\n                <span className={`input-group-text ${errorOccur ? 'inputIconError' : '' }`}>{icon}</span>\r\n            </div>\r\n\r\n            <NumberFormat\r\n                id={id}\r\n                name={name}\r\n                value={value}\r\n                className={`form-control ${errorOccur ? 'inputError' : '' }`}\r\n                placeholder={placeholder}\r\n                thousandSeparator={true}\r\n                fixedDecimalScale={fixedDecimalScale}\r\n                decimalScale={decimalScale}\r\n                allowNegative={false}\r\n                onValueChange={ (values) => {\r\n                    //values is an object that contains:\r\n                    // formattedValue = $2,223\r\n                    // value ie, 2223\r\n                    const {value} = values;\r\n\r\n                    onChange({name: name, value: value});\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n\r\n    if(iconPosition === 'right'){\r\n        inputGroup = (\r\n            <div className=\"input-group\">\r\n                <NumberFormat\r\n                    id={id}\r\n                    name={name}\r\n                    value={value}\r\n                    className={`form-control ${errorOccur ? 'inputError' : '' }`}\r\n                    placeholder={placeholder}\r\n                    thousandSeparator={true}\r\n                    fixedDecimalScale={fixedDecimalScale}\r\n                    decimalScale={decimalScale}\r\n                    allowNegative={false}\r\n                    onValueChange={ (values) => {\r\n                        const {value} = values;\r\n                        onChange({name: name, value: value});\r\n                    }}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                    <span className={`input-group-text ${errorOccur ? 'inputIconError' : '' }`}>{icon}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    let singleField = (\r\n        <NumberFormat\r\n            id={id}\r\n            name={name}\r\n            value={value}\r\n            className={`form-control ${errorOccur ? 'inputError' : '' }`}\r\n            placeholder={placeholder}\r\n            thousandSeparator={false}\r\n            allowNegative={false}\r\n            onValueChange={ (values) => {\r\n                const {value} = values;\r\n                onChange({name: name, value: value});\r\n            }}\r\n        />\r\n    );\r\n\r\n    return (\r\n        <React.Fragment>\r\n            { label &&\r\n                (<label htmlFor={id} className=\"col-12 loan-label\">\r\n                    <Tooltip content={tooltipContent} /> {label}\r\n                </label>)\r\n            }\r\n\r\n\r\n            <div className=\"col-12\">\r\n                { icon ? inputGroup : singleField}\r\n                <small className={`inputErrorText ${errorOccur ? 'show' : 'hide' }`}>{errorMsg}</small>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n\r\n};\r\n\r\nexport default InputGroup;\r\n","import React from \"react\";\r\n\r\nconst TableHeader = ({columns}) => {\r\n  return (\r\n        <thead>\r\n            <tr>\r\n                { columns.map(column => <th key={column}>{column}</th>) }\r\n            </tr>\r\n        </thead>\r\n  );\r\n}\r\n\r\nexport default TableHeader;\r\n","import React from \"react\";\r\nimport Util from '../Utils'\r\n\r\nconst TableBody = ({data}) => {\r\n\r\n    return (\r\n      <tbody>\r\n        {data.map((row, index)  => {\r\n                return (\r\n                    <tr key={index+'_row'} className={row.bg_class}>\r\n                    { Object.keys(row).map((columnKeyName, i) => ( columnKeyName !== 'bg_class' &&\r\n                        <td key={index+'_'+i+'cell'}>\r\n                        { row[columnKeyName] }\r\n                        { i > 0 && Util.countDecimalPlaces(row[columnKeyName]) === 1 && '0' }\r\n                        </td>\r\n                    )) }\r\n                    </tr>\r\n                );\r\n            }\r\n\r\n        )}\r\n      </tbody>\r\n    );\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader.jsx\";\r\nimport TableBody from \"./tableBody.jsx\";\r\nimport Tooltip from \"./tooltip\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport Util from \"../Utils\";\r\n\r\nconst Table = ({ columns, data }) => {\r\n  return (\r\n    <table className=\"table table-bordered table-hover\">\r\n      <TableHeader columns={columns}/>\r\n      <TableBody data={data} />\r\n    </table>\r\n  );\r\n};\r\n\r\nconst TableResults = ({state, onHandleDateChange}) => {\r\n\r\n    const {\r\n        lan,\r\n        translations,\r\n        startDate,\r\n        dateToFinish,\r\n\r\n        tableColumns,\r\n        tableResults\r\n\r\n    } = state;\r\n\r\n    return (\r\n        <div className=\"container row results-container\">\r\n            <hr className=\"mp-results-line\"/>\r\n            <div id=\"autoLoanPaymentResults\" className=\"col-sm-12\">\r\n                <div className=\"row form-group mb-3\">\r\n                    <div className=\"col-xs-12 col-sm-6\">\r\n                        <label htmlFor=\"loan-start-date\" className=\"col-12 loan-label p-0\">\r\n                            <Tooltip content={ translations.startDateHelpText } /> {translations.startDateText} *\r\n                        </label>\r\n\r\n                        <DatePicker\r\n                            id=\"loan-start-date\"\r\n                            className=\"form-control\"\r\n                            locale={lan} //could be \"es\"\r\n                            minDate={new Date()}\r\n                            maxDate={Util.getEndLimitDate(90)}\r\n                            selected={startDate}\r\n                            onChange={onHandleDateChange}\r\n                            isClearable\r\n                            placeholderText={translations.selectDatePlaceholder}\r\n                        />\r\n                        <small><i>{translations.dateHelpMessage}</i></small>\r\n                    </div>\r\n\r\n                    <div className={startDate ? 'col-xs-12 col-sm-6 text-right' : 'hide' }>\r\n                        <div className=\"pr-4\">\r\n                            <h3 className=\"loan-titles\">{translations.estimatedPayoffDate}</h3>\r\n                            <div className=\"end-date-result\">\r\n                                { translations.fullMonths[dateToFinish.getMonth()]+' '+dateToFinish.getDate()+', '+dateToFinish.getFullYear() }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-8 relative-loan-wrapper\">\r\n                        <Tooltip content={ translations.amortizationTableHelp } />\r\n                        <h3>{ translations.amortizationSchedule }</h3>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"table-responsive scrolling-table underlined-tbody\">\r\n                    { startDate && <Table columns={tableColumns} data={tableResults} /> }\r\n                </div>\r\n                <p className={startDate ? 'hide' : 'show' }>{ translations.startingDateEmptyText }</p>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TableResults;\r\n","import React from \"react\";\r\nimport Util from '../Utils'\r\n\r\nconst CalculatorResults = ({state, onChangeAmortization, monthlyPayment, estimateMaximumLoan}) => {\r\n\r\n    const {\r\n        amount,\r\n        downPayment,\r\n        mortgageTotals,\r\n        showAmortization,\r\n        translations,\r\n        formType\r\n    } = state;\r\n\r\n    let resultTitle = translations.monthlyPaymentsTitle;\r\n    let estimate = monthlyPayment;\r\n\r\n    if (formType === 'qualify') {\r\n        resultTitle = translations.estimateMaximumLoan;\r\n        estimate = estimateMaximumLoan;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"mt-5 text-center\">\r\n                <h3 className=\"loan-titles\" id=\"renderResultTitle\">{resultTitle}</h3>\r\n            </div>\r\n            <div className=\"mp-result mb-5\">\r\n                <div className=\"mp-dolar-sign\">$</div>\r\n                <div className=\"mp-dolar-numbers\">{ Util.formatMoney( Util.roundTo(estimate,2)) }</div>\r\n            </div>\r\n            <div className=\"text-left\">\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-7\">{translations.totalPrincipalPaid}</div>\r\n                    <div className=\"col-5 text-black\">{ '$' + Util.formatMoney( Util.roundTo(amount-downPayment, 2) ) }</div>\r\n                </div>\r\n\r\n                <hr className=\"mp-results-line\" />\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-7\">{translations.totalInterestPaid}</div>\r\n                    <div className=\"col-5 text-black\">{'$' + Util.formatMoney( Util.roundTo(mortgageTotals.interestPaid, 2) ) }</div>\r\n                </div>\r\n\r\n                <button className=\"btn loan-btn-go-table\" onClick={onChangeAmortization}>\r\n                    {showAmortization ? translations.hideAmortizationBtnText : translations.showAmortizationBtnText }\r\n                    <i className={showAmortization ? \"arrow up\" : \"arrow down\"}></i>\r\n                </button>\r\n\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default CalculatorResults;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/select.css\";\r\n\r\nclass Dropdown extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listOpen: false,\r\n      selected: 0\r\n    };\r\n    this.close = this.close.bind(this);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    setTimeout(() => {\r\n      this.state.listOpen\r\n        ? window.addEventListener(\"click\", this.close)\r\n        : window.removeEventListener(\"click\", this.close);\r\n    }, 0);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"click\", this.close);\r\n  }\r\n\r\n  close(timeOut) {\r\n    this.setState({ listOpen: false });\r\n  }\r\n\r\n  selectItem(id) {\r\n    this.setState( {listOpen: false}, this.props.handleBPSelect(id, this.props.name) );\r\n  }\r\n\r\n  toggleList() {\r\n    this.setState(prevState => ({\r\n      listOpen: !prevState.listOpen\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const { listOpen } = this.state;\r\n    const headerTitle = this.props.list.filter(item => item.selected)[0].title;\r\n    //const headerSubTitle = this.props.list.filter(item => item.selected)[0].subtitle;\r\n\r\n    return (\r\n      <div className=\"dd-wrapper\">\r\n        <div className=\"dd-header\" onClick={() => this.toggleList()}>\r\n          <div className=\"dd-header-title\">\r\n            <span>{headerTitle}</span>\r\n          </div>\r\n          {listOpen ? (\r\n            <i className=\"select-arrow up\" />\r\n          ) : (\r\n            <i className=\"select-arrow down\" />\r\n          )}\r\n        </div>\r\n        {listOpen && (\r\n          <ul className=\"dd-list\" onClick={e => e.stopPropagation()}>\r\n            {this.props.list.map(item => (\r\n              <li\r\n                className={\r\n                  item.selected ? \"dd-list-item selected\" : \"dd-list-item\"\r\n                }\r\n                key={item.id}\r\n                onClick={() => this.selectItem(item.id)}\r\n              >\r\n                <span>{item.title}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dropdown;\r\n","import React, { Component } from 'react';\r\nimport {registerLocale} from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { scroller } from 'react-scroll';\r\n\r\n//Setting Up Location\r\nimport es from 'date-fns/locale/es';\r\nimport frCa  from 'date-fns/locale/fr-CA';\r\n\r\nimport Util from \"./Utils\";\r\nimport getTranslations from './language';\r\n\r\nimport './App.css';\r\nimport InputGroup from './components/inputGroup';\r\nimport Tooltip from \"./components/tooltip\";\r\nimport TableResults from \"./components/tableResults\";\r\nimport CalculatorResults from \"./components/calculatorResults\";\r\nimport Dropdown from \"./components/select\";\r\nimport _ from 'underscore';\r\n\r\nregisterLocale('es', es);\r\nregisterLocale('fr', frCa);\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        const region = props.region ? props.region : 'us';\r\n        const lan = props.lan ? props.lan : 'en';\r\n        const languages = getTranslations(props.lan);\r\n\r\n        this.state = {\r\n            region,\r\n            lan,\r\n            translations: languages,\r\n            formType: 'loan',\r\n\r\n            amount: 15000,\r\n            months: 36,\r\n            interest: 3,\r\n            downPayment: 0,\r\n            monthlyPayment: 0,\r\n\r\n            tableColumns : [\r\n                languages.monthYearText,\r\n                languages.paymentSingular,\r\n                languages.principalPaid,\r\n                languages.interestPaid,\r\n                languages.totalInterestText,\r\n                languages.balance+' ',\r\n            ],\r\n            tableResults : [],\r\n            dateToFinish : new Date(),\r\n\r\n            showResults: false,\r\n            mortgageTotals: {},\r\n\r\n            startDate: new Date(),\r\n            showAmortization: false,\r\n            term: 1,\r\n        };\r\n\r\n    }//End of Constructor\r\n\r\n\r\n\r\n    handleChange = (properties) => {\r\n        this.setState({[properties.name]: properties.value, showResults: false});\r\n    };\r\n\r\n    scrollTo(selector) {\r\n        scroller.scrollTo(selector, {\r\n            duration: 800,\r\n            delay: 0,\r\n            offset: -100,\r\n            smooth: 'easeInOutQuart',\r\n        })\r\n    }\r\n\r\n    getTermMonths(currentTerm = 36) {\r\n\r\n        let terms = [12,24,36,48,60,72,84];\r\n\r\n        let months = [];\r\n        _.each(terms, (term, key) => {\r\n            months.push({\r\n                id: term,\r\n                title: `${term}`,\r\n                selected: term === currentTerm\r\n            })\r\n        });\r\n\r\n        return months;\r\n    }\r\n\r\n    handleFormTypeChange = (props) => {\r\n\r\n        const formType = props.target.name;\r\n        let monthlyPayment = this.state.monthlyPayment;\r\n        let amount = this.state.amount;\r\n\r\n        if (this.state.formType === formType) {\r\n            return false;\r\n        }\r\n\r\n        if (formType === 'qualify') {\r\n            monthlyPayment = this.monthlyPayment();\r\n        }\r\n\r\n        if (formType === 'loan') {\r\n            amount = this.estimateLoanAmount();\r\n        }\r\n\r\n        this.setState({formType,monthlyPayment, amount}, () => {\r\n            if (amount > 0) {\r\n                this.calculateAmortization();\r\n            }\r\n        });\r\n    };\r\n\r\n    handleBPSelect = (value, name) => {\r\n        //Updating List of Monthds\r\n        this.setState({[name]: value, showResults: false});\r\n    };\r\n\r\n    handleDateChange = date => {\r\n        this.setState({ startDate: date }, () => { this.calculateAmortization() });\r\n    };\r\n\r\n    rate() {\r\n        if (this.state.region === 'ca') {\r\n            return (Math.pow(Math.pow(1+(this.state.interest/100/2),2),(1/12))-1);\r\n        }\r\n\r\n        return this.state.interest/100/12;\r\n    }\r\n\r\n    monthlyPayment() {\r\n        const amount = this.state.amount-this.state.downPayment;\r\n\r\n        if (this.state.region === 'ca') {\r\n            return (amount*this.rate())/(1-Math.pow(1+this.rate(),-this.state.months));\r\n        }\r\n\r\n        return Util.pmt(this.rate(),this.state.months,-amount);\r\n    }\r\n\r\n    estimateLoanAmount() {\r\n        let total_amount = Util.estimateLoan(this.rate(), this.state.months, -this.state.monthlyPayment);\r\n        let downPayment = parseFloat(this.state.downPayment);\r\n\r\n        if (downPayment > 0) {\r\n            total_amount += downPayment;\r\n        }\r\n\r\n        return total_amount;\r\n    }\r\n\r\n    calculateAmortization = () =>{\r\n\r\n        let {\r\n            amount,\r\n            downPayment,\r\n            months,\r\n            startDate,\r\n            term,\r\n            translations,\r\n            formType,\r\n            monthlyPayment\r\n        } = this.state;\r\n\r\n\r\n        let monthly_payment = monthlyPayment;\r\n\r\n        if (formType === 'loan') {\r\n            monthly_payment = this.monthlyPayment();\r\n        }\r\n\r\n        let monthly_payment_without_extra = monthly_payment;\r\n\r\n        let total_interest = 0;\r\n        let default_color = 'trbg-default';\r\n        let tr_bg_color = default_color;\r\n\r\n\r\n        let payment = Number(monthly_payment);\r\n\r\n        let amortizationTerm = months;\r\n        let term_date = '';\r\n        let aux_dates = '';\r\n        let next_month = '';\r\n        let next_year = '';\r\n        let interest_paid = '';\r\n        let principal_paid = 0;\r\n        let amortizationTable = [];\r\n\r\n        let yearTotals = {\r\n            payment: 0,\r\n            principalPaid: 0,\r\n            interestPaid: 0,\r\n            totalInterest: 0,\r\n            balance: 0,\r\n            earlyPayments: 0\r\n        };\r\n\r\n        let termTotals = {\r\n            payment: 0,\r\n            principalPaid: 0,\r\n            interestPaid: 0,\r\n            totalInterest: 0,\r\n            balance: 0,\r\n            earlyPayments: 0\r\n        };\r\n\r\n        amount = amount-downPayment;\r\n\r\n        let currDate = new Date(startDate);\r\n        let termEndDate = new Date(startDate);\r\n        termEndDate.setFullYear(currDate.getFullYear() + term);\r\n\r\n        for(let month=1; month<=amortizationTerm; month++) {\r\n            tr_bg_color = default_color;\r\n\r\n            aux_dates = new Date(startDate);\r\n            term_date = new Date( aux_dates.setMonth(aux_dates.getMonth() + month) );\r\n            next_month = term_date.getMonth();\r\n            next_year = term_date.getFullYear();\r\n\r\n            interest_paid = amount*this.rate();\r\n\r\n            principal_paid = payment-interest_paid;\r\n\r\n            if (amount < principal_paid){\r\n                principal_paid = amount;\r\n                payment = principal_paid;\r\n                amount = 0;\r\n            }\r\n            else {\r\n                amount -= (payment-interest_paid);\r\n            }\r\n\r\n            yearTotals.payment += payment;\r\n            yearTotals.principalPaid += principal_paid;\r\n            yearTotals.interestPaid += interest_paid;\r\n            yearTotals.earlyPayments += Math.max(0,monthly_payment-monthly_payment_without_extra);\r\n\r\n\r\n            total_interest += interest_paid;\r\n\r\n            amortizationTable.push({\r\n                month_year: translations.shortMonths[next_month]+' - '+next_year,\r\n                payment: '$' + Util.formatMoney( Util.roundTo(payment, 2) ),\r\n                principalPaid: '$' + Util.formatMoney( Util.roundTo(principal_paid, 2) ),\r\n                interestPaid: '$' + Util.formatMoney( Util.roundTo(interest_paid, 2) ),\r\n                totalInterest: '$' + Util.formatMoney( Util.roundTo(total_interest, 2) ),\r\n                balance: '$' + Util.formatMoney( Util.roundTo(amount, 2) ),\r\n                bg_class: tr_bg_color,\r\n            });\r\n\r\n            // last month total  - amount is never zero so the verification is 0.01\r\n            if (next_month === 11 || amount <= 0.01) {\r\n                amortizationTable.push({\r\n                    month_year: Util.translationsStringReplace({\r\n                        'yyyy': next_year\r\n                    }, translations.totalAsOf),\r\n                    payment: '$' + Util.formatMoney( Util.roundTo(yearTotals.payment, 2) ),\r\n                    principalPaid: '$' + Util.formatMoney( Util.roundTo(yearTotals.principalPaid, 2) ),\r\n                    interestPaid: '$' + Util.formatMoney( Util.roundTo(yearTotals.interestPaid, 2) ),\r\n                    totalInterest: '$' + Util.formatMoney( Util.roundTo(total_interest, 2) ),\r\n                    balance: '$' + Util.formatMoney( Util.roundTo(amount, 2) ),\r\n                    bg_class: 'trbg-total',\r\n                });\r\n            }\r\n\r\n            if(amount <= 0){\r\n                break;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            monthlyPayment: monthly_payment_without_extra,\r\n            tableResults: amortizationTable,\r\n            dateToFinish: term_date,\r\n            showResults: true,\r\n            showEPayError: false,\r\n            mortgageTotals: yearTotals,\r\n            termTotals: termTotals\r\n        });\r\n\r\n    };\r\n\r\n    handleAmortizationAction = () => {\r\n        let aux_showAmortization = this.state.showAmortization;\r\n        aux_showAmortization = !aux_showAmortization;\r\n\r\n        this.setState({showAmortization : aux_showAmortization} );\r\n    };\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        this.calculateAmortization();\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            formType,\r\n            translations,\r\n            amount,\r\n            months,\r\n            interest,\r\n            downPayment,\r\n            monthlyPayment\r\n        } = this.state;\r\n        const {btnLabel} = this.props;\r\n\r\n        const termMonths = this.getTermMonths(months);\r\n\r\n        return (\r\n            <div className=\"auto-loan-calculator-wrapper\">\r\n                <div className=\"container row\">\r\n                    <div className=\"col-sm-12 col-lg-6 col-xl-6 form-container\">\r\n                        <div className=\"row no-gutters mt-3\">\r\n                            <div className=\"btn-group btn-group-toggle col-12 col-sm-6\">\r\n                                <button className={`btn btn-secondary ${formType === 'loan' ? 'btn-active' : ''}`} name=\"loan\" onClick={this.handleFormTypeChange}>{translations.loanFormText}</button>\r\n                            </div>\r\n                            <div className=\"btn-group btn-group-toggle col-12 col-sm-6\">    \r\n                                <button className={`btn btn-secondary ${formType === 'qualify' ? 'btn-active' : ''}`} name=\"qualify\" onClick={this.handleFormTypeChange}>{translations.qualifyFormText}</button>\r\n                            </div>\r\n                        </div>\r\n                        <form id=\"mbp-calculator\" onSubmit={this.handleSubmit.bind(this)} >\r\n                            <div className=\"row form-group mt-3\">\r\n                                { formType === 'loan' && (\r\n                                    <InputGroup\r\n                                        id='loan-amount'\r\n                                        label={translations.loanAmount}\r\n                                        name='amount'\r\n                                        value={Math.min(amount, 1000000)}\r\n                                        fixedDecimalScale={true}\r\n                                        decimalScale={2}\r\n                                        icon='$'\r\n                                        iconPosition='left'\r\n                                        tooltipContent={translations.amountHelpText}\r\n                                        errorOccur={(Number(amount) < 1 || Number(amount) > 1000000 || amount === '') ? 1 : 0}\r\n                                        errorMsg={translations.moneyFieldError}\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                )}\r\n                                { formType === 'qualify' && (\r\n                                    <InputGroup\r\n                                        id='monthly-payment'\r\n                                        label={translations.monthlyPayment}\r\n                                        name='monthlyPayment'\r\n                                        value={this.state.monthlyPayment}\r\n                                        fixedDecimalScale={true}\r\n                                        decimalScale={2}\r\n                                        icon='$'\r\n                                        iconPosition='left'\r\n                                        tooltipContent={translations.monthlyPaymentHelpText}\r\n                                        errorOccur={(Number(monthlyPayment) < 1 || Number(monthlyPayment) > 1000000 || monthlyPayment === '') ? 1 : 0}\r\n                                        errorMsg={translations.moneyFieldError}\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"row no-gutters mt-3\">\r\n                                <InputGroup\r\n                                    id='ssc_interest'\r\n                                    label={translations.interestLabel}\r\n                                    name='interest'\r\n                                    value={interest}\r\n                                    icon='%'\r\n                                    iconPosition='left'\r\n                                    tooltipContent={translations.interestHelpText}\r\n                                    errorOccur={(Number(interest) <= 0 || Number(interest) > 100 || interest === '') ? 1 : 0}\r\n                                    errorMsg={translations.percentageFieldError}\r\n                                    onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"row no-gutters\">\r\n\r\n                                <div className=\"col-12 no-gutters mt-3\">\r\n                                    <label htmlFor=\"interestTerm\" className=\"col-12\">\r\n                                        <Tooltip content={translations.termInMonthsHelp} />\r\n                                        {translations.termInMonths}\r\n                                    </label>\r\n\r\n                                    <div className=\"input-group input-select\">\r\n                                        <div className=\"input-group-append\">\r\n                                            <span className=\"input-group-text\">{`${translations.monthPluralText}`}</span>\r\n                                        </div>\r\n\r\n                                        <Dropdown\r\n                                            name=\"months\"\r\n                                            list={termMonths}\r\n                                            handleBPSelect={this.handleBPSelect}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-12\">\r\n                                    <small className={`inputErrorText ${ (months < 1 || months > 84 ||  months === '') ? 'show' : 'hide' }`}>{translations.timeError}</small>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row no-gutters mt-3\">\r\n                                <div className=\"col-sm-12 no-gutters\">\r\n                                    <InputGroup\r\n                                        id='downPayment'\r\n                                        label={translations.downPaymentText}\r\n                                        name='downPayment'\r\n                                        value={downPayment}\r\n                                        wrapperClass={'pr-1 down-payment-field'}\r\n                                        icon='$'\r\n                                        iconPosition='left'\r\n                                        tooltipContent={translations.downPaymentHelp}\r\n                                        errorOccur={parseFloat(downPayment) > amount}\r\n                                        errorMsg={translations.downPaymentError}\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"mt-4 mb-3\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-secondary btn-block\"\r\n                                    disabled={ Number(amount) < 1 || Number(amount) > 1000000 || amount === '' ||\r\n                                    Number(months) < 1 || Number(months) > 84 || months === '' }\r\n                                >\r\n                                    { btnLabel }\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n\r\n                    {/* Showing monthly payment results */}\r\n                    {this.state.showResults && (\r\n                        <div className=\"col-sm-12 col-lg-6 col-xl-6\">\r\n                            <CalculatorResults\r\n                                state={this.state}\r\n                                onChangeAmortization={this.handleAmortizationAction}\r\n                                monthlyPayment={this.monthlyPayment()}\r\n                                estimateMaximumLoan={this.estimateLoanAmount()}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </div>\r\n\r\n                {this.state.showResults && this.state.showAmortization && (\r\n                    <TableResults state={this.state} onHandleDateChange={this.handleDateChange}/>\r\n                )}\r\n            </div>\r\n        );\r\n\r\n    }//End of render\r\n\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'react-app-polyfill/ie9';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n// /*\r\n(function(window){\r\n    const _init = ({\r\n                       selector     = 'vtLoanCalc',\r\n                       region       = 'us',\r\n                       lan          = 'en',\r\n                       btnLabel     = 'Calculate',\r\n                   })=>{\r\n        let calculator = (<App lan={lan} btnLabel={btnLabel} region={region}/>);\r\n        ReactDOM.render( calculator, document.getElementById(selector) );\r\n    }\r\n\r\n    window.VTAutoLoanCalculator = { init: _init }\r\n})(window);\r\n// */\r\n\r\n// ReactDOM.render(<App region=\"us\" lan=\"es\" btnLabel=\"Calculate\" />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}