{"version":3,"sources":["Utils.js","language.js","components/tooltip.jsx","components/inputGourp.jsx","components/tableHeader.jsx","components/tableBody.jsx","components/table.jsx","components/select.jsx","App.js","serviceWorker.js","index.js"],"names":["moneyFormatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","penniesFormatter","percentFormatter","Number","prototype","formatMoneyN","c","d","t","n","this","s","isNaN","Math","abs","undefined","i","parseInt","toFixed","j","length","substr","replace","slice","Util","percent","value","strNumber","toString","parseFloat","substring","money","amount","showPennies","arguments","withSymbol","format","test","digits","negative","multiplicator","pow","round","total","subtotal","floor","number","str","index","indexOf","time_n","is_month","time_result","roundTo","monthCount","lan","getPlural","word","one","other","m","y","result","push","en","es","ca","fr","join","num_years","current","Date","setMonth","getMonth","currentYear","getFullYear","years","cont","id","title","selected","months","monthName","auxMonths","map","item","setFullYear","translations","calculatorTitle","amountLabel","amountHelpText","monthlyDepositLabel","balance","interest","totalPaid","totalPrincipalPaid","totalInterestPaid","totalEarlyPayments","principalPaid","interestPaid","monthYearText","interestHelpText","payments","paymentSingular","paymentLower","monthlyPayments","biWeeklyPayments","interestLabel","monthly","yearText","yearPluralText","yearPluralTextCapital","termsSummary","termsSummaryLabel","TimeToRepayText","totalBalanceText","totalInterestText","monthlyText","annuallyText","biweeklyText","biweeklyLowerText","loanAmount","termInYears","termInMonths","orText","downPaymentText","downPaymentHelp","downPaymentRateText","downPaymentRateHelp","dateHelpText","termHelpText","startDateText","startDateHelpText","moneyFieldError","percentageFieldError","yearsError","monthsError","timeError","estimatedPayoffDate","amortizationSchedule","startingDateEmptyText","selectDatePlaceholder","fullMonths","shortMonths","showAmortizationBtnText","hideAmortizationBtnText","withExtraPayments","withoutExtraPayments","showExtraPayments","hideExtraPayments","extraPaymentsText1","extraPaymentHelp1","extraPaymentHelp2","extraPaymentHelp3","extraPaymentLabel1","extraPaymentLabel2","extraPaymentLabel3","addExtraBtnTitle","extraLumpError","dateHelpMessage","amortizationTableHelp","totalAsOf","amortizationPeriodSummary","fixedTermSummary","Tooltip","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","hover","setState","react_default","a","createElement","className","onClick","handleTooltip","bind","onMouseOver","handleMouseInOut","onMouseOut","visibility","content","Component","InputGroup","_ref","label","name","placeholder","icon","iconPosition","isIntiger","tooltipContent","errorMsg","errorOccur","onChange","wrapperClass","inputGroup","concat","react_number_format_es","thousandSeparator","allowNegative","onValueChange","values","singleField","Fragment","htmlFor","tooltip","TableHeader","columns","column","key","TableBody","data","row","bg_class","keys","columnKeyName","countDecimalPlaces","Table","tableHeader","tableBody","Dropdown","listOpen","close","assertThisInitialized","_this2","setTimeout","window","addEventListener","removeEventListener","timeOut","handleBPSelect","prevState","_this3","headerTitle","list","filter","toggleList","e","stopPropagation","selectItem","registerLocale","frCa","App","handleChange","properties","showResults","defineProperty","handlePaymentTypeChange","paymentType","target","_this$setState2","tempPer","JSON","parse","stringify","forEach","currDate","currYear","currentMonth","extra_lump_month","extraLumpMonths","findIndex","obj","aux_showEPayError","extraLumpYears","handleDownPayment","validated_value","lockField","_this$setState3","min","max","downPaymentRate","_this$setState4","downPayment","handleTermChange","int_val","term","handleTimeChange","time_value","calculateMonthsYears","rest","str_number","split","keyUpHandlerTime","_e$target","calculateAmortization","_this$state","startDate","extraMonthlyAmount","extra_yearly_amount","extra_lump_amount","extraYearlyMonths","extra_yearly_month","extra_lump_year","monthly_payment","biWeeklyPayment","monthlyPayment","monthly_payment_without_extra","total_interest","default_color","tr_bg_color","payment","temp_payment","amortizationTerm","term_date","aux_dates","next_month","next_year","interest_paid","principal_paid","amortizationTable","yearTotals","totalInterest","earlyPayments","termTotals","termEndDate","month","rate","getTime","formatMoney","month_year","translationsStringReplace","yyyy","setHours","new_amount","once_a_year_paid","one_time_payment","setTime","biWeeklyRate","date","getDate","tableResults","dateToFinish","showEPayError","mortgageTotals","showAmortization","scrollTo","handleAmortizationAction","aux_showAmortization","handleExtraPaymentFields","auxTableResults","aux_showExtraPayments","handleDateChange","region","possibleYears","getPossibleYears","languages","getTranslations","listOfMonths","getMonthds","tableColumns","termTotal","nper","pv","fv","type","pvif","pmt","translation","newTranslation","preventDefault","selector","scroller","duration","delay","offset","smooth","_this$state2","_this$props","btnLabel","resultsSectionTitle","onSubmit","handleSubmit","inputGourp","disabled","components_select","react_datepicker_min_default","locale","minDate","maxDate","getEndLimitDate","isClearable","placeholderText","table","Boolean","location","hostname","match","Array","predicate","TypeError","o","len","thisArg","k","kValue","configurable","writable","VTMortgagePaymentCalculator","init","_ref$selector","_ref$region","_ref$lan","_ref$btnLabel","_ref$title","calculator","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0VAAIA,EAAiB,IAAIC,KAAKC,aAAa,QAAS,CAChDC,MAAO,WACPC,SAAU,MACVC,sBAAuB,EACvBC,sBAAuB,IAGvBC,EAAmB,IAAIN,KAAKC,aAAa,QAAS,CAClDC,MAAO,WACPC,SAAU,QAKVI,EAAmB,IAAIP,KAAKC,aAAa,QAAS,CAClDC,MAAO,UACPE,sBAAuB,EACvBC,sBAAuB,IAG3BG,OAAOC,UAAUC,aAAe,SAAUC,EAAGC,EAAGC,GAAK,IAAIC,EAAIC,KAAwGC,GAAlGL,EAAIM,MAAMN,EAAIO,KAAKC,IAAIR,IAAM,EAAIA,EAAGC,OAAUQ,IAANR,EAAkB,IAAMA,EAAGC,OAAUO,IAANP,EAAkB,IAAMA,EAAOC,EAAI,EAAI,IAAM,IAAIO,EAAIC,SAASR,EAAII,KAAKC,KAAKL,GAAK,GAAGS,QAAQZ,IAAM,GAAIa,GAAKA,EAAIH,EAAEI,QAAU,EAAID,EAAI,EAAI,EAAG,OAAOR,GAAKQ,EAAIH,EAAEK,OAAO,EAAGF,GAAKX,EAAI,IAAMQ,EAAEK,OAAOF,GAAGG,QAAQ,iBAAkB,KAAOd,IAAMF,EAAIC,EAAIM,KAAKC,IAAIL,EAAIO,GAAGE,QAAQZ,GAAGiB,MAAM,GAAK,SAE3YC,8GACKC,GAClB,IAAIC,EAAQD,EACRE,EAAYD,EAAME,WAEtB,OAAIhB,MAAMc,IAAUA,EAAQ,EACjB,GAERA,GAAS,IACDG,WAAYF,EAAUG,UAAU,EAAGH,EAAUP,OAAS,IAE9DM,EAAQ,IACAC,EAAUG,UAAU,EAAG,GAE3BJ,uCAGSK,GAChB,QAAchB,IAAVgB,EAAqB,MAAO,GAChC,IAAIL,EAAQT,SAASc,EAAMT,QAAQ,MAAO,KAC1C,OAAQV,MAAMc,GAAiB,GAARA,qCAGTM,GAAgD,IAAxCC,EAAwCC,UAAAd,OAAA,QAAAL,IAAAmB,UAAA,IAAAA,UAAA,GAAnBC,IAAmBD,UAAAd,OAAA,QAAAL,IAAAmB,UAAA,KAAAA,UAAA,GAC9D,GAAe,OAAXF,GAA8B,KAAXA,EAAe,MAAO,GAC7C,IAAIN,EAAQO,EAAchC,EAAiBmC,OAAOJ,GAAUtC,EAAe0C,OAAOJ,GAClF,OAAmB,IAAfG,EACOT,EAAMI,UAAU,GAEpBJ,2CAEaK,GACpB,OAAOA,EAAMT,QAAQ,IAAK,IAAIA,QAAQ,IAAK,6CAGvBI,GACpB,MAAO,kBAAkBW,KAAKX,0CAGZA,GAClB,MAAa,MAAVA,GAGQ,QAAQW,KAAKX,KAAY,SAASW,KAAKX,uCAGnCA,GACf,OAAOG,WAAWH,EAAMJ,QAAQ,WAAY,KAAKjB,+CAGtCI,EAAG6B,GACd,IAAIC,GAAW,OACAxB,IAAXuB,IACAA,EAAS,GAEL7B,EAAI,IACR8B,GAAW,EACb9B,IAAS,GAEX,IAAI+B,EAAgB3B,KAAK4B,IAAI,GAAIH,GAMjC,OALA7B,EAAIoB,YAAYpB,EAAI+B,GAAetB,QAAQ,KAC3CT,GAAKI,KAAK6B,MAAMjC,GAAK+B,GAAetB,QAAQoB,GACxCC,IACA9B,IAAU,EAALA,GAAQS,QAAQ,IAElBT,uCAGSuB,EAAQG,GACxB,GAAe,OAAXH,GAA8B,KAAXA,EAAe,MAAO,GAC7C,IAAIN,EAAQxB,EAAiBkC,OAAOJ,GACpC,OAAmB,IAAfG,EACOT,EAAMI,UAAU,EAAGJ,EAAMN,OAAS,GAEtCM,2CAGaiB,EAAOC,GAQ3B,OANGhC,MAAM+B,IAAU/B,MAAMgC,GAChB,IAEC/B,KAAKgC,MAAQD,EAASD,EAAS,gDAMnBG,GACtB,IAAMC,EAAM,GAAKD,EACXE,EAAQD,EAAIE,QAAQ,KAC1B,OAAID,GAAS,EACFD,EAAI3B,OAAS4B,EAAQ,EAErB,iDAS0C,IAA7BE,EAA6BhB,UAAAd,OAAA,QAAAL,IAAAmB,UAAA,GAAAA,UAAA,GAApB,EAAGiB,IAAiBjB,UAAAd,OAAA,QAAAL,IAAAmB,UAAA,KAAAA,UAAA,GACjDkB,EAA+B,GAAjBjD,OAAO+C,GAKzB,OAJGC,IACCC,EAAc1C,KAAK2C,QAAUlD,OAAO+C,GAAU,GAAK,IAGhDE,oDAGsBE,EAAYC,GACzC,SAASC,EAAUV,EAAQW,GACvB,OAAkB,IAAXX,EAAeW,EAAKC,IAAMD,EAAKE,MAG1C,IAyCIC,EAAIN,EAAa,GACjBO,EAAIhD,KAAKgC,MAAMS,EAAa,IAC5BQ,EAAS,GAKb,OAHAD,GAAKC,EAAOC,KAAKF,EAAI,IAAML,EAAUK,EA3BvB,CACVG,GAAG,CACCN,IAAK,OACLC,MAAO,SAEXM,GAAG,CACCP,IAAK,SACLC,MAAO,WAEXO,GAAG,CACCR,IAAK,OACLC,MAAO,SAEXQ,GAAG,CACCT,IAAK,OACLC,MAAO,UAY+BJ,KAC9CK,GAAKE,EAAOC,KAAKH,EAAI,IAAMJ,EAAUI,EA9CtB,CACXI,GAAG,CACCN,IAAK,QACLC,MAAO,UAEXM,GAAG,CACCP,IAAK,MACLC,MAAO,SAEXO,GAAG,CACCR,IAAK,QACLC,MAAO,UAEXQ,GAAG,CACCT,IAAK,QACLC,MAAO,WA+BgCJ,KAExCO,EAAOM,KAZF,CACRJ,GAAI,QACJC,GAAI,OAUeV,6CAGHc,GACpB,IAAMC,EAAU,IAAIC,KACpBD,EAAQE,SAASF,EAAQG,WAAa,GAItC,IAHA,IAAMC,EAAcJ,EAAQK,cACxBC,EAAQ,GACRC,EAAO,EACHhB,EAAIa,EAAab,EAAEa,EAAYL,EAAWR,IAC9Ce,EAAMb,KAAK,CACPe,GAAID,EACJE,MAAOlB,EACPmB,SAAmB,IAATH,EAAa,EAAI,IAG/BA,IAEJ,OAAOD,qCAGQK,GACf,IAAMX,EAAU,IAAIC,KAGdW,EAAYD,EAFD,IAAIV,KAAMD,EAAQE,SAASF,EAAQG,WAAa,IACtCA,YAGvBU,EAAY,GAQhB,OAPAF,EAAOG,IAAK,SAACC,EAAMrC,GACfmC,EAAUpB,KAAK,CACXe,GAAI9B,EACJ+B,MAAOM,EACPL,SAAUE,IAAcG,EAAO,EAAI,MAGpCF,4CAIe1E,GACtB,OAAO,IAAI8D,MAAK,IAAIA,MAAOC,UAAS,IAAID,MAAOE,WAAahE,4CAIxCA,GACpB,OAAO,IAAI8D,MAAK,IAAIA,MAAOe,aAAY,IAAIf,MAAOI,cAAgBlE,aCxOpE8E,EAAe,CACjBvB,GAAM,CACFwB,gBAAiB,sBACjBC,YAAa,SACbC,eAAgB,4LAChBC,oBAAqB,kBACrBC,QAAS,UACTC,SAAU,WACVC,UAAW,iBACXC,mBAAoB,uBACpBC,kBAAmB,sBACnBC,mBAAoB,0BACpBC,cAAe,iBACfC,aAAc,gBACdC,cAAe,aACfC,iBAAkB,2LAClBC,SAAU,WACVC,gBAAiB,UACjBC,aAAc,WACdC,gBAAiB,mBACjBC,iBAAkB,qBAClBC,cAAe,gBACfC,QAAS,UACTC,SAAU,OACVC,eAAgB,QAChBC,sBAAuB,QACvBC,aAAc,aACdC,kBAAmB,OACnBC,gBAAiB,gBACjBC,iBAAkB,gBAClBC,kBAAmB,iBACnBC,YAAa,UACbC,aAAc,WACdC,aAAc,YACdC,kBAAmB,YACnBC,WAAY,aACZC,YAAa,qBACbC,aAAc,YACdC,OAAQ,KACRC,gBAAiB,eACjBC,gBAAiB,6MACjBC,oBAAqB,eACrBC,oBAAqB,sFACrBC,aAAc,gGACdC,aAAc,8BACdC,cAAe,aACfC,kBAAmB,kHACnBC,gBAAiB,4CACjBC,qBAAsB,sCACtBC,WAAY,4CACZC,YAAa,8CACbC,UAAW,8EACXC,oBAAqB,wBACrBC,qBAAsB,wBACtBC,sBAAuB,sCACvBC,sBAAuB,yBACvBC,WAAY,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAC3HC,YAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3FC,wBAAyB,6BACzBC,wBAAyB,6BACzBC,kBAAmB,sBACnBC,qBAAsB,yBACtBC,kBAAmB,qBACnBC,kBAAmB,sBACnBC,mBAAoB,iLACpBC,kBAAmB,mFACnBC,kBAAmB,oDACnBC,kBAAmB,+DACnBC,mBAAoB,sDACpBC,mBAAoB,mCACpBC,mBAAoB,+BACpBC,iBAAkB,qBAClBC,eAAgB,wDAChBC,gBAAiB,sCACjBC,sBAAuB,8MACvBC,UAAW,yBACXC,0BAA2B,8BAC3BC,iBAAkB,sBAEtBlG,GAAM,CACFuB,gBAAiB,0BACjBC,YAAa,QACbC,eAAgB,iDAChBC,oBAAqB,sBACrBC,QAAS,UACTC,SAAU,aACVC,UAAW,gBACXC,mBAAoB,mCACpBC,kBAAmB,8BACnBC,mBAAoB,6BACpBC,cAAe,YACfC,aAAc,oBACdC,cAAe,aACfC,iBAAkB,mKAClBC,SAAU,QACVC,gBAAiB,OACjBC,aAAc,QACdC,gBAAiB,kBACjBC,iBAAkB,iBAClBC,cAAe,qBACfC,QAAS,UACTC,SAAU,SACVC,eAAgB,UAChBC,sBAAuB,UACvBC,aAAc,aACdC,kBAAmB,aACnBC,gBAAiB,oBACjBE,kBAAmB,mBACnBC,YAAa,UACbC,aAAc,QACdC,aAAc,YACdE,WAAY,wBACZC,YAAa,wBACbC,aAAc,UACdC,OAAQ,IACRC,gBAAiB,eACjBC,gBAAiB,sNACjBC,oBAAqB,mBACrBC,oBAAqB,6GACrBC,aAAc,8GACdC,aAAc,8BACdC,cAAe,oBACfC,kBAAmB,kKACnBC,gBAAiB,oDACjBC,qBAAsB,2CACtBC,WAAY,2DACZC,YAAa,kDACbC,UAAW,yEACXC,oBAAqB,kCACrBC,qBAAsB,0BACtBC,sBAAuB,2CACvBC,sBAAuB,uBACvBC,WAAY,CAAC,QAAS,UAAW,QAAS,QAAS,OAAQ,QAAS,QAAS,SAAU,aAAc,UAAW,YAAa,aAC7HC,YAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3FC,wBAAyB,+BACzBC,wBAAyB,mCACzBC,kBAAmB,mBACnBC,qBAAsB,mBACtBC,kBAAmB,8BACnBC,kBAAmB,uBACnBC,mBAAoB,sNACpBC,kBAAmB,kEACnBC,kBAAmB,8DACnBC,kBAAmB,4EACnBC,mBAAoB,8BACpBC,mBAAoB,iCACpBC,mBAAoB,kCACpBC,iBAAkB,8BAClBC,eAAgB,+DAChBC,gBAAiB,+FACjBC,sBAAuB,oOACvBC,UAAW,+BACXC,0BAA2B,4CAC3BC,iBAAkB,yBAEtBjG,GAAM,CACFsB,gBAAiB,sBACjBC,YAAa,SACbC,eAAgB,4LAChBC,oBAAqB,kBACrBC,QAAS,UACTC,SAAU,WACVC,UAAW,iBACXC,mBAAoB,uBACpBC,kBAAmB,sBACnBC,mBAAoB,0BACpBC,cAAe,iBACfC,aAAc,gBACdC,cAAe,aACfC,iBAAkB,oMAClBC,SAAU,WACVC,gBAAiB,UACjBC,aAAc,WACdC,gBAAiB,mBACjBC,iBAAkB,qBAClBC,cAAe,gBACfC,QAAS,UACTC,SAAU,OACVC,eAAgB,QAChBC,sBAAuB,QACvBC,aAAc,OACdC,kBAAmB,OACnBC,gBAAiB,gBACjBC,iBAAkB,gBAClBC,kBAAmB,iBACnBC,YAAa,UACbC,aAAc,WACdC,aAAc,YACdE,WAAY,aACZC,YAAa,sBACbC,aAAc,YACdC,OAAQ,KACRC,gBAAiB,eACjBC,gBAAiB,iOACjBC,oBAAqB,eACrBC,oBAAqB,sFACrBC,aAAc,6LACdC,aAAc,uDACdC,cAAe,aACfC,kBAAmB,kHACnBC,gBAAiB,4CACjBC,qBAAsB,sCACtBC,WAAY,4CACZC,YAAa,8CACbC,UAAW,8EACXC,oBAAqB,wBACrBC,qBAAsB,wBACtBC,sBAAuB,sCACvBC,sBAAuB,yBACvBC,WAAY,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAC3HC,YAAa,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC3FC,wBAAyB,6BACzBC,wBAAyB,6BACzBC,kBAAmB,sBACnBC,qBAAsB,yBACtBC,kBAAmB,qBACnBC,kBAAmB,sBACnBC,mBAAoB,iLACpBC,kBAAmB,mFACnBC,kBAAmB,oDACnBC,kBAAmB,+DACnBC,mBAAoB,8BACpBC,mBAAoB,oCACpBC,mBAAoB,kCACpBC,iBAAkB,qBAClBC,eAAgB,wDAChBC,gBAAiB,sCACjBC,sBAAuB,8PACvBC,UAAW,yBACXC,0BAA2B,8BAC3BC,iBAAkB,yBAEtBhG,GAAM,CACFqB,gBAAiB,+BACjBC,YAAa,qCACbC,eAAgB,uPAChBC,oBAAqB,sBACrBC,QAAS,QACTC,SAAU,gBACVE,mBAAoB,2BACpBC,kBAAmB,oCACnBC,mBAAoB,mCACpBC,cAAe,oBACfC,aAAc,0BACdL,UAAW,mBACXM,cAAe,gBACfC,iBAAkB,wJAClBC,SAAU,YACVC,gBAAiB,WACjBC,aAAc,YACdC,gBAAiB,iBACjBC,iBAAkB,eAClBC,cAAe,uBACfC,QAAS,UACTC,SAAU,KACVC,eAAgB,MAChBC,sBAAuB,MACvBC,aAAc,QACdC,kBAAmB,QACnBC,gBAAiB,6BACjBC,iBAAkB,cAClBC,kBAAmB,sBACnBC,YAAa,UACbC,aAAc,eACdC,aAAc,eACdE,WAAY,0BACZC,YAAa,2BACbC,aAAc,UACdC,OAAQ,KACRC,gBAAiB,UACjBC,gBAAiB,wEACjBC,oBAAqB,iBACrBC,oBAAqB,4FACrBC,aAAc,uGACdC,aAAc,yCACdC,cAAe,mBACfC,kBAAmB,wIACnBC,gBAAiB,8DACjBC,qBAAsB,wDACtBC,WAAY,yDACZC,YAAa,sDACbC,UAAW,0FACXC,oBAAqB,4BACrBC,qBAAsB,6BACtBC,sBAAuB,oDACvBC,sBAAuB,wCACvBC,WAAY,CAAC,UAAW,aAAW,OAAQ,QAAS,MAAO,OAAQ,UAAW,UAAQ,YAAa,UAAW,WAAY,eAC1HC,YAAa,CAAC,MAAO,SAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,SAAO,MAAO,MAAO,MAAO,UAC5FC,wBAAyB,yCACzBC,wBAAyB,wCACzBC,kBAAmB,wCACnBC,qBAAsB,oCACtBC,kBAAmB,2CACnBC,kBAAmB,2CACnBC,mBAAoB,6OACpBC,kBAAmB,sFACnBC,kBAAmB,oFACnBC,kBAAmB,4FACnBC,mBAAoB,sCACpBC,mBAAoB,qDACpBC,mBAAoB,iDACpBC,iBAAkB,2CAClBC,eAAgB,uFAChBC,gBAAiB,yDACjBC,sBAAuB,iQACvBC,UAAW,sBACXC,0BAA2B,6CAC3BC,iBAAkB,+CCpRXC,cA3BX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA7J,KAAA0J,IACfE,EAAAC,OAAAE,EAAA,EAAAF,CAAA7J,KAAA6J,OAAAG,EAAA,EAAAH,CAAAH,GAAAO,KAAAjK,KAAM2J,KACDO,MAAQ,CAAEC,OAAO,GAFPP,kFAMf5J,KAAKoK,SAAS,CAAED,OAAQnK,KAAKkK,MAAMC,gDAInCnK,KAAKoK,SAAS,CAAED,OAAQnK,KAAKkK,MAAMC,yCAInC,OACIE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACXH,EAAAC,EAAAC,cAAA,OACIC,UAAU,eACVC,QAASzK,KAAK0K,cAAcC,KAAK3K,MACjC4K,YAAa5K,KAAK6K,iBAAiBF,KAAK3K,MACxC8K,WAAY9K,KAAK6K,iBAAiBF,KAAK3K,OAJ3C,KAMAqK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBrL,MAAO,CAAC4L,WAAY/K,KAAKkK,MAAMC,MAAQ,UAAY,WAAanK,KAAK2J,MAAMqB,iBAxBpGC,qBCwFPC,UArFI,SAAAC,GAAwI,IAAtI/G,EAAsI+G,EAAtI/G,GAAIgH,EAAkID,EAAlIC,MAAOC,EAA2HF,EAA3HE,KAAMrK,EAAqHmK,EAArHnK,MAAOsK,EAA8GH,EAA9GG,YAAaC,EAAiGJ,EAAjGI,KAAiBC,GAAgFL,EAA3FM,UAA2FN,EAAhFK,cAAcE,EAAkEP,EAAlEO,eAAgBC,EAAkDR,EAAlDQ,SAAUC,EAAwCT,EAAxCS,WAAYC,EAA4BV,EAA5BU,SAAUC,EAAkBX,EAAlBW,aAEjIC,EACA1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAS,oBAAAwB,OAAsBJ,EAAa,iBAAmB,KAAQL,IAGjFlB,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CACI7H,GAAIA,EACJiH,KAAMA,EACNrK,MAAOA,EACPwJ,UAAS,gBAAAwB,OAAkBJ,EAAa,aAAe,IACvDN,YAAaA,EACbY,mBAAmB,EACnBC,eAAe,EACfC,cAAgB,SAACC,GAAW,IAIjBrL,EAASqL,EAATrL,MAEP6K,EAAS,CAACR,KAAMA,EAAMrK,MAAOA,QAMzB,UAAjBwK,IACCO,EACI1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CACI7H,GAAIA,EACJiH,KAAMA,EACNrK,MAAOA,EACPwJ,UAAS,gBAAAwB,OAAkBJ,EAAa,aAAe,IACvDN,YAAaA,EACbY,mBAAmB,EACnBC,eAAe,EACfC,cAAgB,SAACC,GAAW,IACjBrL,EAASqL,EAATrL,MACP6K,EAAS,CAACR,KAAMA,EAAMrK,MAAOA,OAGrCqJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAS,oBAAAwB,OAAsBJ,EAAa,iBAAmB,KAAQL,MAM7F,IAAIe,EACAjC,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,CACI7H,GAAIA,EACJiH,KAAMA,EACNrK,MAAOA,EACPwJ,UAAS,gBAAAwB,OAAkBJ,EAAa,aAAe,IACvDN,YAAaA,EACbY,mBAAmB,EACnBC,eAAe,EACfC,cAAgB,SAACC,GAAW,IACjBrL,EAASqL,EAATrL,MACP6K,EAAS,CAACR,KAAMA,EAAMrK,MAAOA,OAKzC,OACIqJ,EAAAC,EAAAC,cAACF,EAAAC,EAAMiC,SAAP,KACMnB,GACGf,EAAAC,EAAAC,cAAA,SAAOiC,QAASpI,EAAIoG,UAAU,qBAC3BH,EAAAC,EAAAC,cAACkC,EAAD,CAASzB,QAASU,IADrB,IACyCN,GAK9Cf,EAAAC,EAAAC,cAAA,OAAKC,UAAWsB,GAA8B,UACxCP,EAAOQ,EAAaO,EACtBjC,EAAAC,EAAAC,cAAA,SAAOC,UAAS,kBAAAwB,OAAoBJ,EAAa,OAAS,SAAYD,OCvEvEe,EAVK,SAAAvB,GAAe,IAAbwB,EAAaxB,EAAbwB,QACpB,OACMtC,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACMoC,EAAQjI,IAAI,SAAAkI,GAAM,OAAIvC,EAAAC,EAAAC,cAAA,MAAIsC,IAAKD,GAASA,QCwB3CE,EA3BG,SAAA3B,GAAY,IAAV4B,EAAU5B,EAAV4B,KAOhB,OACE1C,EAAAC,EAAAC,cAAA,aACGwC,EAAKrI,IAAI,SAACsI,EAAK1K,GACR,OACI+H,EAAAC,EAAAC,cAAA,MAAIsC,IAAKvK,EAAM,OAAQkI,UAAWwC,EAAIC,UACpCpD,OAAOqD,KAAKF,GAAKtI,IAAI,SAACyI,EAAe7M,GAAhB,MAA0C,aAAlB6M,GAC3C9C,EAAAC,EAAAC,cAAA,MAAIsC,IAAKvK,EAAM,IAAIhC,EAAE,QACnB0M,EAAIG,GACJ7M,EAAI,GAAqD,IAAhDQ,EAAKsM,mBAAmBJ,EAAIG,KAAyB,YCLzEE,EATD,SAAAlC,GAAuB,IAApBwB,EAAoBxB,EAApBwB,QAASI,EAAW5B,EAAX4B,KACxB,OACE1C,EAAAC,EAAAC,cAAA,SAAOC,UAAU,oCACfH,EAAAC,EAAAC,cAAC+C,EAAD,CAAaX,QAASA,IACtBtC,EAAAC,EAAAC,cAACgD,EAAD,CAAWR,KAAMA,cCmERS,sBAvEb,SAAAA,EAAY7D,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA7J,KAAAwN,IACjB5D,EAAAC,OAAAE,EAAA,EAAAF,CAAA7J,KAAA6J,OAAAG,EAAA,EAAAH,CAAA2D,GAAAvD,KAAAjK,KAAM2J,KACDO,MAAQ,CACXuD,UAAU,GAEZ7D,EAAK8D,MAAQ9D,EAAK8D,MAAM/C,KAAXd,OAAA8D,EAAA,EAAA9D,QAAA8D,EAAA,EAAA9D,CAAAD,KALIA,oFAQE,IAAAgE,EAAA5N,KACnB6N,WAAW,WACTD,EAAK1D,MAAMuD,SACPK,OAAOC,iBAAiB,QAASH,EAAKF,OACtCI,OAAOE,oBAAoB,QAASJ,EAAKF,QAC5C,kDAIHI,OAAOE,oBAAoB,QAAShO,KAAK0N,qCAGrCO,GACJjO,KAAKoK,SAAS,CAAEqD,UAAU,uCAGjBrJ,GACTpE,KAAKoK,SAAU,CAACqD,UAAU,GAAQzN,KAAK2J,MAAMuE,eAAe9J,EAAIpE,KAAK2J,MAAM0B,4CAI3ErL,KAAKoK,SAAS,SAAA+D,GAAS,MAAK,CAC1BV,UAAWU,EAAUV,6CAIhB,IAAAW,EAAApO,KACCyN,EAAazN,KAAKkK,MAAlBuD,SACFY,EAAcrO,KAAK2J,MAAM2E,KAAKC,OAAO,SAAA5J,GAAI,OAAIA,EAAKL,WAAU,GAAGD,MAGrE,OACEgG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYC,QAAS,kBAAM2D,EAAKI,eAC7CnE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,YAAO8D,IAERZ,EACCpD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAEbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAGhBiD,GACCpD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAUC,QAAS,SAAAgE,GAAC,OAAIA,EAAEC,oBACrC1O,KAAK2J,MAAM2E,KAAK5J,IAAI,SAAAC,GAAI,OACvB0F,EAAAC,EAAAC,cAAA,MACEC,UACE7F,EAAKL,SAAW,wBAA0B,eAE5CuI,IAAKlI,EAAKP,GACVqG,QAAS,kBAAM2D,EAAKO,WAAWhK,EAAKP,MAEpCiG,EAAAC,EAAAC,cAAA,YAAO5F,EAAKN,mBA9DL4G,qBCevB2D,yBAAe,KAAMrL,KACrBqL,yBAAe,KAAMC,SAm7BNC,cAh7BX,SAAAA,EAAYnF,GAAM,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAA7J,KAAA8O,IACdlF,EAAAC,OAAAE,EAAA,EAAAF,CAAA7J,KAAA6J,OAAAG,EAAA,EAAAH,CAAAiF,GAAA7E,KAAAjK,KAAM2J,KAqGVoF,aAAe,SAACC,GACZ,IAAIC,GAAc,EACM,uBAApBD,EAAW3D,MAAqD,wBAApB2D,EAAW3D,MAAsD,sBAApB2D,EAAW3D,OAA4D,IAA3BzB,EAAKM,MAAM+E,cAChJA,GAAc,GAGlBrF,EAAKQ,SAALP,OAAAqF,EAAA,EAAArF,CAAA,CAAeoF,eAAcD,EAAW3D,KAAO2D,EAAWhO,SA5G5C4I,EA+GlBuF,wBAA0B,SAACxF,GACvBC,EAAKQ,SAAS,CAACgF,YAAazF,EAAM0F,OAAOhE,QAhH3BzB,EAmHlBsE,eAAiB,SAAC9J,EAAIiH,GAAS,IAAAiE,EAEvBC,EAAUC,KAAKC,MAAMD,KAAKE,UAAU9F,EAAKM,MAAMmB,KACnDkE,EAAQI,QAAQ,SAAAhL,GAAI,OAAKA,EAAKL,UAAW,IACzCiL,EAAQnL,GAAIE,UAAW,EAEvB,IAAMsL,EAAW,IAAI/L,KACfgM,EAAWD,EAAS3L,cACpB6L,EAAeF,EAAS7L,WACxBgM,EAAmBnG,EAAKM,MAAM8F,gBAAgBC,UAAU,SAAAC,GAAG,OAAIA,EAAI5L,WACrE6L,GAAoB,EACZ,mBAAT9E,GAA6BkE,EAAQnL,GAAIC,QAAUwL,GAAYE,EAAmBD,EACjFK,GAAoB,EAEP,oBAAT9E,GAA8BzB,EAAKM,MAAMkG,eAAe7B,OAAO,SAAApL,GAAC,OAAIA,EAAEmB,WAAU,GAAGD,QAAUwL,GAAYjG,EAAKM,MAAM8F,gBAAgBC,UAAU,SAAAC,GAAG,OAAIA,EAAI7L,QAAUkL,EAAQnL,GAAIC,QAASyL,IACxLK,GAAoB,GAI5BvG,EAAKQ,UAALkF,EAAA,GAAAzF,OAAAqF,EAAA,EAAArF,CAAAyF,EAAiBjE,EAAOkE,GAAxB1F,OAAAqF,EAAA,EAAArF,CAAAyF,EAAA,gBAAgDa,GAAhDb,KAtIc1F,EAyIlByG,kBAAoB,SAAC1G,GAAU,IACpB0B,EAAe1B,EAAf0B,KAAMrK,EAAS2I,EAAT3I,MAETsP,EAAkBtP,EAEtB,GAAIqK,IAASzB,EAAKM,MAAMqG,UAEpB,OADA3G,EAAKQ,SAAS,CAACmG,UAAW,MACnB,EAGX,GAAa,gBAATlF,EAAwB,KAAAmF,EACxBF,EAAkBnQ,KAAKsQ,IAAI7G,EAAKM,MAAM5I,OAAQnB,KAAKuQ,IAAI,EAAG1P,IAC1D,IAAM2P,GAAoB3P,EAAQ4I,EAAKM,MAAM5I,OAAU,IACvDsI,EAAKQ,UAALoG,EAAA,CAAgBG,gBAAiBxP,WAAWwP,GAAiBnQ,QAAQ,IAArEqJ,OAAAqF,EAAA,EAAArF,CAAA2G,EAA0EnF,EAAOlK,WAAWmP,GAAiB9P,QAAQ,IAArHqJ,OAAAqF,EAAA,EAAArF,CAAA2G,EAAA,YAAoI,mBAApIA,SAEC,GAAa,oBAATnF,EAA4B,KAAAuF,EAC3BC,GAAgB7P,EAAQ,IAAO4I,EAAKM,MAAM5I,OAChDgP,EAAkBnQ,KAAKsQ,IAAI,IAAKtQ,KAAKuQ,IAAI,EAAG1P,IAC5C4I,EAAKQ,UAALwG,EAAA,CAAgBC,YAAa1P,WAAW0P,GAAarQ,QAAQ,IAA7DqJ,OAAAqF,EAAA,EAAArF,CAAA+G,EAAkEvF,EAAOlK,WAAWmP,GAAiB9P,QAAQ,IAA7GqJ,OAAAqF,EAAA,EAAArF,CAAA+G,EAAA,YAA4H,eAA5HA,MA3JUhH,EA+JlBkH,iBAAmB,SAACnH,GACMA,EAAf0B,KADmB,IACbrK,EAAS2I,EAAT3I,MACT+P,EAAU5Q,KAAKgC,MAAMnB,GACzB4I,EAAKQ,SAAU,CAAC4G,KAAM7Q,KAAKuQ,IAAI,EAAGvQ,KAAKsQ,IAAI,GAAIM,OAlKjCnH,EAqKlBqH,iBAAmB,SAACtH,GAAU,IACnB0B,EAAe1B,EAAf0B,KAAMrK,EAAS2I,EAAT3I,MAET+P,EAAU5Q,KAAKgC,MAAMnB,GACrBkQ,EAAa,EACjB,GAAY,UAAT7F,EACC6F,EAAapQ,EAAKqQ,qBAAqBJ,GAAS,GAChDnH,EAAKQ,SAAU,CAAClG,MAAO6M,EAASxM,OAAQ2M,EAAYjC,aAAa,QAEjE,CAEA,IAAImC,GADJF,EAAapQ,EAAKqQ,qBAAqBJ,IACf5Q,KAAKgC,MAAM+O,GAC/BG,EAAaH,EAAWhQ,WAChB,IAATkQ,IACCC,EAAaA,EAAWC,MAAM,KAAK,IAEvC1H,EAAKQ,SAAU,CAAC7F,OAAQwM,EAAS7M,MAAOmN,EAAYpC,aAAa,MArLvDrF,EAyLlB2H,iBAAmB,SAAC9C,GAAM,IAAA+C,EACA/C,EAAEY,OAAjBhE,EADemG,EACfnG,KAAMrK,EADSwQ,EACTxQ,MACT+P,EAAU5Q,KAAKgC,MAAMnB,GACzB4I,EAAKQ,SAALP,OAAAqF,EAAA,EAAArF,CAAA,GAAiBwB,EAAO0F,KA5LVnH,EAwMlB6H,sBAAwB,SAAC9H,GAAS,IAAA+H,EAeT9H,EAAKM,MAZtB5I,EAH0BoQ,EAG1BpQ,OACAuP,EAJ0Ba,EAI1Bb,YACAzB,EAL0BsC,EAK1BtC,YACA7K,EAN0BmN,EAM1BnN,OACAoN,EAP0BD,EAO1BC,UACAX,EAR0BU,EAQ1BV,KACAY,EAT0BF,EAS1BE,mBACAC,EAV0BH,EAU1BG,oBACAC,EAX0BJ,EAW1BI,kBACAC,EAZ0BL,EAY1BK,kBACA/B,EAb0B0B,EAa1B1B,gBACAI,EAd0BsB,EAc1BtB,eACAvL,EAf0B6M,EAe1B7M,aAEAmN,EAAqBD,EAAkB9B,UAAU,SAAAC,GAAG,OAAIA,EAAI5L,WAC5DyL,EAAmBC,EAAgBC,UAAU,SAAAC,GAAG,OAAIA,EAAI5L,WACxD2N,EAAkBxS,OAAO2Q,EAAe7B,OAAO,SAAA2B,GAAG,OAAIA,EAAI5L,WAAU,GAAGD,OAEvE6N,EAAmC,cAAhB9C,EAA+BxF,EAAKuI,kBAAoBvI,EAAKwI,iBAChFC,EAAgCH,EAEhCI,EAAiB,EACjBC,EAAgB,eAChBC,EAAcD,EAEfX,IACCM,GAAmBzS,OAAOmS,GAC1BW,EAAgB,cAGpB,IAAIE,EAAUhT,OAAOyS,GACjBQ,EAAeD,EAEfE,EAAmBpO,EACnBqO,EAAY,GACZC,EAAY,GACZC,EAAa,GACbC,EAAY,GACZC,EAAgB,GAChBC,EAAiB,EACjBC,EAAoB,GAEpBC,EAAa,CACbV,QAAS,EACTjN,cAAe,EACfC,aAAc,EACd2N,cAAe,EACflO,QAAS,EACTmO,cAAe,GAGfC,EAAa,CACbb,QAAS,EACTjN,cAAe,EACfC,aAAc,EACd2N,cAAe,EACflO,QAAS,EACTmO,cAAe,GAGnB/R,GAAgBuP,EAEhB,IAAIjB,EAAW,IAAI/L,KAAK8N,GAClB9B,EAAWD,EAAS3L,cACpB6L,EAAeF,EAAS7L,WAC1BwP,EAAc,IAAI1P,KAAK8N,GAG3B,GAFA4B,EAAY3O,YAAYgL,EAAS3L,cAAgB+M,GAE7B,YAAhB5B,EACA,IAAI,IAAIoE,EAAM,EAAGA,GAAOb,IACpBH,EAAcD,EAEdM,EAAY,IAAIhP,KAAK8N,GAErBmB,GADAF,EAAY,IAAI/O,KAAMgP,EAAU/O,SAAS+O,EAAU9O,WAAayP,KACzCzP,WACvBgP,EAAYH,EAAU3O,cAElB4N,GAAuBG,IAAuBc,GAC9CL,GAAWhT,OAAOoS,GAGdW,EADAV,GAA2C,MAAtBA,GAA6B/B,IAAqB+C,GAAcb,IAAoBc,EAC3F,cAGA,aAIdjB,GAAqB/B,IAAqB+C,GAAcb,IAAoBc,GAC5EN,GAAWhT,OAAOqS,GAClBU,EAAc,eAGdC,EAAUC,EAQdpR,GAFJ2R,EAAiBR,GAFjBO,EAAgB1R,EAAOsI,EAAK6J,UAMxBhB,EADAQ,EAAiB3R,EAEjBA,EAAS,GAGTA,GAAWmR,EAAQO,EAGvBG,EAAWV,SAAWA,EACtBU,EAAW3N,eAAiByN,EAC5BE,EAAW1N,cAAgBuN,EAC3BG,EAAWE,eAAiBlT,KAAKuQ,IAAI,EAAEwB,EAAgBG,GAGnDkB,EAAYG,UAAYd,EAAUc,WAAa,IAC/CJ,EAAWb,QAAU,IAAM3R,EAAK6S,YAAa7S,EAAK6B,QAAQwQ,EAAWV,QAAS,IAC9Ea,EAAW9N,cAAgB,IAAM1E,EAAK6S,YAAa7S,EAAK6B,QAAQwQ,EAAW3N,cAAe,IAC1F8N,EAAW7N,aAAe,IAAM3E,EAAK6S,YAAa7S,EAAK6B,QAAQwQ,EAAW1N,aAAc,IACxF6N,EAAWD,cAAgBF,EAAWE,eAG1Cf,GAAkBU,EAElBE,EAAkB7P,KAAK,CACnBuQ,WAAY/O,EAAawD,YAAYyK,GAAY,MAAMC,EACvDN,QAAS,IAAM3R,EAAK6S,YAAa7S,EAAK6B,QAAQ8P,EAAS,IACvDjN,cAAe,IAAM1E,EAAK6S,YAAa7S,EAAK6B,QAAQsQ,EAAgB,IACpExN,aAAc,IAAM3E,EAAK6S,YAAa7S,EAAK6B,QAAQqQ,EAAe,IAClEI,cAAe,IAAMtS,EAAK6S,YAAa7S,EAAK6B,QAAQ2P,EAAgB,IACpEpN,QAAS,IAAMpE,EAAK6S,YAAa7S,EAAK6B,QAAQrB,EAAQ,IACtD2L,SAAUuF,KAIK,KAAfM,GAAqBxR,GAAU,MAC/B4R,EAAkB7P,KAAK,CACnBuQ,WAAYhK,EAAKiK,0BAA0B,CACvCC,KAAQf,GACTlO,EAAa0E,WAChBkJ,QAAS,IAAM3R,EAAK6S,YAAa7S,EAAK6B,QAAQwQ,EAAWV,QAAS,IAClEjN,cAAe,IAAM1E,EAAK6S,YAAa7S,EAAK6B,QAAQwQ,EAAW3N,cAAe,IAC9EC,aAAc,IAAM3E,EAAK6S,YAAa7S,EAAK6B,QAAQwQ,EAAW1N,aAAc,IAC5E2N,cAAe,IAAMtS,EAAK6S,YAAa7S,EAAK6B,QAAQ2P,EAAgB,IACpEpN,QAAS,IAAMpE,EAAK6S,YAAa7S,EAAK6B,QAAQrB,EAAQ,IACtD2L,SAAU,iBAIf3L,GAAU,IAjFyBkS,UAsFzC,GAAoB,cAAhBpE,EAA6B,CAElCQ,EAASmE,SAAS,EAAE,EAAE,EAAE,GAExB,IAAIC,EAAapK,EAAKM,MAAM5I,OAASsI,EAAKM,MAAM2G,YAChDwB,EAAgCzI,EAAKuI,kBACrCG,EAAiB,EAEjBa,EAAWV,QAAU,EACrBU,EAAW3N,cAAgB,EAC3B2N,EAAW1N,aAAe,EAC1B0N,EAAWE,cAAgB,EAE3BC,EAAWb,QAAU,EACrBa,EAAW9N,cAAgB,EAC3B8N,EAAW7N,aAAe,EAC1B6N,EAAWD,cAAgB,EAK3B,IAHA,IAAIY,GAAmB,EACnBC,GAAmB,EAEhBF,GAAc,IAAK,CAGtBpE,EAASuE,QAAQvE,EAAS8D,UAAa,SACvCjB,EAAU7I,EAAKuI,kBAEfG,GADAU,EAAgBgB,EAAapK,EAAKwK,eAElCnB,EAAiBR,EAAQO,EAEzBR,EAAcD,EAEd,IAAI8B,EAAOzE,EAAS0E,UACpBxB,EAAalD,EAAS7L,WACtBgP,EAAYnD,EAAS3L,cACrB2O,EAAYhD,EAERiC,GAAuBG,IAAuBc,GAC9CL,GAAWhT,OAAOoS,GAEdC,GAA2C,MAAtBA,GAA6B/B,IAAqB+C,GAAcb,IAAoBc,EACzGP,EAAc,cAERyB,IACNzB,EAAc,YACdyB,GAAmB,IAInBnC,GAAqB/B,IAAqB+C,GAAcb,IAAoBc,IAAcmB,GAC1FzB,GAAWhT,OAAOqS,GAClBU,EAAc,cACd0B,GAAmB,GAGnBzB,EAAUC,EAIdsB,EAAaf,GAEbR,EADAQ,EAAiBe,EAEjBA,EAAa,GAGbA,GAAevB,EAAQO,EAG3BG,EAAWV,SAAWA,EACtBU,EAAW3N,eAAiByN,EAC5BE,EAAW1N,cAAgBuN,EAC3BG,EAAWE,eAAiBlT,KAAKuQ,IAAI,EAAE+B,EAAQJ,GAE3CkB,EAAYG,UAAYd,EAAUc,WAAa,IAC/CJ,EAAWb,QAAU,IAAM3R,EAAK6S,YAAa7S,EAAK6B,QAAQwQ,EAAWV,QAAS,IAC9Ea,EAAW9N,cAAgB,IAAM1E,EAAK6S,YAAa7S,EAAK6B,QAAQwQ,EAAW3N,cAAe,IAC1F8N,EAAW7N,aAAe,IAAM3E,EAAK6S,YAAa7S,EAAK6B,QAAQwQ,EAAW1N,aAAc,IACxF6N,EAAWD,cAAgBF,EAAWE,eAI1CH,EAAkB7P,KAAK,CACnBuQ,WAAU,GAAA5H,OAAKqI,EAAO,GAAP,IAAArI,OAAgBqI,GAASA,EAA9B,KAAArI,OAAsCnH,EAAawD,YAAYyK,GAA/D,OAAA9G,OAAgF+G,GAC1FN,QAAS,IAAM3R,EAAK6S,YAAa7S,EAAK6B,QAAQ8P,EAAS,IACvDjN,cAAe,IAAM1E,EAAK6S,YAAa7S,EAAK6B,QAAQsQ,EAAgB,IACpExN,aAAc,IAAM3E,EAAK6S,YAAa7S,EAAK6B,QAAQqQ,EAAe,IAClEI,cAAe,IAAMtS,EAAK6S,YAAa7S,EAAK6B,QAAQ2P,EAAgB,IACpEpN,QAAS,IAAMpE,EAAK6S,YAAa7S,EAAK6B,QAAQqR,EAAY,IAC1D/G,SAAUuF,KAIM,KAAfM,GAAsB,GAAGuB,EAAO,IAAQL,GAAc,OACvDd,EAAkB7P,KAAK,CACnBuQ,WAAYhK,EAAKiK,0BAA0B,CACvCC,KAAQf,GACTlO,EAAa0E,WAChBkJ,QAAS,IAAM3R,EAAK6S,YAAa7S,EAAK6B,QAAQwQ,EAAWV,QAAS,IAClEjN,cAAe,IAAM1E,EAAK6S,YAAa7S,EAAK6B,QAAQwQ,EAAW3N,cAAe,IAC9EC,aAAc,IAAM3E,EAAK6S,YAAa7S,EAAK6B,QAAQwQ,EAAW1N,aAAc,IAC5E2N,cAAe,IAAMtS,EAAK6S,YAAa7S,EAAK6B,QAAQ2P,EAAgB,IACpEpN,QAAS,IAAMpE,EAAK6S,YAAa7S,EAAK6B,QAAQqR,EAAY,IAC1D/G,SAAU,eAGdgH,GAAmB,IAM/B,IAAI9D,GAAoB,EACpBC,EAAe7B,OAAO,SAAApL,GAAC,OAAIA,EAAEmB,WAAU,GAAGD,QAAUwL,GAAYE,EAAmBD,IACnFK,GAAoB,GAGxBvG,EAAKQ,SAAS,CACVgI,eAAgBC,EAChBkC,aAAcrB,EACdsB,aAAc5B,EACd3D,aAAa,EACbwF,cAAetE,EACfuE,eAAgBvB,EAChBG,WAAYA,GACb,WACI1J,EAAKM,MAAMyK,kBACV/K,EAAKgL,SAAS,6BApeRhL,EAmflBiL,yBAA2B,WACvB,IAAIC,EAAuBlL,EAAKM,MAAMyK,iBACtCG,GAAwBA,EAExBlL,EAAKQ,SAAS,CAACuK,iBAAmBG,GAAuB,kBAAMlL,EAAKgL,SAAS,6BAvf/DhL,EA0flBmL,yBAA2B,WACvB,IAAIC,EAAkBxF,KAAKC,MAAMD,KAAKE,UAAU9F,EAAKM,MAAMqK,eAEvDU,EAAwBrL,EAAKM,MAAMxB,mBACvCuM,GAAyBA,GAErBrL,EAAKQ,SAAS,CAAC1B,kBAAoBuM,KAEnCD,EAAgBrF,QAAQ,SAAA3C,GAAG,OAAKA,EAAIC,SAAW,iBAE/CrD,EAAKQ,SAAS,CAAC1B,kBAAoBuM,EAAuBrD,mBAAoB,EAAGC,oBAAqB,EAAGC,kBAAmB,EAAGyC,aAAcS,GAAmB,WAC5JpL,EAAKgL,SAAS,qBACdhL,EAAK6H,4BAtgBC7H,EA2gBlBsL,iBAAmB,SAAAb,GACfzK,EAAKQ,SAAS,CAAEuH,UAAW0C,GAAQ,WAAQzK,EAAK6H,2BAzgBhD,IAAM0D,EAASxL,EAAMwL,OAASxL,EAAMwL,OAAS,KACvCtS,EAAM8G,EAAM9G,IAAM8G,EAAM9G,IAAM,KAC9BuS,EAAgBtU,EAAKuU,iBAAiB,IACtCC,EP4RC,SAAyBzS,GACpC,OAAOgC,EAAahC,GO7RE0S,CAAgB1S,GAC5B2S,EAAe1U,EAAK2U,WAAYH,EAAUlN,YAC1ClE,EAAmB,OAAXiR,EAAkB,GAAK,GARvB,OAUdvL,EAAKM,MAAQ,CACTrH,MACAsS,SACAtQ,aAAeyQ,EACf3D,UAAW,IAAI9N,KACfvC,OAAQ,IACR4C,QACAK,OAAc,GAANL,EACRiB,SAAU,EACVyM,mBAAoB,EACpBC,oBAAqB,EACrBC,kBAAmB,EACnBC,kBAAmByD,EACnBxF,gBAAiBwF,EACjBpF,eAAgBgF,EAChBpE,KAAM,EAENH,YAAa,EACbF,gBAAiB,EACjBvB,YAAa,YAEbgD,eAAgB,EAEhBsD,aAAe,CACXJ,EAAU5P,cACV4P,EAAUzP,gBACVyP,EAAU9P,cACV8P,EAAU7P,aACV6P,EAAU5O,kBACV4O,EAAUpQ,QAAQ,KAEtBqP,aAAe,GACfC,aAAe,IAAI3Q,KACnBoL,aAAe,EACf0F,kBAAkB,EAClBjM,mBAAmB,EACnB+L,eAAe,EAEflE,UAAW,GAEXmE,eAAgB,GAChBiB,UAAW,IAnDD/L,mEAwDd6J,EAAMmC,EAAMC,EAAIC,EAAIC,GAIpB,GAHKD,IAAIA,EAAK,GACTC,IAAMA,EAAO,GAEL,IAATtC,EAAY,QAASoC,EAAKC,GAAIF,EAElC,IAAMI,EAAO7V,KAAK4B,IAAI,EAAI0R,EAAMmC,GAC5BK,EAAMxC,GAAQuC,EAAO,KAAOH,EAAKG,EAAOF,GAM5C,OAJa,IAATC,IACAE,GAAQ,EAAIxC,GAGTwC,iCAIP,MAA0B,OAAtBjW,KAAKkK,MAAMiL,OACHhV,KAAK4B,IAAI5B,KAAK4B,IAAI,EAAG/B,KAAKkK,MAAM/E,SAAS,IAAI,EAAG,GAAI,EAAE,IAAK,EAGhEnF,KAAKkK,MAAM/E,SAAS,IAAI,0CAI/B,MAA0B,OAAtBnF,KAAKkK,MAAMiL,OACJhV,KAAK4B,IAAI5B,KAAK4B,IAAI,EAAG/B,KAAKkK,MAAM/E,SAAS,IAAI,EAAG,GAAI,EAAE,IAAK,EAG/DnF,KAAKkK,MAAM/E,SAAS,IAAI,4CAI/B,IAAM7D,EAAStB,KAAKkK,MAAM5I,OAAOtB,KAAKkK,MAAM2G,YAE5C,MAA0B,OAAtB7Q,KAAKkK,MAAMiL,OACH7T,EAAOtB,KAAKyT,QAAS,EAAEtT,KAAK4B,IAAI,EAAE/B,KAAKyT,OAA2B,IAAnBzT,KAAKkK,MAAMhG,QAG/DlE,KAAKiW,IAAIjW,KAAKyT,OAA0B,GAAnBzT,KAAKkK,MAAMhG,OAAY5C,6CAInD,OAAOtB,KAAKoS,iBAAmB,oDA4FTlF,EAAMgJ,GAE5B,IAAIC,EAAiBD,EAIrB,OAHArM,OAAOqD,KAAKA,GAAMyC,QAAQ,SAAC9C,GACvBsJ,EAAiBA,EAAevV,QAAf,KAAAoL,OAA4Ba,EAA5B,MAAqCK,EAAKL,MAExDsJ,0FAySE1H,GACTA,EAAE2H,iBACFpW,KAAKyR,yDA+BA4E,GACLC,WAAS1B,SAASyB,EAAU,CACxBE,SAAU,IACVC,MAAO,EACPC,QAAS,IACTC,OAAQ,oDAIP,IAAAC,EAE0Q3W,KAAKkK,MAA7Q5I,EAFFqV,EAEErV,OAAQqP,EAFVgG,EAEUhG,gBAAiBE,EAF3B8F,EAE2B9F,YAAazB,EAFxCuH,EAEwCvH,YAAajK,EAFrDwR,EAEqDxR,SAAUjB,EAF/DyS,EAE+DzS,MAAO8M,EAFtE2F,EAEsE3F,KAAMzM,EAF5EoS,EAE4EpS,OAAQM,EAFpF8R,EAEoF9R,aAAc+M,EAFlG+E,EAEkG/E,mBAAoBC,EAFtH8E,EAEsH9E,oBAAqBC,EAF3I6E,EAE2I7E,kBAAmBC,EAF9J4E,EAE8J5E,kBAAmB/B,EAFjL2G,EAEiL3G,gBAAiBI,EAFlMuG,EAEkMvG,eAAgBsE,EAFlNiC,EAEkNjC,eAAgBpB,EAFlOqD,EAEkOrD,WAAYqB,EAF9OgC,EAE8OhC,iBAAkBQ,EAFhQwB,EAEgQxB,OAFhQyB,EAGqB5W,KAAK2J,MAAxBtF,EAHFuS,EAGEvS,MAAOwS,EAHTD,EAGSC,SAEVC,EAAsBjS,EAAakB,gBAKvC,MAJoB,cAAhBqJ,IACA0H,EAAsBjS,EAAamB,kBAInCqE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCAEXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sDACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gDACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAenG,GAAgBQ,EAAaC,iBAE1DuF,EAAAC,EAAAC,cAAA,QAAMnG,GAAG,iBAAiB2S,SAAU/W,KAAKgX,aAAarM,KAAK3K,OAEvDqK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAC0M,EAAD,CACI7S,GAAG,aACHgH,MAAOvG,EAAakC,WACpBsE,KAAK,SACLrK,MAAOM,EACPiK,KAAK,IACLC,aAAa,OACbE,eAAgB7G,EAAaG,eAC7B4G,WAAanM,OAAO6B,GAAU,GAAK7B,OAAO6B,GAAU,KAAsB,KAAXA,EAAiB,EAAI,EACpFqK,SAAU9G,EAAa8C,gBACvBkE,SAAU7L,KAAK+O,gBAIvB1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAC0M,EAAD,CACI7S,GAAG,gBACHmH,KAAM1G,EAAauB,eACnBgF,MAAOvG,EAAamC,YACpBqE,KAAK,QACLS,aAAc,OACdJ,eAAgB7G,EAAa0C,aAC7BiD,UAAS,gBAAAwB,OAAoB9H,EAAQ,GAAKA,EAAQ,KAAiB,KAAVA,EAAgB,aAAe,IACxFlD,MAAOkD,GAAS,EAAIA,EAAQ,GAC5B2H,SAAU7L,KAAKiR,oBAIvB5G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAS,kBAAAwB,OAAsB9H,EAAQ,GAAKA,EAAQ,KAAiB,KAAVA,GAAgBK,EAAS,GAAKA,EAAS,MAAmB,KAAXA,EAAiB,OAAS,SAAYM,EAAakD,aAI5KsC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAC0M,EAAD,CACI7S,GAAG,eACHgH,MAAOvG,EAAaoB,cACpBoF,KAAK,WACLrK,MAAOmE,EACPoG,KAAK,IACLC,aAAa,OACbE,eAAgB7G,EAAac,iBAC7BiG,WAAanM,OAAO0F,IAAa,GAAK1F,OAAO0F,GAAY,KAAoB,KAAbA,EAAmB,EAAI,EACvFwG,SAAU9G,EAAa+C,qBACvBiE,SAAU7L,KAAK+O,gBAIvB1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAC0M,EAAD,CACI7S,GAAG,cACHgH,MAAOvG,EAAasC,gBACpBkE,KAAK,cACLrK,MAAO6P,EACP/E,aAAc,0BACdP,KAAK,IACLC,aAAa,OACbE,eAAgB7G,EAAauC,gBAC7BwE,YAAY,EACZD,UAAU,EACVE,SAAU7L,KAAKqQ,qBAIvBhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAC0M,EAAD,CACI7S,GAAG,kBACHgH,OAAO,EACPC,KAAK,kBACLrK,MAAO2P,EACP7E,aAAc,+BACdP,KAAK,IACLC,aAAa,OACbE,gBAAgB,EAChBE,YAAY,EACZD,UAAU,EACVE,SAAU7L,KAAKqQ,sBAKf,OAAX8E,GACD9K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAC0M,EAAD,CACI7S,GAAG,sBACHmH,KAAM1G,EAAauB,eACnBgF,MAAOvG,EAAa0B,kBACpB8E,KAAK,OACLS,aAAc,OACdJ,eAAgB7G,EAAa2C,aAC7BgD,UAAS,gBAAAwB,OAAoBgF,EAAO,GAAKA,EAAO,IAAe,KAATA,EAAe,aAAe,IACpFhQ,MAAOgQ,GAAQ,EAAIA,EAAO,GAC1BnF,SAAU7L,KAAK8Q,oBAIvBzG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAS,kBAAAwB,OAAsBgF,EAAO,GAAKA,EAAO,IAAe,KAATA,EAAe,OAAS,SAAYnM,EAAakD,aAKxHsC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAS,qBAAAwB,OAAuC,cAAhBoD,EAA8B,aAAe,IAAM/D,KAAK,YAAYZ,QAASzK,KAAKmP,yBAA0BtK,EAAagC,cACjKwD,EAAAC,EAAAC,cAAA,UAAQC,UAAS,qBAAAwB,OAAuC,YAAhBoD,EAA4B,aAAe,IAAM/D,KAAK,UAAUZ,QAASzK,KAAKmP,yBAA0BtK,EAAa8B,eAIrK0D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,UACIwL,KAAK,SACLvL,UAAU,8BACV0M,SAAWzX,OAAO6B,GAAa,GAAK7B,OAAO6B,GAAY,KAAsB,KAAXA,GACvD7B,OAAOyE,GAAa,GAAKzE,OAAOyE,GAAY,KAAqB,KAAVA,GACvDzE,OAAO8E,GAAa,GAAK9E,OAAO8E,GAAY,MAAsB,KAAXA,GACvD9E,OAAO0F,IAAa,GAAK1F,OAAO0F,GAAY,KAAwB,KAAbA,GAEhE0R,MAQjB7W,KAAKkK,MAAM+E,aACR5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6DACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcpG,GAAG,qBAAqB0S,GACpDzM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,KACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoB1J,EAAK6S,YAAa7S,EAAK6B,QAAwB,cAAhByM,EAA8BpP,KAAKmS,kBAAoBnS,KAAKoS,iBAAkB,MAGpJ/H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEC,OAAX2K,GACG9K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,UAAK1F,EAAa2E,6BAK9Ba,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAS3F,EAAaQ,oBACrCgF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAqB,IAAM1J,EAAK6S,YAAa7S,EAAK6B,QAAQrB,EAAOuP,EAAa,MAGjGxG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAEdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAS3F,EAAaS,mBACrC+E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoB,IAAM1J,EAAK6S,YAAa7S,EAAK6B,QAAQ+R,EAAejP,aAAc,MAGzG4E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAEZxK,KAAKkK,MAAMwK,eAAerB,cAAgB,GACxChJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAS3F,EAAaU,oBACrC8E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoB,IAAM1J,EAAK6S,YAAa7S,EAAK6B,QAAQ+R,EAAerB,cAAe,OAKtG,OAAX8B,GACD9K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,UAAK1F,EAAa4E,oBAI1BY,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAS3F,EAAaO,WACrCiF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAqB8I,EAAWb,UAGnDpI,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAEdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAS3F,EAAaQ,oBACrCgF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAqB8I,EAAW9N,gBAGnD6E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAEdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAS3F,EAAaS,mBACrC+E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAqB8I,EAAW7N,eAGnD4E,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAEZ8I,EAAWD,cAAgB,GACzBhJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAS3F,EAAaU,oBACrC8E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAqB,IAAM1J,EAAK6S,YAAa7S,EAAK6B,QAAQ2Q,EAAWD,cAAe,OAM/GhJ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,wBAAwBC,QAASzK,KAAK6U,0BACnDF,EAAmB9P,EAAa0D,wBAA0B1D,EAAayD,wBACxE+B,EAAAC,EAAAC,cAAA,KAAGC,UAAWmK,EAAmB,WAAa,iBAKxD3U,KAAKkK,MAAM+E,aACT5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kDACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAuBC,QAASzK,KAAK+U,0BAC9C/U,KAAKkK,MAAMxB,kBACR2B,EAAAC,EAAAC,cAAA,YAAO1F,EAAa8D,kBAApB,IAAuC0B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cACpDH,EAAAC,EAAAC,cAAA,YAAO1F,EAAa6D,kBAApB,IAAuC2B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAI7DH,EAAAC,EAAAC,cAAA,OAAKC,UAAS,4CAAAwB,OAA+ChM,KAAKkK,MAAMxB,kBAAoB,UAAY,cACpG2B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAAsB3F,EAAa+D,sBAIxDyB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2DACXH,EAAAC,EAAAC,cAACkC,EAAD,CAASzB,QAAUnG,EAAagE,oBAChCwB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAC0M,EAAD,CACI7S,GAAG,qBACHiH,KAAK,qBACLrK,MAAO4Q,EACPrG,KAAK,IACLC,aAAa,OACbK,SAAU7L,KAAK+O,gBAGvB1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,SAAOiC,QAAQ,qBAAqBhC,UAAU,iCAAiC3F,EAAamE,sBAGpGqB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+DACXH,EAAAC,EAAAC,cAACkC,EAAD,CAASzB,QAAUnG,EAAaiE,oBAChCuB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAC0M,EAAD,CACI7S,GAAG,sBACHiH,KAAK,sBACLrK,MAAO6Q,EACPtG,KAAK,IACLC,aAAa,OACbK,SAAU7L,KAAK+O,gBAGvB1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,SAAOiC,QAAQ,sBAAsBhC,UAAU,iCAAiC3F,EAAaoE,qBAEjGoB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAC4M,EAAD,CACI9L,KAAK,oBACLiD,KAAMyD,EACN7D,eAAgBlO,KAAKkO,mBAIjC7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iEACXH,EAAAC,EAAAC,cAACkC,EAAD,CAASzB,QAAUnG,EAAakE,oBAChCsB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAC0M,EAAD,CACI7S,GAAG,oBACHiH,KAAK,oBACLrK,MAAO8Q,EACPvG,KAAK,IACLC,aAAa,OACbK,SAAU7L,KAAK+O,gBAGvB1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,SAAOiC,QAAQ,oBAAoBhC,UAAU,iCAAiC3F,EAAaqE,qBAE/FmB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAC4M,EAAD,CACI9L,KAAK,kBACLiD,KAAM0B,EACN9B,eAAgBlO,KAAKkO,kBAG7B7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAC4M,EAAD,CACI9L,KAAK,iBACLiD,KAAM8B,EACNlC,eAAgBlO,KAAKkO,mBAKjC7D,EAAAC,EAAAC,cAAA,OAAKC,UAAS,6BAAAwB,OAAgChM,KAAKkK,MAAMuK,cAAgB,OAAS,SAC9EpK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAAkB3F,EAAauE,kBAIxDiB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qDACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4CACXH,EAAAC,EAAAC,cAAA,UACIwL,KAAK,SACLvL,UAAU,+CACVC,QAASzK,KAAKyR,sBACdyF,SAAWzX,OAAO6B,GAAa,GAAK7B,OAAO6B,GAAY,KAAsB,KAAXA,GAClE7B,OAAOyE,GAAa,GAAKzE,OAAOyE,GAAY,KAAqB,KAAVA,GACvDzE,OAAO8E,GAAa,GAAK9E,OAAO8E,GAAY,MAAsB,KAAXA,GACvD9E,OAAO0F,IAAa,GAAK1F,OAAO0F,GAAY,KAAwB,KAAbA,GAEtDN,EAAasE,wBAU7CnJ,KAAKkK,MAAM+E,aAAejP,KAAKkK,MAAMyK,kBACtCtK,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBACdH,EAAAC,EAAAC,cAAA,OAAKnG,GAAG,0BACJiG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,SAAOiC,QAAQ,kBAAkBhC,UAAU,cACvCH,EAAAC,EAAAC,cAACkC,EAAD,CAASzB,QAAUnG,EAAa6C,oBADpC,IAC4D7C,EAAa4C,cADzE,MAIA4C,EAAAC,EAAAC,cAAC6M,EAAA9M,EAAD,CACIlG,GAAG,kBACHoG,UAAU,eACV6M,OAAQrX,KAAKkK,MAAMrH,IACnByU,QAAS,IAAIzT,KACb0T,QAASzW,EAAK0W,gBAAgB,IAC9BlT,SAAUtE,KAAKkK,MAAMyH,UACrB9F,SAAU7L,KAAKkV,iBACfuC,aAAW,EACXC,gBAAiB7S,EAAasD,wBAElCkC,EAAAC,EAAAC,cAAA,aAAOF,EAAAC,EAAAC,cAAA,SAAI1F,EAAawE,mBAG5BgB,EAAAC,EAAAC,cAAA,OAAKC,UAAWxK,KAAKkK,MAAMyH,UAAY,gCAAkC,QACrEtH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAe3F,EAAamD,qBAC1CqC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACT3F,EAAauD,WAAWpI,KAAKkK,MAAMsK,aAAazQ,YAAY,IAAI/D,KAAKkK,MAAMsK,aAAaF,UAAU,KAAKtU,KAAKkK,MAAMsK,aAAavQ,kBAMjJoG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCAAiCH,EAAAC,EAAAC,cAACkC,EAAD,CAASzB,QAAUnG,EAAayE,wBAC5Ee,EAAAC,EAAAC,cAAA,UAAM1F,EAAaoD,uBAEvBoC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACRxK,KAAKkK,MAAM0H,oBAAsB5R,KAAKkK,MAAM2H,qBAAuB7R,KAAKkK,MAAM4H,kBAAqBjN,EAAa2D,kBAAoB3D,EAAa4D,wBAKhK4B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qDACTxK,KAAKkK,MAAMyH,WAAatH,EAAAC,EAAAC,cAACoN,EAAD,CAAOhL,QAAS3M,KAAKkK,MAAMwL,aAAc3I,KAAM/M,KAAKkK,MAAMqK,gBAExFlK,EAAAC,EAAAC,cAAA,KAAGC,UAAWxK,KAAKkK,MAAMyH,UAAY,OAAS,QAAW9M,EAAaqD,iCAr6B5E+C,aCTE2M,QACW,cAA7B9J,OAAO+J,SAASC,UAEe,UAA7BhK,OAAO+J,SAASC,UAEhBhK,OAAO+J,SAASC,SAASC,MACvB,2DCZDC,MAAMtY,UAAUuQ,WACjBpG,OAAOqF,eAAe8I,MAAMtY,UAAW,YAAa,CAChDsB,MAAO,SAASiX,GAEZ,GAAY,MAARjY,KACA,MAAM,IAAIkY,UAAU,iCAGxB,IAAIC,EAAItO,OAAO7J,MAGXoY,EAAMD,EAAEzX,SAAW,EAGvB,GAAyB,oBAAduX,EACP,MAAM,IAAIC,UAAU,gCAUxB,IANA,IAAIG,EAAU7W,UAAU,GAGpB8W,EAAI,EAGDA,EAAIF,GAAK,CAKZ,IAAIG,EAASJ,EAAEG,GACf,GAAIL,EAAUhO,KAAKoO,EAASE,EAAQD,EAAGH,GACnC,OAAOG,EAGXA,IAIJ,OAAQ,GAEZE,cAAc,EACdC,UAAU,IAIlB,SAAU3K,GAYNA,EAAO4K,4BAA8B,CAAEC,KAXzB,SAAAxN,GAMV,IAAAyN,EAAAzN,EALAkL,gBAKA,IAAAuC,EALe,wBAKfA,EAAAC,EAAA1N,EAJAgK,cAIA,IAAA0D,EAJe,KAIfA,EAAAC,EAAA3N,EAHAtI,WAGA,IAAAiW,EAHe,KAGfA,EAAAC,EAAA5N,EAFA0L,gBAEA,IAAAkC,EAFe,YAEfA,EAAAC,EAAA7N,EADA9G,aACA,IAAA2U,EADe,sBACfA,EACIC,EAAc5O,EAAAC,EAAAC,cAAC2O,EAAD,CAAK/D,OAAQA,EAAQtS,IAAKA,EAAKgU,SAAUA,EAAUxS,MAAOA,IAC5E8U,IAASC,OAAQH,EAAYI,SAASC,eAAejD,MAT7D,CAaGvI,QDgEG,kBAAmByL,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.01868ab8.chunk.js","sourcesContent":["var moneyFormatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n});\n\nvar penniesFormatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    /* minimumFractionDigits: 2,\n    maximumFractionDigits: 2,*/\n});\n\nvar percentFormatter = new Intl.NumberFormat('en-US', {\n    style: 'percent',\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2,\n});\n\nNumber.prototype.formatMoneyN = function (c, d, t) { var n = this, c = isNaN(c = Math.abs(c)) ? 2 : c, d = d === undefined ? \".\" : d, t = t === undefined ? \",\" : t, s = n < 0 ? \"-\" : \"\", i = parseInt(n = Math.abs(+n || 0).toFixed(c)) + \"\", j = (j = i.length) > 3 ? j % 3 : 0; return s + (j ? i.substr(0, j) + t : \"\") + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : \"\") };\n\nexport default class Util {\n    static percentToValue(percent) {\n        var value = percent;\n        var strNumber = value.toString();\n\n        if (isNaN(value) || value < 0) {\n            return '';\n        }\n        if(value >= 101){\n            return parseFloat( strNumber.substring(0, strNumber.length - 1) );\n        }\n        if(value < 101){\n            return strNumber.substring(0, 4);\n        }\n        return value;\n    }\n\n    static moneyToValue(money) {\n        if (money === undefined) return '';\n        var value = parseInt(money.replace(/\\D/g, \"\"));\n        return !isNaN(value) ? value : '';\n    }\n\n    static moneyValue(amount, showPennies = false, withSymbol = true) {\n        if (amount === null || amount === '') return '';\n        var value = showPennies ? penniesFormatter.format(amount) : moneyFormatter.format(amount);\n        if (withSymbol === false) {\n            return value.substring(1);\n        }\n        return value;\n    }\n    static removeMoneyTrash(money){\n        return money.replace('$', '').replace(',', \"\");\n    }\n\n    static cleanNumberInput(value){\n        return /^-?\\d*[.,]?\\d*$/.test(value);\n    }\n\n    static valueIsInteger(value){\n        if(value === '-')\n            return true;\n        else\n            return /^\\d*$/.test(value) && !(/^0\\d+$/.test(value));\n    }\n\n    static formatMoney(value) {\n        return parseFloat(value.replace(/[^0-9.]/g, '')).formatMoneyN();\n    };\n\n    static roundTo(n, digits) {\n        var negative = false;\n        if (digits === undefined) {\n            digits = 0;\n        }\n            if( n < 0) {\n            negative = true;\n          n = n * -1;\n        }\n        var multiplicator = Math.pow(10, digits);\n        n = parseFloat((n * multiplicator).toFixed(11));\n        n = (Math.round(n) / multiplicator).toFixed(digits);\n        if( negative ) {\n            n = (n * -1).toFixed(2);\n        }\n        return n;\n    }\n\n    static percentValue(amount, withSymbol) {\n        if (amount === null || amount === '') return '';\n        var value = percentFormatter.format(amount);\n        if (withSymbol === false) {\n            return value.substring(0, value.length - 1);\n        }\n        return value;\n    }\n\n    static calculatePercent(total, subtotal){\n        let perc = '';\n        if(isNaN(total) || isNaN(subtotal)){\n            perc=' ';\n        }else{\n           perc = Math.floor( (subtotal/total) * 100 );\n        }\n\n        return perc;\n    }\n\n    static countDecimalPlaces(number) {\n        const str = \"\" + number;\n        const index = str.indexOf('.');\n        if (index >= 0) {\n            return str.length - index - 1;\n        } else {\n            return 0;\n        }\n    }\n\n    /*\n    * Converts months to years and years to months\n    * @param time_n (number): amount of time (number of months or years)\n    * @parram is_month (bool): use true to convert from months to years and false to get months from years\n    */\n    static calculateMonthsYears(time_n = 1, is_month = true) {\n        let time_result = Number(time_n) * 12;\n        if(is_month) {\n            time_result = this.roundTo( (Number(time_n) / 12), 1 );\n        }\n\n        return time_result;\n    }\n\n    static getDateFromNumberOfMonths(monthCount, lan) {\n        function getPlural(number, word) {\n            return number === 1 ? word.one : word.other;\n        }\n\n        const months = {\n            en:{\n                one: 'month',\n                other: 'months',\n            },\n            es:{\n                one: 'mes',\n                other: 'meses',\n            },\n            ca:{\n                one: 'month',\n                other: 'months',\n            },\n            fr:{\n                one: 'month',\n                other: 'months',\n            },\n        };\n        const years = {\n            en:{\n                one: 'year',\n                other: 'years',\n            },\n            es:{\n                one: 'año',\n                other: 'años',\n            },\n            ca:{\n                one: 'year',\n                other: 'years',\n            },\n            fr:{\n                one: 'year',\n                other: 'years',\n            },\n        };\n        const and = {\n            en: ' and ',\n            es: ' y ',\n        };\n\n        let m = monthCount % 12;\n        let y = Math.floor(monthCount / 12);\n        let result = [];\n\n        y && result.push(y + ' ' + getPlural(y, years[lan]));\n        m && result.push(m + ' ' + getPlural(m, months[lan]));\n\n        return result.join(and[lan]);\n    }\n\n    static getPossibleYears(num_years){\n        const current = new Date();\n        current.setMonth(current.getMonth() + 1);\n        const currentYear = current.getFullYear();\n        let years = [];\n        let cont = 0;\n        for(let y = currentYear; y<currentYear+num_years; y++){\n            years.push({\n                id: cont,\n                title: y,\n                selected: cont === 0 ? 1 : 0\n            });\n\n            cont++;\n        }\n        return years;\n    }\n\n    static getMonthds( months ){\n        const current = new Date();\n        const nextDate = new Date( current.setMonth(current.getMonth() + 1) );\n        const nextMonth = nextDate.getMonth();\n        const monthName = months[nextMonth];\n\n        let auxMonths = [];\n        months.map( (item, index) => {\n            auxMonths.push({\n                id: index,\n                title: item,\n                selected: monthName === item ? 1 : 0\n            });\n        });\n        return auxMonths;\n    }\n\n    /* Function to get the start limit date */\n    static getStartLimitDate (n) {\n        return new Date(new Date().setMonth(new Date().getMonth() + n));\n    }\n\n    /* Function to get the next n years forward date */\n    static getEndLimitDate (n) {\n        return new Date(new Date().setFullYear(new Date().getFullYear() + n));\n    }\n}","const translations = {\n    \"en\": {\n        calculatorTitle: 'Mortgage Calculator',\n        amountLabel: 'Amount',\n        amountHelpText: 'This is the total amount you wish to take out on the loan itself. This amount is not necessarily the price of the home you wish to purchase, as you may need to deduct your down payment.',\n        monthlyDepositLabel: 'Monthly Deposit',\n        balance: 'Balance',\n        interest: 'Interest',\n        totalPaid: 'Total Payments',\n        totalPrincipalPaid: 'Total Principal Paid',\n        totalInterestPaid: 'Total Interest Paid',\n        totalEarlyPayments: 'Total of early payments',\n        principalPaid: 'Principal paid',\n        interestPaid: 'Interest paid',\n        monthYearText: 'Month/Year',\n        interestHelpText: 'This is the annual interest rate on your mortgage as defined in your loan agreement. If you don’t yet have a mortgage, rates average between 3%-5% for homebuyers with good credit.',\n        payments: 'Payments',\n        paymentSingular: 'Payment',\n        paymentLower: 'payments',\n        monthlyPayments: 'Monthly Payments',\n        biWeeklyPayments: 'Bi-Weekly Payments',\n        interestLabel: 'Interest rate',\n        monthly: 'monthly',\n        yearText: 'year',\n        yearPluralText: 'years',\n        yearPluralTextCapital: 'Years',\n        termsSummary: 'Fixed Term',\n        termsSummaryLabel: 'Term',\n        TimeToRepayText: 'Time to repay',\n        totalBalanceText: 'Total balance',\n        totalInterestText: 'Total interest',\n        monthlyText: 'Monthly',\n        annuallyText: 'Annually',\n        biweeklyText: \"Bi-weekly\",\n        biweeklyLowerText: \"bi-weekly\",\n        loanAmount: 'Home price',\n        termInYears: 'Loan term in years',\n        termInMonths: 'or months',\n        orText: 'Or',\n        downPaymentText: 'Down Payment',\n        downPaymentHelp: 'This is the amount of money you have to put down on the home. You may enter a specific dollar amount or choose a percentage. You need 20% down to qualify for a traditional mortgage or 3.5% down for FHA.',\n        downPaymentRateText: 'Down Payment',\n        downPaymentRateHelp: 'A percentage of the home price paid up front and in cash—usually at least 20%.',\n        dateHelpText: 'The term of your mortgage is the length of time it takes to pay off your mortgage completely.',\n        termHelpText: 'The summary over fixed term',\n        startDateText: 'Start Date',\n        startDateHelpText: 'This is the date that you mortgage will start. Payments will generally begin in the next month after this date.',\n        moneyFieldError: 'Use positive numbers less than 1 million.',\n        percentageFieldError: 'Use positive numbers less than 100.',\n        yearsError: 'Use real number of years (Less than 100).',\n        monthsError: 'Use real number of months (Less than 1200).',\n        timeError: 'Use real number of years and months (1 < years < 100 | 12 < months < 1200).',\n        estimatedPayoffDate: 'Estimated Payoff Date',\n        amortizationSchedule: 'Amortization Schedule',\n        startingDateEmptyText: 'There is no starting date selected.',\n        selectDatePlaceholder: 'Click to select a date',\n        fullMonths: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n        shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        showAmortizationBtnText: 'Show Amortization Schedule',\n        hideAmortizationBtnText: 'Hide Amortization Schedule',\n        withExtraPayments: 'With extra payments',\n        withoutExtraPayments: 'Without extra payments',\n        showExtraPayments: 'Add Extra Payments',\n        hideExtraPayments: 'Hide Extra Payments',\n        extraPaymentsText1: 'Enter an amount on one of the options below and click “Add Extra Payments” to see how it will change the monthly payment, interest paid and total cost of your loan.',\n        extraPaymentHelp1: 'Add a set amount of money that you will add to your monthly payment every month.',\n        extraPaymentHelp2: 'Make one extra payment every year on a set month.',\n        extraPaymentHelp3: 'Make a one-time extra payment on a designated month and year',\n        extraPaymentLabel1: 'Add a set amount to your monthly payment each month',\n        extraPaymentLabel2: 'Make one extra payment each year',\n        extraPaymentLabel3: 'Add a one-time extra payment',\n        addExtraBtnTitle: 'Add Extra Payments',\n        extraLumpError: 'Extra payment cannot be made before the current date.',\n        dateHelpMessage: '*Please enter a date as: mm/dd/yyyy',\n        amortizationTableHelp: 'This summarizes the repayment schedule of the loan. It shows how each payment is divided between principal and interest charges, as well as the total interest charges and loan balance after each payment.',\n        totalAsOf: 'Total (as of ##yyyy##)',\n        amortizationPeriodSummary: 'Amortization Period Summary',\n        fixedTermSummary: 'Fixed Term Summary',\n    },\n    \"es\": {\n        calculatorTitle: 'Calculadora de hipoteca',\n        amountLabel: 'Monto',\n        amountHelpText: 'Es la cantidad total que desea tomar prestada.',\n        monthlyDepositLabel: 'Depósito Mensual',\n        balance: 'Balance',\n        interest: 'Interés',\n        totalPaid: 'Pagos totales',\n        totalPrincipalPaid: 'Total del monto principal pagado',\n        totalInterestPaid: 'Total del interés pagado',\n        totalEarlyPayments: 'Total de pagos anticipados',\n        principalPaid: 'Principal',\n        interestPaid: 'Interés pagado',\n        monthYearText: 'Mes/Año',\n        interestHelpText: 'Es la tasa de interés anual de su préstamo, definida en el contrato del préstamo. Las tasas promedio son de 3%-5% para compradores con buen crédito.',\n        payments: 'Pagos',\n        paymentSingular: 'Pago',\n        paymentLower: 'pagos',\n        monthlyPayments: 'Pagos mensuales',\n        biWeeklyPayments: 'Pago quincenal',\n        interestLabel: 'Tasa de interés',\n        monthly: 'mensual',\n        yearText: 'año',\n        yearPluralText: 'años',\n        yearPluralTextCapital: 'Años',\n        termsSummary: 'Término',\n        termsSummaryLabel: 'Término',\n        TimeToRepayText: 'Tiempo para pagar',\n        totalInterestText: 'Interés total',\n        monthlyText: 'Mensual',\n        annuallyText: 'Anual',\n        biweeklyText: \"Quincenal\",\n        loanAmount: 'Monto del préstamo',\n        termInYears: 'Término en años',\n        termInMonths: 'o meses',\n        orText: 'O',\n        downPaymentText: 'Pago Inicial',\n        downPaymentHelp: 'Un porcentaje del precio de la vivienda pagado por adelantado y en efectivo. Ingrese una cantidad en dólares o elija un porcentaje. Para una hipoteca tradicional, usted necesita al menos 20%, o 3.5% para FHA.',\n        downPaymentRateText: 'Tasa de anticipo',\n        downPaymentRateHelp: 'Un porcentaje del precio de la vivienda pagado por adelantado y en efectivo, generalmente al menos el 20%.',\n        dateHelpText: 'El término de un préstamo es la cantidad de tiempo que usted tendrá para pagar el total del monto.',\n        termHelpText: 'El resumen sobre plazo fijo',\n        startDateText: 'Fecha de Comienzo',\n        startDateHelpText: 'Es la fecha en que usted recibirá el dinero prestado, y su hipoteca comienza. Usualmente los pagos comienzan el mes siguiente luego de la fecha de comienzo.',\n        moneyFieldError: 'Use números positivos menores que 1 millón.',\n        percentageFieldError: 'Use números positivos menores que 100',\n        yearsError: 'Use una cantidad real de años. No se permiten puntos.',\n        monthsError: 'Use una cantidad real de meses (menos de 1200).',\n        timeError: 'Use un número real de años o meses (años <100 | meses <1200).',\n        estimatedPayoffDate: 'Fecha Estimada de su Pago Final',\n        amortizationSchedule: 'Plan de amortización',\n        startingDateEmptyText: 'No hay una fecha de inicio seleccionada.',\n        selectDatePlaceholder: 'Seleccione una fecha',\n        fullMonths: ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],\n        shortMonths: ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],\n        showAmortizationBtnText: 'Ver tabla de amortización',\n        hideAmortizationBtnText: 'Ocultar tabla de amortización',\n        withExtraPayments: 'Con pagos extras',\n        withoutExtraPayments: 'Sin pagos extras',\n        showExtraPayments: 'Añadir Pagos Adicionales',\n        hideExtraPayments: 'Ocultar Pagos Extras',\n        extraPaymentsText1: 'Ingrese la cantidad en una de las alternativas abajo, luego haga click en “Añadir Pagos Adicionales” para ver cómo cambia su pago mensual, el interés pagado y el costo total de su préstamo.',\n        extraPaymentHelp1: 'Añadir una cantidad de dinero determinada a su pago mensual.',\n        extraPaymentHelp2: 'Hacer un pago adicional cada año, en un mes determinado.',\n        extraPaymentHelp3: 'Hacer un pago adicional por única vez en un mes y año determinados.',\n        extraPaymentLabel1: 'añadir a su pago mensual',\n        extraPaymentLabel2: 'como un pago anual extra cada:',\n        extraPaymentLabel3: 'como un pago único extra en:',\n        addExtraBtnTitle: 'Añadir pagos adicionales',\n        extraLumpError: 'El pago adicional no puede hacerse antes de la fecha actual.',\n        dateHelpMessage: '*Por favor ingrese la fecha en formato mm/dd/año (el año debe tener cuatro dígitos)',\n        amortizationTableHelp: 'Esta tabla resume el plan de pagos de un préstamo, incluyendo el desglose del pago mensual entre el balance principal y los cargos por interés, el interés total pagado y el balance del préstamo luego de cada pago.',\n        totalAsOf: 'Total (a partir de ##yyyy##)',\n        amortizationPeriodSummary: 'Resumen del período de amortización',\n        fixedTermSummary: 'Resumen de plazo fijo',\n    },\n    \"ca\": {\n        calculatorTitle: 'Mortgage Calculator',\n        amountLabel: 'Amount',\n        amountHelpText: 'This is the total amount you wish to take out on the loan itself. This amount is not necessarily the price of the home you wish to purchase, as you may need to deduct your down payment.',\n        monthlyDepositLabel: 'Monthly Deposit',\n        balance: 'Balance',\n        interest: 'Interest',\n        totalPaid: 'Total Payments',\n        totalPrincipalPaid: 'Total Principal Paid',\n        totalInterestPaid: 'Total Interest Paid',\n        totalEarlyPayments: 'Total of early payments',\n        principalPaid: 'Principal paid',\n        interestPaid: 'Interest paid',\n        monthYearText: 'Month/Year',\n        interestHelpText: 'This is the annual interest rate on your mortgage as defined in your loan agreement. If you don’t yet have a mortgage, rates average between 2%-4% for Canadian homebuyers with good credit.',\n        payments: 'Payments',\n        paymentSingular: 'Payment',\n        paymentLower: 'payments',\n        monthlyPayments: 'Monthly Payments',\n        biWeeklyPayments: 'Bi-Weekly Payments',\n        interestLabel: 'Interest rate',\n        monthly: 'monthly',\n        yearText: 'year',\n        yearPluralText: 'years',\n        yearPluralTextCapital: 'Years',\n        termsSummary: 'Term',\n        termsSummaryLabel: 'Term',\n        TimeToRepayText: 'Time to repay',\n        totalBalanceText: 'Total balance',\n        totalInterestText: 'Total interest',\n        monthlyText: 'Monthly',\n        annuallyText: 'Annually',\n        biweeklyText: \"Bi-weekly\",\n        loanAmount: 'Home price',\n        termInYears: 'Amortization Period',\n        termInMonths: 'or months',\n        orText: 'Or',\n        downPaymentText: 'Down Payment',\n        downPaymentHelp: 'This is the amount of money you have to put down on the home. You may enter a specific dollar amount or choose a percentage. The minimum down payment in Canada is 5% if the purchase price of the home is less than $500,000.',\n        downPaymentRateText: 'Down Payment',\n        downPaymentRateHelp: 'A percentage of the home price paid up front and in cash—usually at least 20%.',\n        dateHelpText: 'Amortization Period is the time that it will take to repay the mortgage in full. The amortization period, along with the interest rate, is used to determine the monthly mortgage payment.',\n        termHelpText: 'The financial summary over the term of the mortgage.',\n        startDateText: 'Start Date',\n        startDateHelpText: 'This is the date that you mortgage will start. Payments will generally begin in the next month after this date.',\n        moneyFieldError: 'Use positive numbers less than 1 million.',\n        percentageFieldError: 'Use positive numbers less than 100.',\n        yearsError: 'Use real number of years (Less than 100).',\n        monthsError: 'Use real number of months (Less than 1200).',\n        timeError: 'Use real number of years and months (1 < years < 100 | 12 < months < 1200).',\n        estimatedPayoffDate: 'Estimated Payoff Date',\n        amortizationSchedule: 'Amortization Schedule',\n        startingDateEmptyText: 'There is no starting date selected.',\n        selectDatePlaceholder: 'Click to select a date',\n        fullMonths: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n        shortMonths: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        showAmortizationBtnText: 'Show Amortization Schedule',\n        hideAmortizationBtnText: 'Hide Amortization Schedule',\n        withExtraPayments: 'With extra payments',\n        withoutExtraPayments: 'Without extra payments',\n        showExtraPayments: 'Add Extra Payments',\n        hideExtraPayments: 'Hide Extra Payments',\n        extraPaymentsText1: 'Enter an amount on one of the options below and click “Add Extra Payments” to see how it will change the monthly payment, interest paid and total cost of your loan.',\n        extraPaymentHelp1: 'Add a set amount of money that you will add to your monthly payment every month.',\n        extraPaymentHelp2: 'Make one extra payment every year on a set month.',\n        extraPaymentHelp3: 'Make a one-time extra payment on a designated month and year',\n        extraPaymentLabel1: 'add to your monthly payment',\n        extraPaymentLabel2: 'as an extra annual payment every:',\n        extraPaymentLabel3: 'as a one-time extra payment in:',\n        addExtraBtnTitle: 'Add Extra Payments',\n        extraLumpError: 'Extra payment cannot be made before the current date.',\n        dateHelpMessage: '*Please enter a Date as: mm/dd/yyyy',\n        amortizationTableHelp: 'This summarizes the repayment schedule of the loan, including how each payment is divided between principal and interest, as well as the total interest charges and loan balance after each payment. The average amortization period in Canada is 25 years.',\n        totalAsOf: 'Total (as of ##yyyy##)',\n        amortizationPeriodSummary: 'Amortization Period Summary',\n        fixedTermSummary: 'Mortgage Term Summary',\n    },\n    \"fr\": {\n        calculatorTitle: 'Calculatrice hypothécaire',\n        amountLabel: 'Montant du prêt hypothécaire',\n        amountHelpText: 'Montant que vous prévoyez emprunter de votre institution financière. Ce montant est calculé en prenant le prix d\\'achat de votre maison, moins la mise de fonds, plus la prime d\\'assurance prêt hypothécaire que vous avez à payer.',\n        monthlyDepositLabel: 'Dépôt mensuel',\n        balance: 'Solde',\n        interest: 'Intérêt',\n        totalPrincipalPaid: 'Total du capital payé',\n        totalInterestPaid: 'Total des intérêts payés',\n        totalEarlyPayments: 'Total des paiements anticipés',\n        principalPaid: 'Principal payé',\n        interestPaid: 'Intérêts payés',\n        totalPaid: 'Paiements totaux',\n        monthYearText: 'Mois/Année',\n        interestHelpText: 'Il s\\'agit du taux d\\'intérêt annuel que vous paierez sur votre hypothèque. Ceci est généralement défini sur votre accord de prêt.',\n        payments: 'Paiements',\n        paymentSingular: 'Paiement',\n        paymentLower: 'paiements',\n        monthlyPayments: 'Mensualités',\n        biWeeklyPayments: 'Bi-Mensuelle',\n        interestLabel: 'Taux d\\'intérêt',\n        monthly: 'mensuel',\n        yearText: 'an',\n        yearPluralText: 'ans',\n        yearPluralTextCapital: 'ans',\n        termsSummary: 'Terme',\n        termsSummaryLabel: 'Terme',\n        TimeToRepayText: 'Il est temps de rembourser',\n        totalBalanceText: 'Solde total',\n        totalInterestText: 'Intérêt total',\n        monthlyText: 'Mensuel',\n        annuallyText: 'Annuellement',\n        biweeklyText: \"Bi-Mensuelle\",\n        loanAmount: 'Montant hypothécaire',\n        termInYears: 'Période amortissement',\n        termInMonths: 'ou mois',\n        orText: 'Ou',\n        downPaymentText: 'Acompte',\n        downPaymentHelp: 'Un pourcentage du prix du logement payé d\\'avance et en espèces.',\n        downPaymentRateText: 'Taux d\\'acompte',\n        downPaymentRateHelp: 'Un pourcentage du prix du logement payé d\\'avance et en espèces, généralement.',\n        dateHelpText: 'La durée d\\'un prêt correspond au temps dont vous disposez pour le rembourser intégralement.',\n        termHelpText: 'Aperçu de durée déterminée',\n        startDateText: 'Date de début',\n        startDateHelpText: 'C\\'est la date à laquelle vous recevrez vos fonds. Les paiements commencent généralement le mois suivant la date de début.',\n        moneyFieldError: 'Utilisez des nombres positifs inférieurs à 1 million.',\n        percentageFieldError: 'Utilisez des nombres positifs inférieurs à 100.',\n        yearsError: 'Utilisez le nombre réel d\\'années (moins de 100).',\n        monthsError: 'Utilisez le nombre réel de mois (moins de 1200).',\n        timeError: 'Utilisez le nombre réel d\\'années et de mois (1 <années <100 | 12 <mois <1200).',\n        estimatedPayoffDate: 'Date de retour estimée',\n        amortizationSchedule: 'Calendrier d\\'amortissement',\n        startingDateEmptyText: 'Aucune date de début n\\'est sélectionnée.',\n        selectDatePlaceholder: 'Cliquez pour sélectionner une date',\n        fullMonths: ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'Septembre', 'Octobre', 'Novembre', 'Décembre'],\n        shortMonths: ['Jan', 'Fév', 'Mar', 'Avr', 'Mai', 'Jui', 'Juil', 'Aoû', 'Sep', 'Oct', 'Nov', 'Déc'],\n        showAmortizationBtnText: 'Afficher le calendrier d\\'amortissement',\n        hideAmortizationBtnText: 'Masquer le calendrier d\\'amortissement',\n        withExtraPayments: 'Avec des paiements supplémentaires',\n        withoutExtraPayments: 'Sans paiements supplémentaires',\n        showExtraPayments: 'Ajouter des paiements supplémentaires',\n        hideExtraPayments: 'Masquer les paiements supplémentaires',\n        extraPaymentsText1: 'Entrez un montant dans l\\'une des options ci-dessous et cliquez sur «Ajouter des paiements supplémentaires» pour voir comment cela changera le paiement mensuel, les intérêts payés et le coût total de votre prêt.',\n        extraPaymentHelp1: 'Ajoutez un montant fixe que vous ajouterez à votre paiement mensuel chaque mois.',\n        extraPaymentHelp2: 'Faites un paiement supplémentaire chaque année sur un mois déterminé.',\n        extraPaymentHelp3: 'Effectuer un paiement supplémentaire unique sur un mois et une année désignés',\n        extraPaymentLabel1: 'ajouter à votre paiement mensuel',\n        extraPaymentLabel2: 'comme un paiement annuel supplémentaire chaque:',\n        extraPaymentLabel3: 'comme un paiement supplémentaire unique en:',\n        addExtraBtnTitle: 'Ajouter des paiements supplémentaires',\n        extraLumpError: 'Aucun paiement supplémentaire ne peut être effectué avant la date actuelle.',\n        dateHelpMessage: '*Veuillez saisir un format de date valide (mm/dd/year)',\n        amortizationTableHelp: 'Ce tableau résume le calendrier de remboursement d\\'un prêt, y compris la répartition du paiement mensuel entre le principal et les intérêts débiteurs, le total des intérêts payés et le solde du prêt après chaque paiement.',\n        totalAsOf: 'Total (au ##yyyy##)',\n        amortizationPeriodSummary: 'Aperçu de la période d\\'amortissement',\n        fixedTermSummary: 'Aperçu de durée déterminée',\n    },\n\n};\n\nexport default function getTranslations(lan) {\n    return translations[lan];\n}\n","import React, { Component } from 'react';\n\nclass Tooltip extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = { hover: false }\n    }\n\n    handleMouseInOut() {\n        this.setState({ hover: !this.state.hover })\n    }\n\n    handleTooltip() {\n        this.setState({ hover: !this.state.hover })\n    }\n\n    render() {\n        return(\n            <div className=\"tooltipContainer\">\n                <div\n                    className='helpMiniDisk'\n                    onClick={this.handleTooltip.bind(this)}\n                    onMouseOver={this.handleMouseInOut.bind(this)}\n                    onMouseOut={this.handleMouseInOut.bind(this)}\n                >?</div>\n                <div className=\"customTooltip\" style={{visibility: this.state.hover ? 'visible' : 'hidden' }}>{this.props.content}</div>\n            </div>\n        )\n    }\n}\nexport default Tooltip;\n","import React from 'react';\nimport Tooltip from './tooltip.jsx';\nimport NumberFormat from 'react-number-format';\nimport '../styles/inputGroup.css';\n\nconst InputGroup = ({id, label, name, value, placeholder, icon, isIntiger, iconPosition, tooltipContent, errorMsg, errorOccur, onChange, wrapperClass}) => {\n\n    let inputGroup = (\n        <div className=\"input-group\">\n            <div className=\"input-group-prepend\">\n                <span className={`input-group-text ${errorOccur ? 'inputIconError' : '' }`}>{icon}</span>\n            </div>\n\n            <NumberFormat\n                id={id}\n                name={name}\n                value={value}\n                className={`form-control ${errorOccur ? 'inputError' : '' }`}\n                placeholder={placeholder}\n                thousandSeparator={true}\n                allowNegative={false}\n                onValueChange={ (values) => {\n                    //values is an object that contains:\n                    // formattedValue = $2,223\n                    // value ie, 2223\n                    const {value} = values;\n\n                    onChange({name: name, value: value});\n                }}\n            />\n        </div>\n    );\n\n    if(iconPosition === 'right'){\n        inputGroup = (\n            <div className=\"input-group\">\n                <NumberFormat\n                    id={id}\n                    name={name}\n                    value={value}\n                    className={`form-control ${errorOccur ? 'inputError' : '' }`}\n                    placeholder={placeholder}\n                    thousandSeparator={true}\n                    allowNegative={false}\n                    onValueChange={ (values) => {\n                        const {value} = values;\n                        onChange({name: name, value: value});\n                    }}\n                />\n                <div className=\"input-group-append\">\n                    <span className={`input-group-text ${errorOccur ? 'inputIconError' : '' }`}>{icon}</span>\n                </div>\n            </div>\n        );\n    }\n\n    let singleField = (\n        <NumberFormat\n            id={id}\n            name={name}\n            value={value}\n            className={`form-control ${errorOccur ? 'inputError' : '' }`}\n            placeholder={placeholder}\n            thousandSeparator={false}\n            allowNegative={false}\n            onValueChange={ (values) => {\n                const {value} = values;\n                onChange({name: name, value: value});\n            }}\n        />\n    );\n\n    return (\n        <React.Fragment>\n            { label &&\n                (<label htmlFor={id} className=\"col-12 loan-label\">\n                    <Tooltip content={tooltipContent} /> {label}\n                </label>)\n            }\n\n\n            <div className={wrapperClass ? wrapperClass : 'col-12'}>\n                { icon ? inputGroup : singleField}\n                <small className={`inputErrorText ${errorOccur ? 'show' : 'hide' }`}>{errorMsg}</small>\n            </div>\n        </React.Fragment>\n    )\n\n};\n\nexport default InputGroup;","import React from \"react\";\n\nconst TableHeader = ({columns}) => {\n  return (\n        <thead>\n            <tr>\n                { columns.map(column => <th key={column}>{column}</th>) }\n            </tr>\n        </thead>\n  );\n}\n\nexport default TableHeader;\n","import React from \"react\";\nimport Util from '../Utils'\n\nconst TableBody = ({data}) => {\n    /* let aux_data = data;\n    aux_data = aux_data.map(row => {\n        return row.splice(-1,1);\n    } );\n    arr.splice(-1,1) */\n\n    return (\n      <tbody>\n        {data.map((row, index)  => {\n                return (\n                    <tr key={index+'_row'} className={row.bg_class}>\n                    { Object.keys(row).map((columnKeyName, i) => ( columnKeyName !== 'bg_class' &&\n                        <td key={index+'_'+i+'cell'}>\n                        { row[columnKeyName] }\n                        { i > 0 && Util.countDecimalPlaces(row[columnKeyName]) === 1 && '0' }\n                        </td>\n                    )) }\n                    </tr>\n                );\n            }\n\n        )}\n      </tbody>\n    );\n}\n\nexport default TableBody;\n","import React from \"react\";\nimport TableHeader from \"./tableHeader.jsx\";\nimport TableBody from \"./tableBody.jsx\";\n\nconst Table = ({ columns, data }) => {\n  return (\n    <table className=\"table table-bordered table-hover\">\n      <TableHeader columns={columns}/>\n      <TableBody data={data} />\n    </table>\n  );\n};\n\nexport default Table;","import React, { Component } from \"react\";\nimport \"../styles/select.css\";\n\nclass Dropdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listOpen: false\n    };\n    this.close = this.close.bind(this);\n  }\n\n  componentDidUpdate() {\n    setTimeout(() => {\n      this.state.listOpen\n        ? window.addEventListener(\"click\", this.close)\n        : window.removeEventListener(\"click\", this.close);\n    }, 0);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"click\", this.close);\n  }\n\n  close(timeOut) {\n    this.setState({ listOpen: false });\n  }\n\n  selectItem(id) {\n    this.setState( {listOpen: false}, this.props.handleBPSelect(id, this.props.name) );\n  }\n\n  toggleList() {\n    this.setState(prevState => ({\n      listOpen: !prevState.listOpen\n    }));\n  }\n\n  render() {\n    const { listOpen } = this.state;\n    const headerTitle = this.props.list.filter(item => item.selected)[0].title;\n    //const headerSubTitle = this.props.list.filter(item => item.selected)[0].subtitle;\n\n    return (\n      <div className=\"dd-wrapper\">\n        <div className=\"dd-header\" onClick={() => this.toggleList()}>\n          <div className=\"dd-header-title\">\n            <span>{headerTitle}</span>\n          </div>\n          {listOpen ? (\n            <i className=\"select-arrow up\" />\n          ) : (\n            <i className=\"select-arrow down\" />\n          )}\n        </div>\n        {listOpen && (\n          <ul className=\"dd-list\" onClick={e => e.stopPropagation()}>\n            {this.props.list.map(item => (\n              <li\n                className={\n                  item.selected ? \"dd-list-item selected\" : \"dd-list-item\"\n                }\n                key={item.id}\n                onClick={() => this.selectItem(item.id)}\n              >\n                <span>{item.title}</span>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Dropdown;","import React, { Component } from 'react';\nimport DatePicker, {registerLocale} from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { scroller } from 'react-scroll';\n\n//Setting Up Location\nimport es from 'date-fns/locale/es';\nimport frCa  from 'date-fns/locale/fr-CA';\n\nimport Util from \"./Utils\";\nimport getTranslations from './language';\nimport InputGroup from './components/inputGourp';\nimport Table from './components/table.jsx'\nimport Tooltip from './components/tooltip.jsx';\nimport Dropdown from \"./components/select\";\n\nimport './App.css';\n\nregisterLocale('es', es);\nregisterLocale('fr', frCa);\n\nclass App extends Component {\n    constructor(props){\n        super(props);\n\n        const region = props.region ? props.region : 'us';\n        const lan = props.lan ? props.lan : 'en';\n        const possibleYears = Util.getPossibleYears(50);\n        const languages = getTranslations(lan);\n        const listOfMonths = Util.getMonthds( languages.fullMonths );\n        const years = region === 'ca' ? 25 : 30;\n\n        this.state = {\n            lan,\n            region,\n            translations : languages,\n            startDate: new Date(),\n            amount: 100000,\n            years,\n            months: years*12,\n            interest: 4,\n            extraMonthlyAmount: 0,\n            extra_yearly_amount: 0,\n            extra_lump_amount: 0,\n            extraYearlyMonths: listOfMonths,\n            extraLumpMonths: listOfMonths,\n            extraLumpYears: possibleYears,\n            term: 1,\n\n            downPayment: 0,\n            downPaymentRate: 0,\n            paymentType: 'bi-weekly',\n\n            monthlyPayment: 0,\n\n            tableColumns : [\n                languages.monthYearText,\n                languages.paymentSingular,\n                languages.principalPaid,\n                languages.interestPaid,\n                languages.totalInterestText,\n                languages.balance+' ',\n            ],\n            tableResults : [],\n            dateToFinish : new Date(),\n            showResults  : false,\n            showAmortization: false,\n            showExtraPayments: false,\n            showEPayError: false,\n\n            lockField: '',\n\n            mortgageTotals: {},\n            termTotal: {}\n        };\n\n    }//End of Constructor\n\n    pmt(rate, nper, pv, fv, type){\n        if (!fv) fv = 0;\n        if (!type) type = 0;\n\n        if (rate === 0) return -(pv + fv)/nper;\n\n        const pvif = Math.pow(1 + rate, nper);\n        let pmt = rate / (pvif - 1) * -(pv * pvif + fv);\n\n        if (type === 1) {\n            pmt /= (1 + rate);\n        }\n\n        return pmt;\n    }\n\n    rate() {\n        if (this.state.region === 'ca') {\n            return (Math.pow(Math.pow(1+(this.state.interest/100/2),2),(1/12))-1);\n        }\n\n        return this.state.interest/100/12;\n    }\n\n    biWeeklyRate() {\n        if (this.state.region === 'ca') {\n            return Math.pow(Math.pow(1+(this.state.interest/100/2),2),(1/26))-1;\n        }\n\n        return this.state.interest/100/26;\n    }\n\n    monthlyPayment() {\n        const amount = this.state.amount-this.state.downPayment;\n\n        if (this.state.region === 'ca') {\n            return (amount*this.rate())/(1-Math.pow(1+this.rate(),-this.state.years * 12));\n        }\n\n        return this.pmt(this.rate(),this.state.years * 12,-amount);\n    }\n\n    biWeeklyPayment() {\n        return this.monthlyPayment() / 2;\n    }\n\n    handleChange = (properties) => {\n        let showResults = false;\n        if((properties.name === 'extraMonthlyAmount' || properties.name === 'extra_yearly_amount' || properties.name === 'extra_lump_amount') && this.state.showResults === true ){\n            showResults = true;\n        }\n\n        this.setState({showResults, [properties.name]: properties.value});\n    }\n\n    handlePaymentTypeChange = (props) => {\n        this.setState({paymentType: props.target.name});\n    }\n\n    handleBPSelect = (id, name) => {\n        //Updating List of Monthds\n        let tempPer = JSON.parse(JSON.stringify(this.state[name]));\n        tempPer.forEach(item => (item.selected = false));\n        tempPer[id].selected = true;\n\n        const currDate = new Date();\n        const currYear = currDate.getFullYear();\n        const currentMonth = currDate.getMonth();\n        const extra_lump_month = this.state.extraLumpMonths.findIndex(obj => obj.selected);\n        let aux_showEPayError = false;\n        if(name === 'extraLumpYears' && tempPer[id].title === currYear && extra_lump_month < currentMonth){\n            aux_showEPayError = true;\n        }else{\n            if( name === 'extraLumpMonths' && this.state.extraLumpYears.filter(y => y.selected)[0].title === currYear && this.state.extraLumpMonths.findIndex(obj => obj.title === tempPer[id].title) < currentMonth ){\n                aux_showEPayError = true;\n            }\n        }\n\n        this.setState({ [name]: tempPer, showEPayError: aux_showEPayError });\n    };\n\n    handleDownPayment = (props) => {\n        const {name, value} = props;\n\n        let validated_value = value;\n\n        if (name === this.state.lockField) {\n            this.setState({lockField: ''});\n            return false;\n        }\n\n        if (name === 'downPayment') {\n            validated_value = Math.min(this.state.amount, Math.max(0, value));\n            const downPaymentRate = (+value / this.state.amount) * 100;\n            this.setState({ downPaymentRate: parseFloat(downPaymentRate).toFixed(2), [name]: parseFloat(validated_value).toFixed(2), lockField: 'downPaymentRate'});\n        }\n        else if (name === 'downPaymentRate') {\n            const downPayment = (+value / 100) * this.state.amount;\n            validated_value = Math.min(100, Math.max(0, value));\n            this.setState({ downPayment: parseFloat(downPayment).toFixed(0), [name]: parseFloat(validated_value).toFixed(2), lockField: 'downPayment'});\n        }\n    }\n\n    handleTermChange = (props) => {\n        const {name, value} = props;\n        let int_val = Math.floor(value);\n        this.setState( {term: Math.max(1, Math.min(10, int_val))});\n    }\n\n    handleTimeChange = (props) => {\n        const {name, value} = props;\n\n        let int_val = Math.floor(value);\n        let time_value = 0;\n        if(name === 'years') {\n            time_value = Util.calculateMonthsYears(int_val, false);\n            this.setState( {years: int_val, months: time_value, showResults: false } );\n        }\n        else{\n            time_value = Util.calculateMonthsYears(int_val);\n            let rest = time_value - Math.floor(time_value);\n            let str_number = time_value.toString();\n            if(rest === 0){\n                str_number = str_number.split(\".\")[0];\n            }\n            this.setState( {months: int_val, years: str_number, showResults: false } );\n        }\n    }\n\n    keyUpHandlerTime = (e) => {\n        const {name, value} = e.target;\n        let int_val = Math.floor(value);\n        this.setState( {[name]: int_val} );\n    }\n\n    translationsStringReplace(keys, translation) {\n\n        let newTranslation = translation;\n        Object.keys(keys).forEach((key) =>  {\n            newTranslation = newTranslation.replace(`##${key}##`, keys[key])\n        });\n        return newTranslation;\n    }\n\n    calculateAmortization = (props) =>{\n\n        let {\n            amount,\n            downPayment,\n            paymentType,\n            months,\n            startDate,\n            term,\n            extraMonthlyAmount,\n            extra_yearly_amount,\n            extra_lump_amount,\n            extraYearlyMonths,\n            extraLumpMonths,\n            extraLumpYears,\n            translations } = this.state;\n\n        let extra_yearly_month = extraYearlyMonths.findIndex(obj => obj.selected);\n        let extra_lump_month = extraLumpMonths.findIndex(obj => obj.selected);\n        let extra_lump_year = Number(extraLumpYears.filter(obj => obj.selected)[0].title);\n\n        let monthly_payment = (paymentType === 'bi-weekly') ? this.biWeeklyPayment() : this.monthlyPayment();\n        let monthly_payment_without_extra = monthly_payment;\n\n        let total_interest = 0;\n        let default_color = 'trbg-default';\n        let tr_bg_color = default_color;\n\n        if(extraMonthlyAmount){\n            monthly_payment += Number(extraMonthlyAmount);\n            default_color = 'trbg-lblue';\n        }\n\n        let payment = Number(monthly_payment);\n        let temp_payment = payment;\n\n        let amortizationTerm = months;\n        let term_date = '';\n        let aux_dates = '';\n        let next_month = '';\n        let next_year = '';\n        let interest_paid = '';\n        let principal_paid = 0;\n        let amortizationTable = [];\n\n        let yearTotals = {\n            payment: 0,\n            principalPaid: 0,\n            interestPaid: 0,\n            totalInterest: 0,\n            balance: 0,\n            earlyPayments: 0\n        };\n\n        let termTotals = {\n            payment: 0,\n            principalPaid: 0,\n            interestPaid: 0,\n            totalInterest: 0,\n            balance: 0,\n            earlyPayments: 0\n        };\n\n        amount = amount-downPayment;\n\n        let currDate = new Date(startDate);\n        const currYear = currDate.getFullYear();\n        const currentMonth = currDate.getMonth();\n        let termEndDate = new Date(startDate);\n        termEndDate.setFullYear(currDate.getFullYear() + term);\n\n        if (paymentType === 'monthly') {\n            for(let month=1; month<=amortizationTerm; month++) {\n                tr_bg_color = default_color;\n\n                aux_dates = new Date(startDate);\n                term_date = new Date( aux_dates.setMonth(aux_dates.getMonth() + month) );\n                next_month = term_date.getMonth();\n                next_year = term_date.getFullYear();\n\n                if( extra_yearly_amount && extra_yearly_month === next_month ){\n                    payment += Number(extra_yearly_amount);\n\n                    if( extra_lump_amount && extra_lump_amount !== \"0\" && extra_lump_month === next_month && extra_lump_year === next_year ){\n                        tr_bg_color = \"trbg-lgreen\";\n                    }\n                    else{\n                        tr_bg_color = \"trbg-lsky\";\n                    }\n                }\n                else{\n                    if( extra_lump_amount && extra_lump_month === next_month && extra_lump_year === next_year ){\n                        payment += Number(extra_lump_amount);\n                        tr_bg_color = \"trbg-lgreen\";\n                    }\n                    else{\n                        payment = temp_payment;\n                    }\n                }\n\n                interest_paid = amount*this.rate();\n\n                principal_paid = payment-interest_paid;\n\n                if (amount < principal_paid){\n                    principal_paid = amount;\n                    payment = principal_paid;\n                    amount = 0;\n                }\n                else {\n                    amount -= (payment-interest_paid);\n                }\n\n                yearTotals.payment += payment;\n                yearTotals.principalPaid += principal_paid;\n                yearTotals.interestPaid += interest_paid;\n                yearTotals.earlyPayments += Math.max(0,monthly_payment-monthly_payment_without_extra);\n\n\n                if (termEndDate.getTime() - term_date.getTime() >= 0) {\n                    termTotals.payment = '$' + Util.formatMoney( Util.roundTo(yearTotals.payment, 2) );\n                    termTotals.principalPaid = '$' + Util.formatMoney( Util.roundTo(yearTotals.principalPaid, 2) );\n                    termTotals.interestPaid = '$' + Util.formatMoney( Util.roundTo(yearTotals.interestPaid, 2) );\n                    termTotals.earlyPayments = yearTotals.earlyPayments;\n                }\n\n                total_interest += interest_paid;\n\n                amortizationTable.push({\n                    month_year: translations.shortMonths[next_month]+' - '+next_year,\n                    payment: '$' + Util.formatMoney( Util.roundTo(payment, 2) ),\n                    principalPaid: '$' + Util.formatMoney( Util.roundTo(principal_paid, 2) ),\n                    interestPaid: '$' + Util.formatMoney( Util.roundTo(interest_paid, 2) ),\n                    totalInterest: '$' + Util.formatMoney( Util.roundTo(total_interest, 2) ),\n                    balance: '$' + Util.formatMoney( Util.roundTo(amount, 2) ),\n                    bg_class: tr_bg_color,\n                });\n\n                // last month total  - amount is never zero so the verification is 0.01\n                if (next_month === 11 || amount <= 0.01) {\n                    amortizationTable.push({\n                        month_year: this.translationsStringReplace({\n                            'yyyy': next_year\n                        }, translations.totalAsOf),\n                        payment: '$' + Util.formatMoney( Util.roundTo(yearTotals.payment, 2) ),\n                        principalPaid: '$' + Util.formatMoney( Util.roundTo(yearTotals.principalPaid, 2) ),\n                        interestPaid: '$' + Util.formatMoney( Util.roundTo(yearTotals.interestPaid, 2) ),\n                        totalInterest: '$' + Util.formatMoney( Util.roundTo(total_interest, 2) ),\n                        balance: '$' + Util.formatMoney( Util.roundTo(amount, 2) ),\n                        bg_class: 'trbg-total',\n                    });\n                }\n\n                if(amount <= 0){\n                    break;\n                }\n            }\n        }\n        else if (paymentType === 'bi-weekly') {\n\n            currDate.setHours(0,0,0,0);\n\n            let new_amount = this.state.amount - this.state.downPayment;\n            monthly_payment_without_extra = this.biWeeklyPayment();\n            total_interest = 0;\n\n            yearTotals.payment = 0;\n            yearTotals.principalPaid = 0;\n            yearTotals.interestPaid = 0;\n            yearTotals.earlyPayments = 0;\n\n            termTotals.payment = 0;\n            termTotals.principalPaid = 0;\n            termTotals.interestPaid = 0;\n            termTotals.earlyPayments = 0;\n\n            let once_a_year_paid = false;\n            let one_time_payment = false;\n\n            while (new_amount >= 0.1) {\n\n                // Add 2 weeks to the current Date\n                currDate.setTime(currDate.getTime() + (14 * 24 * 60 * 60 * 1000));\n                payment = this.biWeeklyPayment();\n                interest_paid = new_amount * this.biWeeklyRate();\n                total_interest += interest_paid;\n                principal_paid = payment-interest_paid;\n\n                tr_bg_color = default_color;\n\n                let date = currDate.getDate();\n                next_month = currDate.getMonth();\n                next_year = currDate.getFullYear();\n                term_date = currDate;\n\n                if( extra_yearly_amount && extra_yearly_month === next_month ){\n                    payment += Number(extra_yearly_amount);\n\n                    if( extra_lump_amount && extra_lump_amount !== \"0\" && extra_lump_month === next_month && extra_lump_year === next_year ){\n                        tr_bg_color = \"trbg-lgreen\";\n                    }\n                    else if (!once_a_year_paid) {\n                        tr_bg_color = \"trbg-lsky\";\n                        once_a_year_paid = true;\n                    }\n                }\n                else{\n                    if( extra_lump_amount && extra_lump_month === next_month && extra_lump_year === next_year && !one_time_payment  ){\n                        payment += Number(extra_lump_amount);\n                        tr_bg_color = \"trbg-lgreen\";\n                        one_time_payment = true;\n                    }\n                    else {\n                        payment = temp_payment;\n                    }\n                }\n\n                if (new_amount < principal_paid){\n                    principal_paid = new_amount;\n                    payment = principal_paid;\n                    new_amount = 0;\n                }\n                else {\n                    new_amount -= (payment-interest_paid);\n                }\n\n                yearTotals.payment += payment;\n                yearTotals.principalPaid += principal_paid;\n                yearTotals.interestPaid += interest_paid;\n                yearTotals.earlyPayments += Math.max(0,payment-monthly_payment_without_extra);\n\n                if (termEndDate.getTime() - term_date.getTime() >= 0) {\n                    termTotals.payment = '$' + Util.formatMoney( Util.roundTo(yearTotals.payment, 2) );\n                    termTotals.principalPaid = '$' + Util.formatMoney( Util.roundTo(yearTotals.principalPaid, 2) );\n                    termTotals.interestPaid = '$' + Util.formatMoney( Util.roundTo(yearTotals.interestPaid, 2) );\n                    termTotals.earlyPayments = yearTotals.earlyPayments;\n                }\n\n\n                amortizationTable.push({\n                    month_year: `${date < 10 ? `0${date}` : date} ${translations.shortMonths[next_month]} - ${next_year}`,\n                    payment: '$' + Util.formatMoney( Util.roundTo(payment, 2) ),\n                    principalPaid: '$' + Util.formatMoney( Util.roundTo(principal_paid, 2) ),\n                    interestPaid: '$' + Util.formatMoney( Util.roundTo(interest_paid, 2) ),\n                    totalInterest: '$' + Util.formatMoney( Util.roundTo(total_interest, 2) ),\n                    balance: '$' + Util.formatMoney( Util.roundTo(new_amount, 2) ),\n                    bg_class: tr_bg_color,\n                });\n\n                // last month total  - amount is never zero so the verification is 0.01\n                if ((next_month === 11 && (31-date < 14)) || new_amount <= 0.01) {\n                    amortizationTable.push({\n                        month_year: this.translationsStringReplace({\n                            'yyyy': next_year\n                        }, translations.totalAsOf),\n                        payment: '$' + Util.formatMoney( Util.roundTo(yearTotals.payment, 2) ),\n                        principalPaid: '$' + Util.formatMoney( Util.roundTo(yearTotals.principalPaid, 2) ),\n                        interestPaid: '$' + Util.formatMoney( Util.roundTo(yearTotals.interestPaid, 2) ),\n                        totalInterest: '$' + Util.formatMoney( Util.roundTo(total_interest, 2) ),\n                        balance: '$' + Util.formatMoney( Util.roundTo(new_amount, 2) ),\n                        bg_class: 'trbg-total',\n                    });\n\n                    once_a_year_paid = false;\n                }\n\n            }\n        }\n\n        let aux_showEPayError = false;\n        if( extraLumpYears.filter(y => y.selected)[0].title === currYear && extra_lump_month < currentMonth){\n            aux_showEPayError = true;\n        }\n\n        this.setState({\n            monthlyPayment: monthly_payment_without_extra,\n            tableResults: amortizationTable,\n            dateToFinish: term_date,\n            showResults: true,\n            showEPayError: aux_showEPayError,\n            mortgageTotals: yearTotals,\n            termTotals: termTotals\n        }, () => {\n            if(this.state.showAmortization){\n                this.scrollTo('mortgagePaymentResults');\n            }\n        });\n\n    }\n\n    calculateCurrentPayment() {\n\n    }\n\n    handleSubmit(e){\n        e.preventDefault();\n        this.calculateAmortization();\n    }\n\n    handleAmortizationAction = () => {\n        let aux_showAmortization = this.state.showAmortization;\n        aux_showAmortization = !aux_showAmortization;\n\n        this.setState({showAmortization : aux_showAmortization}, () => this.scrollTo('mortgagePaymentResults') );\n    }\n\n    handleExtraPaymentFields = () => {\n        let auxTableResults = JSON.parse(JSON.stringify(this.state.tableResults));\n\n        let aux_showExtraPayments = this.state.showExtraPayments;\n        aux_showExtraPayments = !aux_showExtraPayments;\n        if(aux_showExtraPayments){\n            this.setState({showExtraPayments : aux_showExtraPayments});\n        }else{\n            auxTableResults.forEach(row => (row.bg_class = 'trbg-default'));\n\n            this.setState({showExtraPayments : aux_showExtraPayments, extraMonthlyAmount: 0, extra_yearly_amount: 0, extra_lump_amount: 0, tableResults: auxTableResults }, () => {\n                this.scrollTo('renderResultTitle');\n                this.calculateAmortization();\n            });\n        }\n    }\n\n    handleDateChange = date => {\n        this.setState({ startDate: date }, () => { this.calculateAmortization() });\n    };\n\n    scrollTo(selector) {\n        scroller.scrollTo(selector, {\n            duration: 800,\n            delay: 0,\n            offset: -100,\n            smooth: 'easeInOutQuart',\n        })\n    }\n\n    render() {\n\n        const {amount, downPaymentRate, downPayment, paymentType, interest, years, term, months, translations, extraMonthlyAmount, extra_yearly_amount, extra_lump_amount, extraYearlyMonths, extraLumpMonths, extraLumpYears, mortgageTotals, termTotals, showAmortization, region} = this.state;\n        const {title, btnLabel} = this.props;\n\n        let resultsSectionTitle = translations.monthlyPayments;\n        if (paymentType === 'bi-weekly') {\n            resultsSectionTitle = translations.biWeeklyPayments;\n        }\n\n        return (\n            <div className=\"container loan-calculator-wrapper\">\n\n                <div className=\"row justify-content-center mortgage-form-container\">\n                    <div className=\"col-xs-12 col-sm-6 col-lg-5 mobile-padding-0\">\n                        <h3 className=\"loan-titles\">{title ? title : translations.calculatorTitle}</h3>\n\n                        <form id=\"mbp-calculator\" onSubmit={this.handleSubmit.bind(this)} >\n\n                            <div className=\"row form-group mt-3\">\n                                <InputGroup\n                                    id='home_price'\n                                    label={translations.loanAmount}\n                                    name='amount'\n                                    value={amount}\n                                    icon='$'\n                                    iconPosition='left'\n                                    tooltipContent={translations.amountHelpText}\n                                    errorOccur={(Number(amount) < 1 || Number(amount) > 1000000 || amount === '') ? 1 : 0}\n                                    errorMsg={translations.moneyFieldError}\n                                    onChange={this.handleChange}\n                                />\n                            </div>\n\n                            <div className=\"row no-gutters\">\n                                <div className=\"col-12 no-gutters mt-3\">\n                                    <InputGroup\n                                        id=\"mortgage_term\"\n                                        icon={translations.yearPluralText}\n                                        label={translations.termInYears}\n                                        name=\"years\"\n                                        wrapperClass={'pr-0'}\n                                        tooltipContent={translations.dateHelpText}\n                                        className={`form-control ${ (years < 1 || years > 100 || years === '') ? 'inputError' : '' }`}\n                                        value={years >= 1 ? years : ''}\n                                        onChange={this.handleTimeChange}\n                                    />\n                                </div>\n\n                                <div className=\"col-12\">\n                                    <small className={`inputErrorText ${ (years < 1 || years > 100 || years === '' || months < 1 || months > 1200 || months === '') ? 'show' : 'hide' }`}>{translations.timeError}</small>\n                                </div>\n                            </div>\n\n                            <div className=\"row no-gutters mt-3\">\n                                <InputGroup\n                                    id='ssc_interest'\n                                    label={translations.interestLabel}\n                                    name='interest'\n                                    value={interest}\n                                    icon='%'\n                                    iconPosition='left'\n                                    tooltipContent={translations.interestHelpText}\n                                    errorOccur={(Number(interest) <= 0 || Number(interest) > 100 || interest === '') ? 1 : 0}\n                                    errorMsg={translations.percentageFieldError}\n                                    onChange={this.handleChange}\n                                />\n                            </div>\n\n                            <div className=\"row no-gutters mt-3\">\n                                <div className=\"col-sm-7 no-gutters\">\n                                    <InputGroup\n                                        id='downPayment'\n                                        label={translations.downPaymentText}\n                                        name='downPayment'\n                                        value={downPayment}\n                                        wrapperClass={'pr-1 down-payment-field'}\n                                        icon='$'\n                                        iconPosition='left'\n                                        tooltipContent={translations.downPaymentHelp}\n                                        errorOccur={false}\n                                        errorMsg={false}\n                                        onChange={this.handleDownPayment}\n                                    />\n                                </div>\n\n                                <div className=\"col-sm-5 no-gutters\">\n                                    <InputGroup\n                                        id='downPaymentRate'\n                                        label={false}\n                                        name='downPaymentRate'\n                                        value={downPaymentRate}\n                                        wrapperClass={'pl-1 down-payment-rate-field'}\n                                        icon='%'\n                                        iconPosition='left'\n                                        tooltipContent={false}\n                                        errorOccur={false}\n                                        errorMsg={false}\n                                        onChange={this.handleDownPayment}\n                                    />\n                                </div>\n                            </div>\n\n                            {region === 'ca' && (\n                            <div className=\"row no-gutters\">\n                                <div className=\"col-12 no-gutters mt-3\">\n                                    <InputGroup\n                                        id=\"mortgage_fixed_term\"\n                                        icon={translations.yearPluralText}\n                                        label={translations.termsSummaryLabel}\n                                        name=\"term\"\n                                        wrapperClass={'pr-0'}\n                                        tooltipContent={translations.termHelpText}\n                                        className={`form-control ${ (term < 1 || term > 10 || term === '') ? 'inputError' : '' }`}\n                                        value={term >= 1 ? term : ''}\n                                        onChange={this.handleTermChange}\n                                    />\n                                </div>\n\n                                <div className=\"col-12\">\n                                    <small className={`inputErrorText ${ (term < 1 || term > 10 || term === '') ? 'show' : 'hide' }`}>{translations.timeError}</small>\n                                </div>\n                            </div>\n                            )}\n\n                            <div className=\"row no-gutters mt-3\">\n                                <div className=\"btn-group btn-group-toggle col-sm-12\">\n                                    <button className={`btn btn-secondary ${paymentType === 'bi-weekly' ? 'btn-active' : ''}`} name=\"bi-weekly\" onClick={this.handlePaymentTypeChange}>{translations.biweeklyText}</button>\n                                    <button className={`btn btn-secondary ${paymentType === 'monthly' ? 'btn-active' : ''}`} name=\"monthly\" onClick={this.handlePaymentTypeChange}>{translations.monthlyText}</button>\n                                </div>\n                            </div>\n\n                            <div className=\"mt-4 mb-3\">\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-secondary btn-block\"\n                                    disabled={ Number(amount)    < 1 || Number(amount)   > 1000000 || amount === ''   ||\n                                               Number(years)     < 1 || Number(years)    > 100     || years === ''    ||\n                                               Number(months)    < 1 || Number(months)   > 1200    || months === ''   ||\n                                               Number(interest) <= 0 || Number(interest) > 100     || interest === '' }\n                                >\n                                    { btnLabel }\n                                </button>\n                            </div>\n\n                        </form>\n                    </div>\n\n                    {/* Showing monthly payment results */}\n                    {this.state.showResults && (\n                        <div className=\"mt-3 results-total col-sm-6 col-lg-7 col-xl-5 text-center\">\n                            <h3 className=\"loan-titles\" id=\"renderResultTitle\">{resultsSectionTitle}</h3>\n                            <div className=\"mp-result mb-5\">\n                                <div className=\"mp-dolar-sign\">$</div>\n                                <div className=\"mp-dolar-numbers\">{Util.formatMoney( Util.roundTo(paymentType === 'bi-weekly' ? this.biWeeklyPayment() : this.monthlyPayment(), 2) )}</div>\n                            </div>\n\n                            <div className=\"text-left\">\n\n                                {region === 'ca' && (\n                                    <div className=\"row\">\n                                        <div className=\"col-12\">\n                                            <h4>{translations.amortizationPeriodSummary}</h4>\n                                        </div>\n                                    </div>\n                                )}\n\n                                <div className=\"row\">\n                                    <div className=\"col-7\">{translations.totalPrincipalPaid}</div>\n                                    <div className=\"col-5 text-black\">{ '$' + Util.formatMoney( Util.roundTo(amount-downPayment, 2) ) }</div>\n                                </div>\n\n                                <hr className=\"mp-results-line\" />\n\n                                <div className=\"row\">\n                                    <div className=\"col-7\">{translations.totalInterestPaid}</div>\n                                    <div className=\"col-5 text-black\">{'$' + Util.formatMoney( Util.roundTo(mortgageTotals.interestPaid, 2) ) }</div>\n                                </div>\n\n                                <hr className=\"mp-results-line\" />\n\n                                { this.state.mortgageTotals.earlyPayments > 0 && (\n                                    <div className=\"row\">\n                                        <div className=\"col-7\">{translations.totalEarlyPayments}</div>\n                                        <div className=\"col-5 text-black\">{'$' + Util.formatMoney( Util.roundTo(mortgageTotals.earlyPayments, 2) ) }</div>\n                                    </div>\n                                )}\n                            </div>\n\n                            {region === 'ca' && (\n                            <div className=\"text-left\">\n                                <div className=\"row\">\n                                    <div className=\"col-12\">\n                                        <h4>{translations.fixedTermSummary}</h4>\n                                    </div>\n                                </div>\n\n                                <div className=\"row\">\n                                    <div className=\"col-7\">{translations.totalPaid}</div>\n                                    <div className=\"col-5 text-black\">{ termTotals.payment }</div>\n                                </div>\n\n                                <hr className=\"mp-results-line\" />\n\n                                <div className=\"row\">\n                                    <div className=\"col-7\">{translations.totalPrincipalPaid}</div>\n                                    <div className=\"col-5 text-black\">{ termTotals.principalPaid }</div>\n                                </div>\n\n                                <hr className=\"mp-results-line\" />\n\n                                <div className=\"row\">\n                                    <div className=\"col-7\">{translations.totalInterestPaid}</div>\n                                    <div className=\"col-5 text-black\">{ termTotals.interestPaid }</div>\n                                </div>\n\n                                <hr className=\"mp-results-line\" />\n\n                                { termTotals.earlyPayments > 0 && (\n                                    <div className=\"row\">\n                                        <div className=\"col-7\">{translations.totalEarlyPayments}</div>\n                                        <div className=\"col-5 text-black\">{ '$' + Util.formatMoney( Util.roundTo(termTotals.earlyPayments, 2) ) }</div>\n                                    </div>\n                                )}\n                            </div>\n                            )}\n\n                            <button className=\"btn loan-btn-go-table\" onClick={this.handleAmortizationAction}>\n                                {showAmortization ? translations.hideAmortizationBtnText : translations.showAmortizationBtnText }\n                                <i className={showAmortization ? \"arrow up\" : \"arrow down\"}></i>\n                            </button>\n                        </div>\n                    )}\n\n                    { this.state.showResults && (\n                        <div className=\"col-xs-12 col-xl-10 mt-4 mb-5 mobile-padding-0\">\n                            <div className=\"Collapsible\">\n                                <div className=\"Collapsible__trigger\" onClick={this.handleExtraPaymentFields} >\n                                    { this.state.showExtraPayments ?\n                                        (<span>{translations.hideExtraPayments} <i className=\"arrow up\"></i></span>) :\n                                        (<span>{translations.showExtraPayments} <i className=\"arrow down\"></i></span>)\n                                    }\n                                </div>\n\n                                <div className={ `container pb-4 Collapsible__contentOuter ${this.state.showExtraPayments ? \"is-open\" : \"is-closed\"}` }>\n                                    <div className=\"row no-gutters\">\n                                        <div className=\"col-xs-12 mt-3 mb-3\">\n                                            <p className=\"extra-fields-label\">{translations.extraPaymentsText1}</p>\n                                            {/* <p>Note: <em>Choose one option below or any combination of options</em> to calculate the impact of extra mortgage loan payments. If you fill in all of the options, the amounts shown will be recalculated with the assumption you are choosing to use all three repayment options together.</p> */}\n                                        </div>\n                                    </div>\n                                    <div className=\"row form-group no-gutters extra-payments-row trbg-lblue\">\n                                        <Tooltip content={ translations.extraPaymentHelp1 } />\n                                        <div className=\"col-md-3\">\n                                            <InputGroup\n                                                id='extraMonthlyAmount'\n                                                name='extraMonthlyAmount'\n                                                value={extraMonthlyAmount}\n                                                icon='$'\n                                                iconPosition='left'\n                                                onChange={this.handleChange}\n                                            />\n                                        </div>\n                                        <div className=\"col-sm-8 p-15\">\n                                            <label htmlFor=\"extraMonthlyAmount\" className=\"extra-fields-label dark-label\">{translations.extraPaymentLabel1}</label>\n                                        </div>\n                                    </div>\n                                    <div className=\"row form-group no-gutters extra-payments-row mt-4 trbg-lsky\">\n                                        <Tooltip content={ translations.extraPaymentHelp2 } />\n                                        <div className=\"col-md-3\">\n                                            <InputGroup\n                                                id='extra_yearly_amount'\n                                                name='extra_yearly_amount'\n                                                value={extra_yearly_amount}\n                                                icon='$'\n                                                iconPosition='left'\n                                                onChange={this.handleChange}\n                                            />\n                                        </div>\n                                        <div className=\"col-md-6 p-15\">\n                                            <label htmlFor=\"extra_yearly_amount\" className=\"extra-fields-label dark-label\">{translations.extraPaymentLabel2}</label>\n                                        </div>\n                                        <div className=\"col-md-3\">\n                                            <Dropdown\n                                                name=\"extraYearlyMonths\"\n                                                list={extraYearlyMonths}\n                                                handleBPSelect={this.handleBPSelect}\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"row form-group no-gutters extra-payments-row mt-4 trbg-lgreen\">\n                                        <Tooltip content={ translations.extraPaymentHelp3 } />\n                                        <div className=\"col-md-3\">\n                                            <InputGroup\n                                                id='extra_lump_amount'\n                                                name='extra_lump_amount'\n                                                value={extra_lump_amount}\n                                                icon='$'\n                                                iconPosition='left'\n                                                onChange={this.handleChange}\n                                            />\n                                        </div>\n                                        <div className=\"col-md-4 p-15\">\n                                            <label htmlFor=\"extra_lump_amount\" className=\"extra-fields-label dark-label\">{translations.extraPaymentLabel3}</label>\n                                        </div>\n                                        <div className=\"col-md-3\">\n                                            <Dropdown\n                                                name=\"extraLumpMonths\"\n                                                list={extraLumpMonths}\n                                                handleBPSelect={this.handleBPSelect}\n                                            />\n                                        </div>\n                                        <div className=\"col-md-2\">\n                                            <Dropdown\n                                                name=\"extraLumpYears\"\n                                                list={extraLumpYears}\n                                                handleBPSelect={this.handleBPSelect}\n                                            />\n                                        </div>\n                                    </div>\n\n                                    <div className={ `row form-group no-gutters ${this.state.showEPayError ? 'show' : 'hide'}` }>\n                                        <div className=\"col-xs-12 text-right\">\n                                            <small className=\"inputErrorText\">{translations.extraLumpError}</small>\n                                        </div>\n                                    </div>\n\n                                    <div className=\"row form-group no-gutters extra-payments-row mt-3\">\n                                        <div className=\"col-xs-12 offset-lg-4 col-sm-12 col-lg-8\">\n                                            <button\n                                                type=\"button\"\n                                                className=\"btn btn-secondary btn-block btn-extra-fields\"\n                                                onClick={this.calculateAmortization}\n                                                disabled={ Number(amount)    < 1 || Number(amount)   > 1000000 || amount === ''   ||\n                                                Number(years)     < 1 || Number(years)    > 100     || years === ''    ||\n                                                Number(months)    < 1 || Number(months)   > 1200    || months === ''   ||\n                                                Number(interest) <= 0 || Number(interest) > 100     || interest === '' }\n                                            >\n                                                {translations.addExtraBtnTitle}\n                                            </button>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                </div>\n\n                {this.state.showResults && this.state.showAmortization && (\n                <div>\n                    <hr className=\"mp-results-line\"/>\n                    <div id=\"mortgagePaymentResults\">\n                        <div className=\"row form-group mb-3\">\n                            <div className=\"col-xs-12 col-sm-6\">\n                                <label htmlFor=\"loan-start-date\" className=\"loan-label\">\n                                    <Tooltip content={ translations.startDateHelpText } /> {translations.startDateText} *\n                                </label>\n\n                                <DatePicker\n                                    id=\"loan-start-date\"\n                                    className=\"form-control\"\n                                    locale={this.state.lan} //could be \"es\"\n                                    minDate={new Date()}\n                                    maxDate={Util.getEndLimitDate(90)}\n                                    selected={this.state.startDate}\n                                    onChange={this.handleDateChange}\n                                    isClearable\n                                    placeholderText={translations.selectDatePlaceholder}\n                                />\n                                <small><i>{translations.dateHelpMessage}</i></small>\n                            </div>\n\n                            <div className={this.state.startDate ? 'col-xs-12 col-sm-6 text-right' : 'hide' }>\n                                <div className=\"pr-4\">\n                                    <h3 className=\"loan-titles\">{translations.estimatedPayoffDate}</h3>\n                                    <div className=\"end-date-result\">\n                                        { translations.fullMonths[this.state.dateToFinish.getMonth()]+' '+this.state.dateToFinish.getDate()+', '+this.state.dateToFinish.getFullYear() }\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"row\">\n                            <div className=\"col-sm-8 relative-loan-wrapper\"><Tooltip content={ translations.amortizationTableHelp } />\n                                <h3>{ translations.amortizationSchedule }</h3>\n                            </div>\n                            <div className=\"col-sm-4\">\n                                <div className=\"with-extrapayment-text\">\n                                    { (this.state.extraMonthlyAmount || this.state.extra_yearly_amount || this.state.extra_lump_amount) ? translations.withExtraPayments : translations.withoutExtraPayments }\n                                </div>\n                            </div>\n                        </div>\n\n                        <div className=\"table-responsive scrolling-table underlined-tbody\">\n                            { this.state.startDate && <Table columns={this.state.tableColumns} data={this.state.tableResults} /> }\n                        </div>\n                        <p className={this.state.startDate ? 'hide' : 'show' }>{ translations.startingDateEmptyText }</p>\n\n                    </div>\n                </div>\n                )}\n\n            </div>\n        );\n\n    }//End of render\n\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie9';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nif (!Array.prototype.findIndex) {\n    Object.defineProperty(Array.prototype, 'findIndex', {\n        value: function(predicate) {\n            // 1. Let O be ? ToObject(this value).\n            if (this == null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n\n            var o = Object(this);\n\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\n            var len = o.length >>> 0;\n\n            // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n            if (typeof predicate !== 'function') {\n                throw new TypeError('predicate must be a function');\n            }\n\n            // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n            var thisArg = arguments[1];\n\n            // 5. Let k be 0.\n            var k = 0;\n\n            // 6. Repeat, while k < len\n            while (k < len) {\n                // a. Let Pk be ! ToString(k).\n                // b. Let kValue be ? Get(O, Pk).\n                // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n                // d. If testResult is true, return k.\n                var kValue = o[k];\n                if (predicate.call(thisArg, kValue, k, o)) {\n                    return k;\n                }\n                // e. Increase k by 1.\n                k++;\n            }\n\n            // 7. Return -1.\n            return -1;\n        },\n        configurable: true,\n        writable: true\n    });\n}\n\n(function(window){\n    const _init = ({\n        selector     = 'vtMortgagePaymentCalc',\n        region       = \"us\",\n        lan          = 'en',\n        btnLabel     = 'Calculate',\n        title        = 'Mortgage Calculator'\n    })=>{\n        let calculator = (<App region={region} lan={lan} btnLabel={btnLabel} title={title}/>);\n        ReactDOM.render( calculator, document.getElementById(selector) );\n    }\n\n    window.VTMortgagePaymentCalculator = { init: _init }\n})(window);\n// ReactDOM.render(<div className=\"container\"><App region=\"us\" lan=\"es\" btnLabel=\"Calculate\" /></div>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}